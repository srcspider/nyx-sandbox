// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.ListIterator = {"": ["i", "list"],
 "super": "Object",
 get$hasNext: function() {
  return this.i < this.list.length;
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var value = this.list[this.i];
  this.i = this.i + 1;
  return value;
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); }
};

$$.Closure = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Closure';
}
};

$$.ConstantMap = {"": ["length>", "_jsObject", "_liblib0$_keys"],
 "super": "Object",
 containsKey$1: function(key) {
  if ($.eqB(key, '__proto__'))
    return false;
  return this._jsObject.hasOwnProperty(key);
},
 operator$index$1: function(key) {
  if (this.containsKey$1(key) !== true)
    return;
  return this._jsObject[key];
},
 forEach$1: function(f) {
  var t1 = this._liblib0$_keys;
  $.getInterceptor(t1).forEach$1(t1, new $.ConstantMap_forEach_anon(f, this));
},
 get$isEmpty: function() {
  return $.eq(this.length, 0);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _throwUnmodifiable$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot modify unmodifiable Map'));
},
 oprator$indexSet$2: function(key, val) {
  return this._throwUnmodifiable$0();
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this._throwUnmodifiable$0();
},
 remove$1: function(key) {
  return this._throwUnmodifiable$0();
},
 clear$0: function() {
  return this._throwUnmodifiable$0();
},
 is$Map: function() { return true; }
};

$$.MetaInfo = {"": ["_tag>", "_tags", "_set>"],
 "super": "Object"
};

$$.JSSyntaxRegExp = {"": ["_liblib0$_pattern", "_multiLine", "_ignoreCase"],
 "super": "Object",
 firstMatch$1: function(str) {
  var m, matchStart, t1, matchEnd;
  m = $.regExpExec(this, $.checkString(str));
  if (m == null)
    return;
  matchStart = m.index;
  t1 = $.get$length($.index(m, 0));
  if (typeof t1 !== 'number')
    throw $.iae(t1);
  matchEnd = matchStart + t1;
  return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchEnd, m);
},
 hasMatch$1: function(str) {
  return $.regExpTest(this, $.checkString(str));
},
 allMatches$1: function(str) {
  $.checkString(str);
  return $._AllMatchesIterable$(this, str);
},
 get$pattern: function() {
  return this._liblib0$_pattern;
},
 get$multiLine: function() {
  return this._multiLine;
},
 get$ignoreCase: function() {
  return this._ignoreCase;
},
 is$JSSyntaxRegExp: true,
 is$RegExp: true
};

$$._MatchImplementation = {"": ["pattern>", "str", "start", "end", "_groups"],
 "super": "Object",
 operator$index$1: function(index) {
  return $.index(this._groups, index);
}
};

$$._AllMatchesIterable = {"": ["_re", "_str"],
 "super": "Object",
 iterator$0: function() {
  return $._AllMatchesIterator$(this._re, this._str);
}
};

$$._AllMatchesIterator = {"": ["_re", "_str", "_liblib0$_next=", "_done"],
 "super": "Object",
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  var next = this._liblib0$_next;
  this._liblib0$_next = null;
  return next;
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); },
 get$hasNext: function() {
  if (this._done)
    return false;
  else if (!(this._liblib0$_next == null))
    return true;
  this._liblib0$_next = this._re.firstMatch$1(this._str);
  if (this._liblib0$_next == null) {
    this._done = true;
    return false;
  } else
    return true;
}
};

$$.StringMatch = {"": ["start", "str", "pattern>"],
 "super": "Object",
 operator$index$1: function(g) {
  return this.group$1(g);
},
 group$1: function(group_) {
  if (!$.eqB(group_, 0))
    throw $.$$throw($.RangeError$value(group_));
  return this.pattern;
}
};

$$.ArgumentError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  if (!(t1 == null))
    return 'Illegal argument(s): ' + $.S(t1);
  return 'Illegal argument(s)';
}
};

$$.RangeError = {"": ["message"],
 "super": "ArgumentError",
 toString$0: function() {
  return 'RangeError: ' + $.S(this.message);
}
};

$$.NoSuchMethodError = {"": ["_receiver", "_memberName", "_arguments", "_namedArguments", "_existingArgumentNames"],
 "super": "Object",
 toString$0: function() {
  var t1, t2, t3, t4, t5, actualParameters, i, formalParameters;
  t1 = {};
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  t1.i_2 = 0;
  t2 = this._arguments;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(1, t1, t2);
  for (; $.ltB(t1.i_2, t2.length); t1.i_2 = $.add(t1.i_2, 1)) {
    if ($.gtB(t1.i_2, 0)) {
      t3 = t1.sb_1;
      $.getInterceptor(t3).add$1(t3, ', ');
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor(t3);
    t5 = t1.i_2;
    if (t5 !== (t5 | 0))
      throw $.iae(t5);
    if (t5 < 0 || t5 >= t2.length)
      throw $.ioore(t5);
    t4.add$1(t3, $.NoSuchMethodError_safeToString(t2[t5]));
  }
  t2 = this._namedArguments;
  if (!(t2 == null))
    $.getInterceptor(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
  t2 = this._existingArgumentNames;
  if (typeof t2 !== 'string' && (typeof t2 !== 'object' || t2 === null || t2.constructor !== Array && !t2.is$JavaScriptIndexingBehavior()))
    return this.toString$0$bailout(2, t1, t2);
  actualParameters = $.toString(t1.sb_1);
  t1.sb_1 = $.StringBuffer_StringBuffer('');
  for (i = 0; i < t2.length; ++i) {
    if (i > 0) {
      t3 = t1.sb_1;
      $.getInterceptor(t3).add$1(t3, ', ');
    }
    t3 = t1.sb_1;
    t4 = $.getInterceptor(t3);
    if (i >= t2.length)
      throw $.ioore(i);
    t4.add$1(t3, t2[i]);
  }
  formalParameters = $.toString(t1.sb_1);
  t2 = this._memberName;
  return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
},
 toString$0$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      t2 = env1;
      t1 = env0;
      break;
    case 2:
      t2 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      t1.sb_1 = $.StringBuffer_StringBuffer('');
      t1.i_2 = 0;
      t2 = this._arguments;
    case 1:
      state0 = 0;
      if (!(t2 == null))
        for (; $.ltB(t1.i_2, $.get$length(t2)); t1.i_2 = $.add(t1.i_2, 1)) {
          if ($.gtB(t1.i_2, 0)) {
            t3 = t1.sb_1;
            $.getInterceptor(t3).add$1(t3, ', ');
          }
          t3 = t1.sb_1;
          $.getInterceptor(t3).add$1(t3, $.NoSuchMethodError_safeToString($.index(t2, t1.i_2)));
        }
      t2 = this._namedArguments;
      if (!(t2 == null))
        $.getInterceptor(t2).forEach$1(t2, new $.NoSuchMethodError_toString_anon(t1));
      t2 = this._existingArgumentNames;
    case 2:
      var t1, t2, t3, actualParameters, i, formalParameters;
      state0 = 0;
      if (t2 == null)
        return 'NoSuchMethodError : method not found: \'' + $.S(this._memberName) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Arguments: [' + $.S(t1.sb_1) + ']';
      else {
        actualParameters = $.toString(t1.sb_1);
        t1.sb_1 = $.StringBuffer_StringBuffer('');
        for (i = 0; $.ltB(i, $.get$length(t2)); ++i) {
          if (i > 0) {
            t3 = t1.sb_1;
            $.getInterceptor(t3).add$1(t3, ', ');
          }
          t3 = t1.sb_1;
          $.getInterceptor(t3).add$1(t3, $.index(t2, i));
        }
        formalParameters = $.toString(t1.sb_1);
        t2 = this._memberName;
        return 'NoSuchMethodError: incorrect number of arguments passed to method named \'' + $.S(t2) + '\'\n' + 'Receiver: ' + $.S($.NoSuchMethodError_safeToString(this._receiver)) + '\n' + 'Tried calling: ' + $.S(t2) + '(' + $.S(actualParameters) + ')\n' + 'Found: ' + $.S(t2) + '(' + $.S(formalParameters) + ')';
      }
  }
}
};

$$.UnsupportedError = {"": ["message>"],
 "super": "Object",
 toString$0: function() {
  return 'Unsupported operation: ' + $.S(this.get$message());
}
};

$$.UnimplementedError = {"": ["message>"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return !(t1 == null) ? 'UnimplementedError: ' + $.S(t1) : 'UnimplementedError';
}
};

$$.StateError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'Bad state: ' + this.message;
}
};

$$.StackOverflowError = {"": [],
 "super": "Object",
 toString$0: function() {
  return 'Stack Overflow';
}
};

$$._ExceptionImplementation = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.message;
  return t1 == null ? 'Exception' : 'Exception: ' + $.S(t1);
}
};

$$.NullPointerException = {"": ["functionName", "arguments"],
 "super": "Object",
 toString$0: function() {
  var t1 = this.functionName;
  if (t1 == null)
    return this.get$exceptionName();
  else
    return $.S(this.get$exceptionName()) + ' : method: \'' + $.S(t1) + '\'\n' + 'Receiver: null\n' + 'Arguments: ' + $.S(this.arguments);
},
 get$exceptionName: function() {
  return 'NullPointerException';
}
};

$$.IllegalJSRegExpException = {"": ["_pattern", "_errmsg"],
 "super": "Object",
 toString$0: function() {
  return 'IllegalJSRegExpException: \'' + $.S(this._pattern) + '\' \'' + this._errmsg + '\'';
}
};

$$.RuntimeError = {"": ["message"],
 "super": "Object",
 toString$0: function() {
  return 'RuntimeError: ' + this.message;
}
};

$$.Function = {"": [],
 "super": "Object"
};

$$.List = {"": [],
 "super": "Object",
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._HashMapImpl = {"": ["_keys", "_values", "_loadLimit", "_numberOfEntries", "_numberOfDeleted"],
 "super": "Object",
 _probeForAdding$1: function(key) {
  var t1, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  t1 = $.get$hashCode(key);
  if (t1 !== (t1 | 0))
    return this._probeForAdding$1$bailout(1, key, t1);
  hash = (t1 & this._keys.length - 1) >>> 0;
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CTC4)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForAdding$1$bailout: function(state0, key, t1) {
  var hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
  hash = $.and(t1, this._keys.length - 1);
  for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null) {
      if (insertionIndex < 0)
        return hash;
      return insertionIndex;
    } else if ($.eqB(existingKey, key))
      return hash;
    else if (insertionIndex < 0 && existingKey === $.CTC4)
      insertionIndex = hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1: function(key) {
  var hash, numberOfProbes, t1, existingKey, numberOfProbes0;
  if (key == null)
    throw $.$$throw($.CTC);
  hash = $.and($.get$hashCode(key), this._keys.length - 1);
  if (hash !== (hash | 0))
    return this._probeForLookup$1$bailout(1, key, hash);
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _probeForLookup$1$bailout: function(state0, key, hash) {
  var numberOfProbes, t1, existingKey, numberOfProbes0;
  for (numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
    t1 = this._keys;
    if (hash !== (hash | 0))
      throw $.iae(hash);
    if (hash < 0 || hash >= t1.length)
      throw $.ioore(hash);
    existingKey = t1[hash];
    if (existingKey == null)
      return -1;
    if ($.eqB(existingKey, key))
      return hash;
    numberOfProbes0 = numberOfProbes + 1;
    hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
  }
},
 _ensureCapacity$0: function() {
  var newNumberOfEntries, capacity, numberOfFreeOrDeleted, t1;
  newNumberOfEntries = this._numberOfEntries + 1;
  if ($.geB(newNumberOfEntries, this._loadLimit)) {
    this._grow$1(this._keys.length * 2);
    return;
  }
  capacity = this._keys.length;
  numberOfFreeOrDeleted = capacity - newNumberOfEntries;
  t1 = this._numberOfDeleted;
  if (t1 > numberOfFreeOrDeleted - t1)
    this._grow$1(capacity);
},
 _grow$1: function(newCapacity) {
  var capacity, oldKeys, oldValues, t1, t2, i, key, value, newIndex, t3;
  capacity = this._keys.length;
  this._loadLimit = $.tdiv(newCapacity * 3, 4);
  oldKeys = this._keys;
  oldValues = this._values;
  this._keys = $._ListImpl_List(newCapacity);
  this._values = $._ListImpl_List(newCapacity);
  for (t1 = oldKeys.length, t2 = oldValues.length, i = 0; i < capacity; ++i) {
    if (i >= t1)
      throw $.ioore(i);
    key = oldKeys[i];
    if (key == null || key === $.CTC4)
      continue;
    if (i >= t2)
      throw $.ioore(i);
    value = oldValues[i];
    newIndex = this._probeForAdding$1(key);
    t3 = this._keys;
    if (newIndex !== (newIndex | 0))
      throw $.iae(newIndex);
    if (newIndex < 0 || newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = key;
    t3 = this._values;
    if (newIndex >= t3.length)
      throw $.ioore(newIndex);
    t3[newIndex] = value;
  }
  this._numberOfDeleted = 0;
},
 clear$0: function() {
  var t1, length$, t2, t3, i;
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  t1 = this._keys;
  length$ = t1.length;
  for (t2 = this._values, t3 = t2.length, i = 0; i < length$; ++i) {
    t1[i] = null;
    if (i >= t3)
      throw $.ioore(i);
    t2[i] = null;
  }
},
 oprator$indexSet$2: function(key, value) {
  var index, t1;
  this._ensureCapacity$0();
  index = this._probeForAdding$1(key);
  t1 = this._keys;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  t1 = t1[index];
  if (t1 == null || t1 === $.CTC4)
    this._numberOfEntries = this._numberOfEntries + 1;
  t1 = this._keys;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = key;
  t1 = this._values;
  if (index >= t1.length)
    throw $.ioore(index);
  t1[index] = value;
},
 operator$index$1: function(key) {
  var index, t1;
  index = this._probeForLookup$1(key);
  if ($.ltB(index, 0))
    return;
  t1 = this._values;
  if (index !== (index | 0))
    throw $.iae(index);
  if (index < 0 || index >= t1.length)
    throw $.ioore(index);
  return t1[index];
},
 putIfAbsent$2: function(key, ifAbsent) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if ($.geB(index, 0)) {
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  }
  value = ifAbsent.call$0();
  this.oprator$indexSet$2(key, value);
  return value;
},
 remove$1: function(key) {
  var index, t1, value;
  index = this._probeForLookup$1(key);
  if (typeof index !== 'number')
    return this.remove$1$bailout(1, index);
  if (index >= 0) {
    this._numberOfEntries = this._numberOfEntries - 1;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC4;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 remove$1$bailout: function(state0, index) {
  var t1, value;
  if ($.geB(index, 0)) {
    this._numberOfEntries = this._numberOfEntries - 1;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    value = t1[index];
    t1[index] = null;
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = $.CTC4;
    this._numberOfDeleted = this._numberOfDeleted + 1;
    return value;
  }
  return;
},
 get$isEmpty: function() {
  return this._numberOfEntries === 0;
},
 get$length: function() {
  return this._numberOfEntries;
},
 forEach$1: function(f) {
  var length$, i, t1, key;
  length$ = this._keys.length;
  for (i = 0; i < length$; ++i) {
    t1 = this._keys;
    if (i >= t1.length)
      throw $.ioore(i);
    key = t1[i];
    if (!(key == null) && !(key === $.CTC4)) {
      t1 = this._values;
      if (i >= t1.length)
        throw $.ioore(i);
      f.call$2(key, t1[i]);
    }
  }
},
 containsKey$1: function(key) {
  return !$.eqB(this._probeForLookup$1(key), -1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _HashMapImpl$0: function() {
  this._numberOfEntries = 0;
  this._numberOfDeleted = 0;
  this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
  this._keys = $._ListImpl_List(8);
  this._values = $._ListImpl_List(8);
},
 is$Map: function() { return true; }
};

$$._DeletedKeySentinel = {"": [],
 "super": "Object"
};

$$._KeyValuePair = {"": ["key>", "value="],
 "super": "Object"
};

$$._LinkedHashMapImpl = {"": ["_list", "_map"],
 "super": "Object",
 oprator$indexSet$2: function(key, value) {
  var t1;
  if (this._map.containsKey$1(key) === true)
    $.index(this._map, key).get$element().set$value(value);
  else {
    t1 = this._list;
    $.getInterceptor(t1).addLast$1(t1, $._KeyValuePair$(key, value));
    $.indexSet(this._map, key, this._list.lastEntry$0());
  }
},
 operator$index$1: function(key) {
  var entry = $.index(this._map, key);
  if (entry == null)
    return;
  return entry.get$element().get$value();
},
 remove$1: function(key) {
  var entry = this._map.remove$1(key);
  if (entry == null)
    return;
  entry.remove$0();
  return entry.get$element().get$value();
},
 putIfAbsent$2: function(key, ifAbsent) {
  var value = this.operator$index$1(key);
  if (this.operator$index$1(key) == null && this._map.containsKey$1(key) !== true) {
    value = ifAbsent.call$0();
    this.oprator$indexSet$2(key, value);
  }
  return value;
},
 forEach$1: function(f) {
  var t1 = this._list;
  $.getInterceptor(t1).forEach$1(t1, new $._LinkedHashMapImpl_forEach_anon(f));
},
 containsKey$1: function(key) {
  return this._map.containsKey$1(key);
},
 get$length: function() {
  return $.get$length(this._map);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
},
 clear$0: function() {
  var t1 = this._map;
  $.getInterceptor(t1).clear$0(t1);
  t1 = this._list;
  $.getInterceptor(t1).clear$0(t1);
},
 toString$0: function() {
  return $.Maps_mapToString(this);
},
 _LinkedHashMapImpl$0: function() {
  this._map = $.HashMap_HashMap();
  this._list = $.DoubleLinkedQueue$();
},
 is$Map: function() { return true; }
};

$$.Object = {"": [],
 "super": "",
 operator$eq$1: function(other) {
  return this === other;
},
 get$hashCode: function() {
  return $.Primitives_objectHashCode(this);
},
 toString$0: function() {
  return $.Primitives_objectToString(this);
}
};

$$.DoubleLinkedQueueEntry = {"": ["_previous<", "_next=", "_element>"],
 "super": "Object",
 _link$2: function(p, n) {
  this._next = n;
  this._previous = p;
  p.set$_next(this);
  n.set$_previous(this);
},
 prepend$1: function(e) {
  $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
},
 remove$0: function() {
  var t1 = this._next;
  this._previous.set$_next(t1);
  t1 = this._previous;
  this._next.set$_previous(t1);
  this._next = null;
  this._previous = null;
  return this._element;
},
 _asNonSentinelEntry$0: function() {
  return this;
},
 previousEntry$0: function() {
  return this._previous._asNonSentinelEntry$0();
},
 get$element: function() {
  return this._element;
},
 DoubleLinkedQueueEntry$1: function(e) {
  this._element = e;
}
};

$$._DoubleLinkedQueueEntrySentinel = {"": ["_previous", "_next", "_element"],
 "super": "DoubleLinkedQueueEntry",
 remove$0: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _asNonSentinelEntry$0: function() {
  return;
},
 get$element: function() {
  throw $.$$throw($.StateError$('Empty queue'));
},
 _DoubleLinkedQueueEntrySentinel$0: function() {
  this._link$2(this, this);
}
};

$$.DoubleLinkedQueue = {"": ["_sentinel"],
 "super": "Object",
 addLast$1: function(value) {
  this._sentinel.prepend$1(value);
},
 add$1: function(value) {
  this._sentinel.prepend$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    this._sentinel.prepend$1(t2);
  }
},
 removeLast$0: function() {
  return this._sentinel._previous.remove$0();
},
 get$last: function() {
  return this._sentinel._previous.get$element();
},
 lastEntry$0: function() {
  return this._sentinel.previousEntry$0();
},
 get$length: function() {
  var t1 = {};
  t1.counter_1 = 0;
  this.forEach$1(new $.DoubleLinkedQueue_length_anon(t1));
  return t1.counter_1;
},
 get$isEmpty: function() {
  var t1 = this._sentinel;
  return t1._next === t1;
},
 clear$0: function() {
  var t1 = this._sentinel;
  t1._next = t1;
  t1 = this._sentinel;
  t1._previous = t1;
},
 forEach$1: function(f) {
  var entry, nextEntry;
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    f.call$1(entry.get$_element());
  }
},
 filter$1: function(f) {
  var other, entry, nextEntry;
  other = $.Queue_Queue();
  entry = this._sentinel._next;
  for (; !(entry === this._sentinel); entry = nextEntry) {
    nextEntry = entry.get$_next();
    if (f.call$1(entry.get$_element()) === true)
      $.getInterceptor(other).addLast$1(other, entry.get$_element());
  }
  return other;
},
 iterator$0: function() {
  return $._DoubleLinkedQueueIterator$(this._sentinel);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 DoubleLinkedQueue$0: function() {
  this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
},
 is$Collection: function() { return true; }
};

$$._DoubleLinkedQueueIterator = {"": ["_sentinel", "_currentEntry"],
 "super": "Object",
 get$hasNext: function() {
  return !(this._currentEntry.get$_next() === this._sentinel);
},
 next$0: function() {
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  this._currentEntry = this._currentEntry.get$_next();
  return this._currentEntry.get$element();
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); },
 _DoubleLinkedQueueIterator$1: function(_sentinel) {
  this._currentEntry = this._sentinel;
}
};

$$._HashSetImpl = {"": ["_backingMap>"],
 "super": "Object",
 clear$0: function() {
  var t1 = this._backingMap;
  $.getInterceptor(t1).clear$0(t1);
},
 add$1: function(value) {
  this._backingMap.oprator$indexSet$2(value, value);
},
 contains$1: function(value) {
  return this._backingMap.containsKey$1(value);
},
 remove$1: function(value) {
  if (this._backingMap.containsKey$1(value) !== true)
    return false;
  this._backingMap.remove$1(value);
  return true;
},
 addAll$1: function(collection) {
  $.getInterceptor(collection).forEach$1(collection, new $._HashSetImpl_addAll_anon(this));
},
 forEach$1: function(f) {
  var t1 = this._backingMap;
  $.getInterceptor(t1).forEach$1(t1, new $._HashSetImpl_forEach_anon(f));
},
 filter$1: function(f) {
  var result, t1;
  result = $.Set_Set();
  t1 = this._backingMap;
  $.getInterceptor(t1).forEach$1(t1, new $._HashSetImpl_filter_anon(result, f));
  return result;
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._backingMap);
},
 get$length: function() {
  return $.get$length(this._backingMap);
},
 iterator$0: function() {
  return $._HashSetIterator$(this);
},
 toString$0: function() {
  return $.Collections_collectionToString(this);
},
 _HashSetImpl$0: function() {
  this._backingMap = $._HashMapImpl$();
},
 is$Collection: function() { return true; }
};

$$._HashSetIterator = {"": ["_entries", "_nextValidIndex"],
 "super": "Object",
 get$hasNext: function() {
  var t1, t2, t3;
  t1 = this._nextValidIndex;
  t2 = this._entries;
  t3 = t2.length;
  if (t1 >= t3)
    return false;
  if (t1 < 0)
    throw $.ioore(t1);
  if (t2[t1] === $.CTC4)
    this._advance$0();
  return this._nextValidIndex < t3;
},
 next$0: function() {
  var t1, t2, res;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._entries;
  t2 = this._nextValidIndex;
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  res = t1[t2];
  this._advance$0();
  return res;
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); },
 _advance$0: function() {
  var t1, length$, t2, entry;
  t1 = this._entries;
  length$ = t1.length;
  do {
    t2 = this._nextValidIndex + 1;
    this._nextValidIndex = t2;
    if (t2 >= length$)
      break;
    t2 = this._nextValidIndex;
    if (t2 < 0 || t2 >= length$)
      throw $.ioore(t2);
    entry = t1[t2];
  } while (entry == null || entry === $.CTC4);
},
 _HashSetIterator$1: function(set_) {
  this._advance$0();
}
};

$$.String = {"": [],
 "super": "Object",
 is$String: true
};

$$._StringBufferImpl = {"": ["_buffer", "_length"],
 "super": "Object",
 get$length: function() {
  return this._length;
},
 get$isEmpty: function() {
  return $.eq(this._length, 0);
},
 add$1: function(obj) {
  var str, t1, t3;
  str = $.toString(obj);
  if (str == null || $.get$isEmpty(str) === true)
    return this;
  t1 = this._buffer;
  $.getInterceptor(t1).add$1(t1, str);
  t1 = this._length;
  if (typeof t1 !== 'number')
    return this.add$1$bailout(1, t1, str);
  t3 = $.get$length(str);
  if (typeof t3 !== 'number')
    return this.add$1$bailout(2, t1, t3);
  this._length = t1 + t3;
  return this;
},
 add$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      str = env1;
      t1 = env0;
      break;
    case 2:
      t3 = env1;
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      str = $.toString(obj);
      if (str == null || $.get$isEmpty(str) === true)
        return this;
      t1 = this._buffer;
      $.getInterceptor(t1).add$1(t1, str);
      t1 = this._length;
    case 1:
      state0 = 0;
      t3 = $.get$length(str);
    case 2:
      var str, t1, t3;
      state0 = 0;
      this._length = $.add(t1, t3);
      return this;
  }
},
 addAll$1: function(objects) {
  var t1;
  for (t1 = $.iterator(objects); t1.get$hasNext() === true;)
    this.add$1(t1.next$0());
  return this;
},
 clear$0: function() {
  this._buffer = $._ListImpl_List(null);
  this._length = 0;
  return this;
},
 toString$0: function() {
  var result, t1;
  if ($.eqB($.get$length(this._buffer), 0))
    return '';
  if ($.eqB($.get$length(this._buffer), 1))
    return $.index(this._buffer, 0);
  result = $.stringJoinUnchecked($.Strings__toJsStringArray(this._buffer), '');
  t1 = this._buffer;
  $.getInterceptor(t1).clear$0(t1);
  t1 = this._buffer;
  $.getInterceptor(t1).add$1(t1, result);
  return result;
},
 _StringBufferImpl$1: function(content$) {
  this.clear$0();
  this.add$1(content$);
}
};

$$.ObjectInterceptor = {"": [],
 "super": "Object",
 removeLast$0: function(receiver) { return receiver.removeLast$0(); },
 add$1: function(receiver, a0) { return receiver.add$1(a0); },
 charCodeAt$1: function(receiver, a0) { return receiver.charCodeAt$1(a0); },
 clear$0: function(receiver) { return receiver.clear$0(); },
 substring$1: function(receiver, a0) { return receiver.substring$1(a0); },
 substring$2: function(receiver, a0, a1) { return receiver.substring$2(a0, a1); },
 toLowerCase$0: function(receiver) { return receiver.toLowerCase$0(); },
 endsWith$1: function(receiver, a0) { return receiver.endsWith$1(a0); },
 replaceAll$2: function(receiver, a0, a1) { return receiver.replaceAll$2(a0, a1); },
 toUpperCase$0: function(receiver) { return receiver.toUpperCase$0(); },
 forEach$1: function(receiver, a0) { return receiver.forEach$1(a0); },
 getRange$2: function(receiver, a0, a1) { return receiver.getRange$2(a0, a1); },
 filter$1: function(receiver, a0) { return receiver.filter$1(a0); },
 trim$0: function(receiver) { return receiver.trim$0(); },
 addLast$1: function(receiver, a0) { return receiver.addLast$1(a0); },
 allMatches$1: function(receiver, a0) { return receiver.allMatches$1(a0); },
 split$1: function(receiver, a0) { return receiver.split$1(a0); },
 startsWith$1: function(receiver, a0) { return receiver.startsWith$1(a0); },
 addAll$1: function(receiver, a0) { return receiver.addAll$1(a0); }
};

$$.JSArray = {"": [],
 "super": "Object",
 add$1: function(receiver, value) {
  $.checkGrowable(receiver, 'add');
  receiver.push(value);
},
 removeLast$0: function(receiver) {
  $.checkGrowable(receiver, 'removeLast');
  if ($.eqB($.get$length(receiver), 0))
    throw $.$$throw($.RangeError$value(-1));
  return receiver.pop();
},
 filter$1: function(receiver, f) {
  return $.Collections_filter(receiver, [], f);
},
 addAll$1: function(receiver, collection) {
  var t1, t2;
  for (t1 = $.iterator(collection); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(receiver).add$1(receiver, t2);
  }
},
 addLast$1: function(receiver, value) {
  $.checkGrowable(receiver, 'addLast');
  receiver.push(value);
},
 clear$0: function(receiver) {
  $.set$length(receiver, 0);
},
 forEach$1: function(receiver, f) {
  return $.Collections_forEach(receiver, f);
},
 getRange$2: function(receiver, start, length$) {
  var t1, end;
  if (0 === length$)
    return [];
  $.checkNull(start);
  $.checkNull(length$);
  if (!(typeof start === 'number' && Math.floor(start) === start))
    throw $.$$throw($.ArgumentError$(start));
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$))
    throw $.$$throw($.ArgumentError$(length$));
  t1 = length$ < 0;
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  end = start + length$;
  if ($.gtB(end, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(length$));
  if (t1)
    throw $.$$throw($.ArgumentError$(length$));
  return receiver.slice(start, end);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.JSString = {"": [],
 "super": "Object",
 charCodeAt$1: function(receiver, index) {
  if (!(typeof index === 'number'))
    throw $.$$throw($.ArgumentError$(index));
  if (index < 0)
    throw $.$$throw($.RangeError$value(index));
  if ($.geB(index, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(index));
  return receiver.charCodeAt(index);
},
 allMatches$1: function(receiver, str) {
  $.checkString(str);
  return $.allMatchesInStringUnchecked(receiver, str);
},
 endsWith$1: function(receiver, other) {
  var otherLength;
  $.checkString(other);
  otherLength = $.get$length(other);
  if ($.gtB(otherLength, $.get$length(receiver)))
    return false;
  return $.eq(other, this.substring$1(receiver, $.sub($.get$length(receiver), otherLength)));
},
 replaceAll$2: function(receiver, from, to) {
  $.checkString(to);
  return $.stringReplaceAllUnchecked(receiver, from, to);
},
 split$1: function(receiver, pattern) {
  $.checkNull(pattern);
  return $.stringSplitUnchecked(receiver, pattern);
},
 startsWith$1: function(receiver, other) {
  var otherLength;
  $.checkString(other);
  otherLength = $.get$length(other);
  if ($.gtB(otherLength, $.get$length(receiver)))
    return false;
  return other == receiver.substring(0, otherLength);
},
 substring$2: function(receiver, startIndex, endIndex) {
  $.checkNum(startIndex);
  if (endIndex == null)
    endIndex = $.get$length(receiver);
  $.checkNum(endIndex);
  if ($.ltB(startIndex, 0))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(startIndex, endIndex))
    throw $.$$throw($.RangeError$value(startIndex));
  if ($.gtB(endIndex, $.get$length(receiver)))
    throw $.$$throw($.RangeError$value(endIndex));
  return receiver.substring(startIndex, endIndex);
},
 substring$1: function($,startIndex) {
  return this.substring$2($,startIndex,null)
},
 toLowerCase$0: function(receiver) {
  return receiver.toLowerCase();
},
 toUpperCase$0: function(receiver) {
  return receiver.toUpperCase();
},
 trim$0: function(receiver) {
  return receiver.trim();
},
 is$String: true
};

$$.SearchText = {"": ["text>", "lowerCase", "camelCase"],
 "super": "Object",
 get$length: function() {
  return $.get$length(this.text);
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
}
};

$$.StringMatch0 = {"": ["searchText", "text>", "matchOffset>", "matchEnd>"],
 "super": "Object",
 toHtml$0: function() {
  var t1 = this.text;
  return $.S($.getInterceptor(t1).substring$2(t1, 0, this.matchOffset)) + '<span class="drop-down-link-highlight">' + $.S(this.get$matchText()) + '</span>' + $.S($.getInterceptor(t1).substring$1(t1, this.matchEnd));
},
 get$matchText: function() {
  var t1 = this.text;
  return $.getInterceptor(t1).substring$2(t1, this.matchOffset, this.matchEnd);
},
 get$isFullMatch: function() {
  return $.eq(this.text, this.searchText.text);
},
 get$isExactMatch: function() {
  return $.eq(this.get$matchText(), this.searchText.text);
},
 get$isCamelCaseMatch: function() {
  return $.eq(this.get$matchText(), this.searchText.camelCase);
}
};

$$.Result = {"": ["prefix>", "match>", "library", "type>", "args", "kind>", "url>", "noargs", "row>"],
 "super": "Object",
 get$isTopLevel: function() {
  return this.prefix == null && this.type == null;
},
 addRow$1: function(table) {
  var t1, t2, sb;
  if (!(this.row == null))
    return;
  t1 = new $.Result_addRow_clickHandler(this);
  this.row = table.insertRow$1($.get$length(table.get$rows()));
  t2 = this.row.get$classes();
  $.getInterceptor(t2).add$1(t2, 'drop-down-link-tr');
  t2 = this.row.get$on().get$mouseDown();
  $.getInterceptor(t2).add$1(t2, new $.Result_addRow_anon());
  t2 = this.row.get$on().get$click();
  $.getInterceptor(t2).add$1(t2, t1);
  t1 = this.row.get$on().get$mouseUp();
  $.getInterceptor(t1).add$1(t1, new $.Result_addRow_anon0());
  sb = $.StringBuffer_StringBuffer('');
  $.getInterceptor(sb).add$1(sb, '<td class="drop-down-link-td">');
  $.getInterceptor(sb).add$1(sb, '<table class="drop-down-table"><tr><td colspan="2">');
  t1 = this.kind;
  if (typeof t1 !== 'string')
    return this.addRow$1$bailout(1, sb, t1);
  if (t1 === 'getter')
    $.getInterceptor(sb).add$1(sb, 'get ');
  else if (t1 === 'setter')
    $.getInterceptor(sb).add$1(sb, 'set ');
  $.getInterceptor(sb).add$1(sb, this.match.toHtml$0());
  if (t1 === 'class' || t1 === 'interface' || t1 === 'typedef')
    $.getInterceptor(sb).add$1(sb, this.args);
  else if (t1 === 'constructor' || t1 === 'method')
    if (this.noargs === true)
      $.getInterceptor(sb).add$1(sb, '()');
    else
      $.getInterceptor(sb).add$1(sb, '(...)');
  $.getInterceptor(sb).add$1(sb, '</td></tr><tr><td class="drop-down-link-kind">');
  $.getInterceptor(sb).add$1(sb, $.kindToString(t1));
  t1 = this.prefix;
  if (!(t1 == null)) {
    $.getInterceptor(sb).add$1(sb, ' in ');
    $.getInterceptor(sb).add$1(sb, t1.toHtml$0());
    $.getInterceptor(sb).add$1(sb, this.args);
  } else {
    t1 = this.type;
    if (!(t1 == null)) {
      $.getInterceptor(sb).add$1(sb, ' in ');
      $.getInterceptor(sb).add$1(sb, t1);
      $.getInterceptor(sb).add$1(sb, this.args);
    }
  }
  $.getInterceptor(sb).add$1(sb, '</td><td class="drop-down-link-library">');
  t1 = this.library;
  if (!(t1 == null))
    $.getInterceptor(sb).add$1(sb, 'library ' + $.S(t1));
  $.getInterceptor(sb).add$1(sb, '</td></tr></table></td>');
  t1 = $.toString(sb);
  this.row.set$innerHTML(t1);
},
 addRow$1$bailout: function(state0, sb, t1) {
  if ($.eqB(t1, 'getter'))
    $.getInterceptor(sb).add$1(sb, 'get ');
  else if ($.eqB(t1, 'setter'))
    $.getInterceptor(sb).add$1(sb, 'set ');
  $.getInterceptor(sb).add$1(sb, this.match.toHtml$0());
  if ($.eqB(t1, 'class') || $.eqB(t1, 'interface') || $.eqB(t1, 'typedef'))
    $.getInterceptor(sb).add$1(sb, this.args);
  else if ($.eqB(t1, 'constructor') || $.eqB(t1, 'method'))
    if (this.noargs === true)
      $.getInterceptor(sb).add$1(sb, '()');
    else
      $.getInterceptor(sb).add$1(sb, '(...)');
  $.getInterceptor(sb).add$1(sb, '</td></tr><tr><td class="drop-down-link-kind">');
  $.getInterceptor(sb).add$1(sb, $.kindToString(t1));
  t1 = this.prefix;
  if (!(t1 == null)) {
    $.getInterceptor(sb).add$1(sb, ' in ');
    $.getInterceptor(sb).add$1(sb, t1.toHtml$0());
    $.getInterceptor(sb).add$1(sb, this.args);
  } else {
    t1 = this.type;
    if (!(t1 == null)) {
      $.getInterceptor(sb).add$1(sb, ' in ');
      $.getInterceptor(sb).add$1(sb, t1);
      $.getInterceptor(sb).add$1(sb, this.args);
    }
  }
  $.getInterceptor(sb).add$1(sb, '</td><td class="drop-down-link-library">');
  t1 = this.library;
  if (!(t1 == null))
    $.getInterceptor(sb).add$1(sb, 'library ' + $.S(t1));
  $.getInterceptor(sb).add$1(sb, '</td></tr></table></td>');
  t1 = $.toString(sb);
  this.row.set$innerHTML(t1);
}
};

$$.AbstractWorkerEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.AudioContextEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.BatteryManagerEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.BodyElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); }
};

$$.DOMApplicationCacheEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.DedicatedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents"
};

$$.DocumentEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$change: function() {
  return this.operator$index$1('change');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
}
};

$$._FrozenCssClassSet = {"": [],
 "super": "CssClassSet",
 writeClasses$1: function(s) {
  throw $.$$throw($.UnsupportedError$('frozen class set cannot be modified'));
},
 readClasses$0: function() {
  return $.Set_Set();
}
};

$$._ChildrenElementList = {"": ["_liblib$_element>", "_childElements"],
 "super": "Object",
 _toList$0: function() {
  var t1, t3, output, len, i, t2;
  t1 = this._childElements;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this._toList$0$bailout(1, t1);
  t3 = t1.length;
  output = $._ListImpl_List(t3);
  for (len = t1.length, i = 0; i < len; ++i) {
    t2 = t1[i];
    if (i >= t3)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 _toList$0$bailout: function(state0, t1) {
  var output, len, i, t2;
  output = $._ListImpl_List($.get$length(t1));
  for (len = $.get$length(t1), i = 0; $.ltB(i, len); ++i) {
    t2 = $.index(t1, i);
    if (i >= output.length)
      throw $.ioore(i);
    output[i] = t2;
  }
  return output;
},
 contains$1: function(element) {
  return $.contains$1(this._childElements, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this._childElements); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var output, t1, t2;
  output = [];
  t1 = new $._ChildrenElementList_filter_anon(output, f);
  for (t2 = $.iterator(this._childElements); t2.get$hasNext() === true;)
    t1.call$1(t2.next$0());
  return $._FrozenElementList$_wrap(output);
},
 get$isEmpty: function() {
  return this._liblib$_element.get$$$dom_firstElementChild() == null;
},
 get$length: function() {
  return $.get$length(this._childElements);
},
 operator$index$1: function(index) {
  return $.index(this._childElements, index);
},
 oprator$indexSet$2: function(index, value) {
  this._liblib$_element.$$dom_replaceChild$2(value, $.index(this._childElements, index));
},
 set$length: function(newLength) {
  throw $.$$throw($.UnsupportedError$(''));
},
 add$1: function(value) {
  this._liblib$_element.$$dom_appendChild$1(value);
  return value;
},
 addLast$1: function(value) {
  this._liblib$_element.$$dom_appendChild$1(value);
  return value;
},
 iterator$0: function() {
  return $.iterator(this._toList$0());
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection), t2 = this._liblib$_element; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('TODO(jacobr): should we impl?'));
},
 getRange$2: function(start, rangeLength) {
  return $._FrozenElementList$_wrap($._Lists_getRange(this, start, rangeLength, []));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  this._liblib$_element.set$text('');
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._liblib$_element.$$dom_removeChild$1(result);
  return result;
},
 get$last: function() {
  return this._liblib$_element.get$$$dom_lastElementChild();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementList = {"": ["_nodeList"],
 "super": "Object",
 contains$1: function(element) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
},
 filter$1: function(f) {
  var out, t1, t2;
  out = [];
  for (t1 = $.iterator(this); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      $.getInterceptor(out).add$1(out, t2);
  }
  return out;
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._nodeList);
},
 get$length: function() {
  return $.get$length(this._nodeList);
},
 operator$index$1: function(index) {
  return $.index(this._nodeList, index);
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 set$length: function(newLength) {
  $.set$length(this._nodeList, newLength);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$(''));
},
 iterator$0: function() {
  return $._FrozenElementListIterator$(this);
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$(''));
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$(''));
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._nodeList;
  return $._FrozenElementList$_wrap($.getInterceptor(t1).getRange$2(t1, start, rangeLength));
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._nodeList, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  throw $.$$throw($.UnsupportedError$(''));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$(''));
},
 get$last: function() {
  return $.get$last(this._nodeList);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._FrozenElementListIterator = {"": ["_liblib$_list", "_index"],
 "super": "Object",
 next$0: function() {
  var t1, t2;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._liblib$_list;
  t2 = this._index;
  this._index = t2 + 1;
  return t1.operator$index$1(t2);
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); },
 get$hasNext: function() {
  return $.lt(this._index, $.get$length(this._liblib$_list));
}
};

$$.AttributeMap = {"": [],
 "super": "Object",
 is$Map: function() { return true; }
};

$$._ElementAttributeMap = {"": ["_liblib$_element>"],
 "super": "AttributeMap",
 containsKey$1: function(key) {
  return this._liblib$_element.$$dom_hasAttribute$1(key);
},
 operator$index$1: function(key) {
  return this._liblib$_element.$$dom_getAttribute$1(key);
},
 oprator$indexSet$2: function(key, value) {
  this._liblib$_element.$$dom_setAttribute$2(key, $.S(value));
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this._liblib$_element.$$dom_hasAttribute$1(key) !== true)
    this.oprator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var t1, value;
  t1 = this._liblib$_element;
  value = t1.$$dom_getAttribute$1(key);
  t1.$$dom_removeAttribute$1(key);
  return value;
},
 clear$0: function() {
  var attributes, i;
  attributes = this._liblib$_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.clear$0$bailout(1, attributes);
  for (i = attributes.length - 1; i >= 0; --i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    this.remove$1(attributes[i].get$name());
  }
},
 clear$0$bailout: function(state0, attributes) {
  var i;
  for (i = $.sub($.get$length(attributes), 1); $.geB(i, 0); i = $.sub(i, 1))
    this.remove$1($.index(attributes, i).get$name());
},
 forEach$1: function(f) {
  var attributes, len, i, item;
  attributes = this._liblib$_element.get$$$dom_attributes();
  if (typeof attributes !== 'string' && (typeof attributes !== 'object' || attributes === null || attributes.constructor !== Array && !attributes.is$JavaScriptIndexingBehavior()))
    return this.forEach$1$bailout(1, f, attributes);
  for (len = attributes.length, i = 0; i < len; ++i) {
    if (i >= attributes.length)
      throw $.ioore(i);
    item = attributes[i];
    f.call$2(item.get$name(), item.get$value());
  }
},
 forEach$1$bailout: function(state0, f, attributes) {
  var len, i, item;
  for (len = $.get$length(attributes), i = 0; $.ltB(i, len); ++i) {
    item = $.index(attributes, i);
    f.call$2(item.get$name(), item.get$value());
  }
},
 get$length: function() {
  return $.get$length(this._liblib$_element.get$$$dom_attributes());
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
}
};

$$._DataAttributeMap = {"": ["$$dom_attributes"],
 "super": "AttributeMap",
 containsKey$1: function(key) {
  return this.$$dom_attributes.containsKey$1('data-' + $.S(key));
},
 operator$index$1: function(key) {
  return $.index(this.$$dom_attributes, 'data-' + $.S(key));
},
 oprator$indexSet$2: function(key, value) {
  $.indexSet(this.$$dom_attributes, 'data-' + $.S(key), $.S(value));
},
 putIfAbsent$2: function(key, ifAbsent) {
  return this.$$dom_attributes.putIfAbsent$2('data-' + key, ifAbsent);
},
 remove$1: function(key) {
  return this.$$dom_attributes.remove$1('data-' + key);
},
 clear$0: function() {
  var t1, t2;
  for (t1 = $.iterator(this.get$keys()), t2 = this.$$dom_attributes; t1.get$hasNext() === true;)
    t2.remove$1('data-' + $.S(t1.next$0()));
},
 forEach$1: function(f) {
  var t1 = this.$$dom_attributes;
  $.getInterceptor(t1).forEach$1(t1, new $._DataAttributeMap_forEach_anon(f, this));
},
 get$keys: function() {
  var keys, t1;
  keys = $._ListImpl_List(null);
  t1 = this.$$dom_attributes;
  $.getInterceptor(t1).forEach$1(t1, new $._DataAttributeMap_keys_anon(keys, this));
  return keys;
},
 get$length: function() {
  return $.get$length(this.get$keys());
},
 get$isEmpty: function() {
  return $.eq(this.get$length(), 0);
}
};

$$._ElementCssClassSet = {"": ["_liblib$_element>"],
 "super": "CssClassSet",
 readClasses$0: function() {
  var s, classname, t1, t2, trimmed;
  s = $.Set_Set();
  classname = this._liblib$_element.get$$$dom_className();
  for (t1 = $.iterator($.getInterceptor(classname).split$1(classname, ' ')); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    trimmed = $.getInterceptor(t2).trim$0(t2);
    if ($.get$isEmpty(trimmed) !== true)
      $.getInterceptor(s).add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var t1 = $.Strings_join($._ListImpl_List$from(s), ' ');
  this._liblib$_element.set$$$dom_className(t1);
}
};

$$.ElementEvents = {"": ["_ptr"],
 "super": "Events",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$change: function() {
  return this.operator$index$1('change');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
}
};

$$.EventSourceEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.Events = {"": ["_ptr"],
 "super": "Object",
 operator$index$1: function(type) {
  return $.EventListenerList$(this._ptr, type);
}
};

$$.EventListenerList = {"": ["_ptr", "_type"],
 "super": "Object",
 add$2: function(listener, useCapture) {
  this._ptr.$$dom_addEventListener$3(this._type, listener, useCapture);
  return this;
},
 add$1: function(listener) {
  return this.add$2(listener,false)
},
 remove$2: function(listener, useCapture) {
  this._ptr.$$dom_removeEventListener$3(this._type, listener, useCapture);
  return this;
},
 remove$1: function(listener) {
  return this.remove$2(listener,false)
}
};

$$.FileReaderEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.FileWriterEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.FrameSetElementEvents = {"": ["_ptr"],
 "super": "ElementEvents",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); }
};

$$.HttpRequestEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.HttpRequestUploadEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.IDBDatabaseEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.IDBOpenDBRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.IDBRequestEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.IDBTransactionEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.IDBVersionChangeRequestEvents = {"": ["_ptr"],
 "super": "IDBRequestEvents"
};

$$.InputElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.LocalWindowEvents = {"": ["_ptr"],
 "super": "Events",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$change: function() {
  return this.operator$index$1('change');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
}
};

$$.MediaElementEvents = {"": ["_ptr"],
 "super": "ElementEvents"
};

$$.MediaStreamEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MediaStreamTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.MessagePortEvents = {"": ["_ptr"],
 "super": "Events"
};

$$._ChildNodeListLazy = {"": ["_this"],
 "super": "Object",
 get$last: function() {
  return this._this.lastChild;
},
 add$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._this.$$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection), t2 = this._this; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = this.get$last();
  if (!(result == null))
    this._this.$$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._this.set$text('');
},
 oprator$indexSet$2: function(index, value) {
  this._this.$$dom_replaceChild$2(value, this.operator$index$1(index));
},
 iterator$0: function() {
  return $.iterator(this._this.get$$$dom_childNodes());
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 get$length: function() {
  return $.get$length(this._this.get$$$dom_childNodes());
},
 operator$index$1: function(index) {
  return $.index(this._this.get$$$dom_childNodes(), index);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._ListWrapper = {"": [],
 "super": "Object",
 iterator$0: function() {
  return $.iterator(this._liblib$_list);
},
 contains$1: function(element) {
  return $.contains$1(this._liblib$_list, element);
},
 forEach$1: function(f) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).forEach$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this._liblib$_list);
},
 get$length: function() {
  return $.get$length(this._liblib$_list);
},
 operator$index$1: function(index) {
  return $.index(this._liblib$_list, index);
},
 oprator$indexSet$2: function(index, value) {
  $.indexSet(this._liblib$_list, index, value);
},
 set$length: function(newLength) {
  $.set$length(this._liblib$_list, newLength);
},
 add$1: function(value) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).add$1(t1, value);
},
 addLast$1: function(value) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).addLast$1(t1, value);
},
 addAll$1: function(collection) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).addAll$1(t1, collection);
},
 sort$1: function(compare) {
  return $.sort$1(this._liblib$_list, compare);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this._liblib$_list, element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 clear$0: function() {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).clear$0(t1);
},
 removeLast$0: function() {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).removeLast$0(t1);
},
 get$last: function() {
  return $.get$last(this._liblib$_list);
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._liblib$_list;
  return $.getInterceptor(t1).getRange$2(t1, start, rangeLength);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._NodeListWrapper = {"": ["_liblib$_list"],
 "super": "_ListWrapper",
 filter$1: function(f) {
  var t1 = this._liblib$_list;
  return $._NodeListWrapper$($.getInterceptor(t1).filter$1(t1, f));
},
 getRange$2: function(start, rangeLength) {
  var t1 = this._liblib$_list;
  return $._NodeListWrapper$($.getInterceptor(t1).getRange$2(t1, start, rangeLength));
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$.NotificationEvents = {"": ["_ptr"],
 "super": "Events",
 get$click: function() {
  return this.operator$index$1('click');
}
};

$$.PeerConnection00Events = {"": ["_ptr"],
 "super": "Events"
};

$$.RTCDataChannelEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.RTCPeerConnectionEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.ScriptProcessorNodeEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.SharedWorkerContextEvents = {"": ["_ptr"],
 "super": "WorkerContextEvents"
};

$$.SpeechRecognitionEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackCueEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.TextTrackListEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.WebSocketEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.WorkerEvents = {"": ["_ptr"],
 "super": "AbstractWorkerEvents"
};

$$.WorkerContextEvents = {"": ["_ptr"],
 "super": "Events"
};

$$.CssClassSet = {"": [],
 "super": "Object",
 toString$0: function() {
  return $.Strings_join($._ListImpl_List$from(this.readClasses$0()), ' ');
},
 iterator$0: function() {
  return $.iterator(this.readClasses$0());
},
 forEach$1: function(f) {
  var t1 = this.readClasses$0();
  $.getInterceptor(t1).forEach$1(t1, f);
},
 filter$1: function(f) {
  var t1 = this.readClasses$0();
  return $.getInterceptor(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this.readClasses$0());
},
 get$length: function() {
  return $.get$length(this.readClasses$0());
},
 contains$1: function(value) {
  return $.contains$1(this.readClasses$0(), value);
},
 add$1: function(value) {
  this._modify$1(new $.CssClassSet_add_anon(value));
},
 remove$1: function(value) {
  var s, result;
  s = this.readClasses$0();
  result = s.remove$1(value);
  this.writeClasses$1(s);
  return result;
},
 addAll$1: function(collection) {
  this._modify$1(new $.CssClassSet_addAll_anon(collection));
},
 clear$0: function() {
  this._modify$1(new $.CssClassSet_clear_anon());
},
 _modify$1: function(f) {
  var s = this.readClasses$0();
  f.call$1(s);
  this.writeClasses$1(s);
},
 is$Collection: function() { return true; }
};

$$.FilteredElementList = {"": ["_node", "_childNodes"],
 "super": "Object",
 get$_filtered: function() {
  var t1 = this._childNodes;
  return $._ListImpl_List$from($.getInterceptor(t1).filter$1(t1, new $.FilteredElementList__filtered_anon()));
},
 forEach$1: function(f) {
  var t1 = this.get$_filtered();
  $.getInterceptor(t1).forEach$1(t1, f);
},
 oprator$indexSet$2: function(index, value) {
  this.operator$index$1(index).replaceWith$1(value);
},
 set$length: function(newLength) {
  var len = $.get$length(this);
  if ($.geB(newLength, len))
    return;
  else if ($.ltB(newLength, 0))
    throw $.$$throw($.ArgumentError$('Invalid list length'));
  this.removeRange$2($.sub(newLength, 1), $.sub(len, newLength));
},
 add$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor(t1).add$1(t1, value);
},
 get$add: function() { return new $.BoundClosure0(this, 'add$1'); },
 addAll$1: function(collection) {
  $.getInterceptor(collection).forEach$1(collection, this.get$add());
},
 addLast$1: function(value) {
  var t1 = this._childNodes;
  $.getInterceptor(t1).add$1(t1, value);
},
 contains$1: function(element) {
  return false;
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('TODO(jacobr): should we impl?'));
},
 removeRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  t1 = $.getInterceptor(t1).getRange$2(t1, start, rangeLength);
  $.getInterceptor(t1).forEach$1(t1, new $.FilteredElementList_removeRange_anon());
},
 clear$0: function() {
  var t1 = this._childNodes;
  $.getInterceptor(t1).clear$0(t1);
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    result.remove$0();
  return result;
},
 filter$1: function(f) {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).filter$1(t1, f);
},
 get$isEmpty: function() {
  return $.get$isEmpty(this.get$_filtered());
},
 get$length: function() {
  return $.get$length(this.get$_filtered());
},
 operator$index$1: function(index) {
  return $.index(this.get$_filtered(), index);
},
 iterator$0: function() {
  return $.iterator(this.get$_filtered());
},
 getRange$2: function(start, rangeLength) {
  var t1 = this.get$_filtered();
  return $.getInterceptor(t1).getRange$2(t1, start, rangeLength);
},
 indexOf$2: function(element, start) {
  return $.indexOf$2(this.get$_filtered(), element, start);
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return $.get$last(this.get$_filtered());
},
 is$List: function() { return true; },
 is$Collection: function() { return true; }
};

$$._DOMWindowCrossFrame = {"": ["_window"],
 "super": "Object",
 get$location: function() {
  return $._LocationCrossFrame__createSafe(this._window.location);
},
 focus$0: function() {
  return this._window.focus();
},
 get$focus: function() { return new $.BoundClosure(this, 'focus$0'); },
 blur$0: function() {
  return this._window.blur();
},
 get$blur: function() { return new $.BoundClosure(this, 'blur$0'); }
};

$$._LocationCrossFrame = {"": ["_location>"],
 "super": "Object",
 set$href: function(val) {
  return $._LocationCrossFrame__setHref(this._location, val);
},
 is$Location: function() { return true; }
};

$$._LocationWrapper = {"": ["_ptr"],
 "super": "Object",
 set$href: function(value) {
  $._LocationWrapper__set(this._ptr, 'href', value);
},
 toString$0: function() {
  return this._ptr.toString();
},
 is$Location: function() { return true; }
};

$$.FixedSizeListIterator = {"": ["_liblib$_length", "_array", "_pos"],
 "super": "_VariableSizeListIterator",
 get$hasNext: function() {
  return $.gt(this._liblib$_length, this._pos);
}
};

$$._VariableSizeListIterator = {"": [],
 "super": "Object",
 get$hasNext: function() {
  return $.gt($.get$length(this._array), this._pos);
},
 next$0: function() {
  var t1, t3;
  if (this.get$hasNext() !== true)
    throw $.$$throw($.StateError$('No more elements'));
  t1 = this._array;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.next$0$bailout(1, t1);
  t3 = this._pos;
  this._pos = t3 + 1;
  if (t3 < 0 || t3 >= t1.length)
    throw $.ioore(t3);
  return t1[t3];
},
 next$0$bailout: function(state0, t1) {
  var t3 = this._pos;
  this._pos = t3 + 1;
  return $.index(t1, t3);
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); }
};

$$._AttributeClassSet = {"": ["_liblib1$_element>"],
 "super": "CssClassSet",
 readClasses$0: function() {
  var classname, s, t1, t2, trimmed;
  classname = $.index(this._liblib1$_element.get$attributes(), 'class');
  s = $.Set_Set();
  if (classname == null)
    return s;
  for (t1 = $.iterator($.getInterceptor(classname).split$1(classname, ' ')); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    trimmed = $.getInterceptor(t2).trim$0(t2);
    if ($.get$isEmpty(trimmed) !== true)
      $.getInterceptor(s).add$1(s, trimmed);
  }
  return s;
},
 writeClasses$1: function(s) {
  var list = $._ListImpl_List$from(s);
  $.indexSet(this._liblib1$_element.get$attributes(), 'class', $.Strings_join(list, ' '));
}
};

$$.SVGElementInstanceEvents = {"": ["_ptr"],
 "super": "Events",
 get$blur: function() {
  return this.operator$index$1('blur');
},
 get$change: function() {
  return this.operator$index$1('change');
},
 get$click: function() {
  return this.operator$index$1('click');
},
 get$focus: function() {
  return this.operator$index$1('focus');
},
 focus$0: function() { return this.get$focus().call$0(); },
 get$keyDown: function() {
  return this.operator$index$1('keydown');
},
 get$keyUp: function() {
  return this.operator$index$1('keyup');
},
 get$mouseDown: function() {
  return this.operator$index$1('mousedown');
},
 get$mouseUp: function() {
  return this.operator$index$1('mouseup');
},
 get$reset: function() {
  return this.operator$index$1('reset');
}
};

$$.Keyword = {"": ["syntax>", "isPseudo", "isBuiltIn", "info>"],
 "super": "Object",
 get$hashCode: function() {
  return $.get$hashCode(this.syntax);
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$SourceString && $.eqB(this.syntax, other.slowToString$0());
},
 iterator$0: function() {
  return $.StringCodeIterator$(this.syntax);
},
 toString$0: function() {
  return this.syntax;
},
 slowToString$0: function() {
  return this.syntax;
},
 get$stringValue: function() {
  return this.syntax;
},
 get$isEmpty: function() {
  return false;
},
 is$SourceString: true
};

$$.KeywordState = {"": [],
 "super": "Object"
};

$$.ArrayKeywordState = {"": ["table", "keyword>"],
 "super": "KeywordState",
 next$1: function(c) {
  var t1, t2;
  t1 = this.table;
  t2 = $.sub(c, 97);
  if (t2 !== (t2 | 0))
    throw $.iae(t2);
  if (t2 < 0 || t2 >= t1.length)
    throw $.ioore(t2);
  return t1[t2];
},
 get$next: function() { return new $.BoundClosure0(this, 'next$1'); },
 toString$0: function() {
  var sb, t1, foo, i;
  sb = $.StringBuffer_StringBuffer('');
  $.getInterceptor(sb).add$1(sb, '[');
  t1 = this.keyword;
  if (!(t1 == null)) {
    $.getInterceptor(sb).add$1(sb, '*');
    $.getInterceptor(sb).add$1(sb, t1);
    $.getInterceptor(sb).add$1(sb, ' ');
  }
  foo = this.table;
  for (t1 = foo.length, i = 0; i < t1; ++i)
    if (!(foo[i] == null))
      $.getInterceptor(sb).add$1(sb, $.S($.String_String$fromCharCodes([i + 97])) + ': ' + $.S(foo[i]) + '; ');
  $.getInterceptor(sb).add$1(sb, ']');
  return $.toString(sb);
}
};

$$.LeafKeywordState = {"": ["keyword>"],
 "super": "KeywordState",
 next$1: function(c) {
  return;
},
 get$next: function() { return new $.BoundClosure0(this, 'next$1'); },
 toString$0: function() {
  return this.keyword.get$syntax();
}
};

$$.AbstractScanner = {"": [],
 "super": "Object",
 tokenize$0: function() {
  var next = this.advance$0();
  for (; !(next === 0);)
    next = this.bigSwitch$1(next);
  this.appendEofToken$0();
  return this.firstToken$0();
},
 bigSwitch$1: function(next) {
  if (typeof next !== 'number')
    return this.bigSwitch$1$bailout(1, next);
  this.beginToken$0();
  if (next === 32 || next === 9 || next === 10 || next === 13) {
    this.appendWhiteSpace$1(next);
    next = this.advance$0();
    for (; next === 32;) {
      this.appendWhiteSpace$1(next);
      next = this.advance$0();
    }
    return next;
  }
  if (97 <= next && next <= 122) {
    if (114 === next)
      return this.tokenizeRawStringKeywordOrIdentifier$1(next);
    return this.tokenizeKeywordOrIdentifier$2(next, true);
  }
  if (65 <= next && next <= 90 || next === 95 || next === 36)
    return this.tokenizeIdentifier$3(next, this.get$byteOffset(), true);
  if (next === 60)
    return this.tokenizeLessThan$1(next);
  if (next === 62)
    return this.tokenizeGreaterThan$1(next);
  if (next === 61)
    return this.tokenizeEquals$1(next);
  if (next === 33)
    return this.tokenizeExclamation$1(next);
  if (next === 43)
    return this.tokenizePlus$1(next);
  if (next === 45)
    return this.tokenizeMinus$1(next);
  if (next === 42)
    return this.tokenizeMultiply$1(next);
  if (next === 37)
    return this.tokenizePercent$1(next);
  if (next === 38)
    return this.tokenizeAmpersand$1(next);
  if (next === 124)
    return this.tokenizeBar$1(next);
  if (next === 94)
    return this.tokenizeCaret$1(next);
  if (next === 91)
    return this.tokenizeOpenSquareBracket$1(next);
  if (next === 126)
    return this.tokenizeTilde$1(next);
  if (next === 92) {
    this.appendPrecedenceToken$1($.CTC6);
    return this.advance$0();
  }
  if (next === 35)
    return this.tokenizeTag$1(next);
  if (next === 40) {
    this.appendBeginGroup$2($.CTC7, '(');
    return this.advance$0();
  }
  if (next === 41)
    return this.appendEndGroup$3($.CTC8, ')', 40);
  if (next === 44) {
    this.appendPrecedenceToken$1($.CTC9);
    return this.advance$0();
  }
  if (next === 58) {
    this.appendPrecedenceToken$1($.CTC10);
    return this.advance$0();
  }
  if (next === 59) {
    this.appendPrecedenceToken$1($.CTC11);
    this.discardOpenLt$0();
    return this.advance$0();
  }
  if (next === 63) {
    this.appendPrecedenceToken$1($.CTC12);
    return this.advance$0();
  }
  if (next === 93)
    return this.appendEndGroup$3($.CTC13, ']', 91);
  if (next === 96) {
    this.appendPrecedenceToken$1($.CTC14);
    return this.advance$0();
  }
  if (next === 123) {
    this.appendBeginGroup$2($.CTC15, '{');
    return this.advance$0();
  }
  if (next === 125)
    return this.appendEndGroup$3($.CTC16, '}', 123);
  if (next === 47)
    return this.tokenizeSlashOrComment$1(next);
  if (next === 64)
    return this.tokenizeAt$1(next);
  if (next === 34 || next === 39)
    return this.tokenizeString$3(next, this.get$byteOffset(), false);
  if (next === 46)
    return this.tokenizeDotsOrNumber$1(next);
  if (next === 48)
    return this.tokenizeHexOrNumber$1(next);
  if (next === 49 || next === 50 || next === 51 || next === 52 || next === 53 || next === 54 || next === 55 || next === 56 || next === 57)
    return this.tokenizeNumber$1(next);
  if (next === 0)
    return 0;
  if (next < 31)
    return this.error$1($.StringWrapper$('unexpected character ' + $.S(next)));
  if (next === 160) {
    this.appendWhiteSpace$1(next);
    return this.advance$0();
  }
  return this.tokenizeIdentifier$3(next, this.get$byteOffset(), true);
},
 bigSwitch$1$bailout: function(state0, next) {
  this.beginToken$0();
  if (next === 32 || next === 9 || next === 10 || next === 13) {
    this.appendWhiteSpace$1(next);
    next = this.advance$0();
    for (; next === 32;) {
      this.appendWhiteSpace$1(next);
      next = this.advance$0();
    }
    return next;
  }
  if ($.leB(97, next) && $.leB(next, 122)) {
    if (114 === next)
      return this.tokenizeRawStringKeywordOrIdentifier$1(next);
    return this.tokenizeKeywordOrIdentifier$2(next, true);
  }
  if ($.leB(65, next) && $.leB(next, 90) || next === 95 || next === 36)
    return this.tokenizeIdentifier$3(next, this.get$byteOffset(), true);
  if (next === 60)
    return this.tokenizeLessThan$1(next);
  if (next === 62)
    return this.tokenizeGreaterThan$1(next);
  if (next === 61)
    return this.tokenizeEquals$1(next);
  if (next === 33)
    return this.tokenizeExclamation$1(next);
  if (next === 43)
    return this.tokenizePlus$1(next);
  if (next === 45)
    return this.tokenizeMinus$1(next);
  if (next === 42)
    return this.tokenizeMultiply$1(next);
  if (next === 37)
    return this.tokenizePercent$1(next);
  if (next === 38)
    return this.tokenizeAmpersand$1(next);
  if (next === 124)
    return this.tokenizeBar$1(next);
  if (next === 94)
    return this.tokenizeCaret$1(next);
  if (next === 91)
    return this.tokenizeOpenSquareBracket$1(next);
  if (next === 126)
    return this.tokenizeTilde$1(next);
  if (next === 92) {
    this.appendPrecedenceToken$1($.CTC6);
    return this.advance$0();
  }
  if (next === 35)
    return this.tokenizeTag$1(next);
  if (next === 40) {
    this.appendBeginGroup$2($.CTC7, '(');
    return this.advance$0();
  }
  if (next === 41)
    return this.appendEndGroup$3($.CTC8, ')', 40);
  if (next === 44) {
    this.appendPrecedenceToken$1($.CTC9);
    return this.advance$0();
  }
  if (next === 58) {
    this.appendPrecedenceToken$1($.CTC10);
    return this.advance$0();
  }
  if (next === 59) {
    this.appendPrecedenceToken$1($.CTC11);
    this.discardOpenLt$0();
    return this.advance$0();
  }
  if (next === 63) {
    this.appendPrecedenceToken$1($.CTC12);
    return this.advance$0();
  }
  if (next === 93)
    return this.appendEndGroup$3($.CTC13, ']', 91);
  if (next === 96) {
    this.appendPrecedenceToken$1($.CTC14);
    return this.advance$0();
  }
  if (next === 123) {
    this.appendBeginGroup$2($.CTC15, '{');
    return this.advance$0();
  }
  if (next === 125)
    return this.appendEndGroup$3($.CTC16, '}', 123);
  if (next === 47)
    return this.tokenizeSlashOrComment$1(next);
  if (next === 64)
    return this.tokenizeAt$1(next);
  if (next === 34 || next === 39)
    return this.tokenizeString$3(next, this.get$byteOffset(), false);
  if (next === 46)
    return this.tokenizeDotsOrNumber$1(next);
  if (next === 48)
    return this.tokenizeHexOrNumber$1(next);
  if (next === 49 || next === 50 || next === 51 || next === 52 || next === 53 || next === 54 || next === 55 || next === 56 || next === 57)
    return this.tokenizeNumber$1(next);
  if (next === 0)
    return 0;
  if ($.ltB(next, 31))
    return this.error$1($.StringWrapper$('unexpected character ' + $.S(next)));
  if (next === 160) {
    this.appendWhiteSpace$1(next);
    return this.advance$0();
  }
  return this.tokenizeIdentifier$3(next, this.get$byteOffset(), true);
},
 tokenizeTag$1: function(next) {
  if ($.eqB(this.get$byteOffset(), 0))
    if (this.peek$0() === 33) {
      do
        next = this.advance$0();
      while (!(next === 10) && !(next === 13) && !(next === 0));
      return next;
    }
  this.appendPrecedenceToken$1($.CTC34);
  return this.advance$0();
},
 tokenizeTilde$1: function(next) {
  next = this.advance$0();
  if (next === 47)
    return this.select$3(61, $.CTC35, $.CTC36);
  else {
    this.appendPrecedenceToken$1($.CTC37);
    return next;
  }
},
 tokenizeOpenSquareBracket$1: function(next) {
  var token;
  next = this.advance$0();
  if (next === 93) {
    token = this.previousToken$0();
    if (typeof token === 'object' && token !== null && !!token.is$KeywordToken && token.value.get$stringValue() === 'operator')
      return this.select$3(61, $.CTC38, $.CTC39);
  }
  this.appendBeginGroup$2($.CTC40, '[');
  return next;
},
 tokenizeCaret$1: function(next) {
  return this.select$3(61, $.CTC41, $.CTC42);
},
 tokenizeBar$1: function(next) {
  next = this.advance$0();
  if (next === 124) {
    this.appendPrecedenceToken$1($.CTC43);
    return this.advance$0();
  } else if (next === 61) {
    this.appendPrecedenceToken$1($.CTC44);
    return this.advance$0();
  } else {
    this.appendPrecedenceToken$1($.CTC45);
    return next;
  }
},
 tokenizeAmpersand$1: function(next) {
  next = this.advance$0();
  if (next === 38) {
    this.appendPrecedenceToken$1($.CTC46);
    return this.advance$0();
  } else if (next === 61) {
    this.appendPrecedenceToken$1($.CTC47);
    return this.advance$0();
  } else {
    this.appendPrecedenceToken$1($.CTC48);
    return next;
  }
},
 tokenizePercent$1: function(next) {
  return this.select$3(61, $.CTC49, $.CTC50);
},
 tokenizeMultiply$1: function(next) {
  return this.select$3(61, $.CTC51, $.CTC52);
},
 tokenizeMinus$1: function(next) {
  next = this.advance$0();
  if (next === 45) {
    this.appendPrecedenceToken$1($.CTC53);
    return this.advance$0();
  } else if (next === 61) {
    this.appendPrecedenceToken$1($.CTC54);
    return this.advance$0();
  } else {
    this.appendPrecedenceToken$1($.CTC55);
    return next;
  }
},
 tokenizePlus$1: function(next) {
  next = this.advance$0();
  if (43 === next) {
    this.appendPrecedenceToken$1($.CTC56);
    return this.advance$0();
  } else if (61 === next) {
    this.appendPrecedenceToken$1($.CTC57);
    return this.advance$0();
  } else {
    this.appendPrecedenceToken$1($.CTC58);
    return next;
  }
},
 tokenizeExclamation$1: function(next) {
  next = this.advance$0();
  if (next === 61)
    return this.select$3(61, $.CTC59, $.CTC60);
  this.appendPrecedenceToken$1($.CTC61);
  return next;
},
 tokenizeEquals$1: function(next) {
  this.discardOpenLt$0();
  next = this.advance$0();
  if (next === 61)
    return this.select$3(61, $.CTC62, $.CTC63);
  else if (next === 62) {
    this.appendPrecedenceToken$1($.CTC64);
    return this.advance$0();
  }
  this.appendPrecedenceToken$1($.CTC65);
  return next;
},
 tokenizeGreaterThan$1: function(next) {
  next = this.advance$0();
  if (61 === next) {
    this.appendPrecedenceToken$1($.CTC66);
    return this.advance$0();
  } else if (62 === next) {
    next = this.advance$0();
    if (61 === next) {
      this.appendPrecedenceToken$1($.CTC67);
      return this.advance$0();
    } else {
      this.appendGtGt$2($.CTC68, '>>');
      return next;
    }
  } else {
    this.appendGt$2($.CTC69, '>');
    return next;
  }
},
 tokenizeLessThan$1: function(next) {
  next = this.advance$0();
  if (61 === next) {
    this.appendPrecedenceToken$1($.CTC70);
    return this.advance$0();
  } else if (60 === next)
    return this.select$3(61, $.CTC71, $.CTC72);
  else {
    this.appendBeginGroup$2($.CTC73, '<');
    return next;
  }
},
 tokenizeNumber$1: function(next) {
  var start = this.get$byteOffset();
  for (; true;) {
    next = this.advance$0();
    if ($.leB(48, next) && $.leB(next, 57))
      continue;
    else if (next === 46)
      return this.tokenizeFractionPart$2(this.advance$0(), start);
    else if (next === 101 || next === 69 || next === 100 || next === 68)
      return this.tokenizeFractionPart$2(next, start);
    else {
      this.appendByteStringToken$2($.CTC18, this.asciiString$2(start, 0));
      return next;
    }
  }
},
 tokenizeHexOrNumber$1: function(next) {
  var x = this.peek$0();
  if (x === 120 || x === 88) {
    this.advance$0();
    return this.tokenizeHex$1(x);
  }
  return this.tokenizeNumber$1(next);
},
 tokenizeHex$1: function(next) {
  var start, hasDigits, t1;
  start = $.sub(this.get$byteOffset(), 1);
  for (hasDigits = false; true; hasDigits = true) {
    next = this.advance$0();
    if (!($.leB(48, next) && $.leB(next, 57)))
      if (!($.leB(65, next) && $.leB(next, 70)))
        t1 = $.leB(97, next) && $.leB(next, 102);
      else
        t1 = true;
    else
      t1 = true;
    if (t1)
      ;
    else {
      if (!hasDigits)
        return this.error$1($.CTC24);
      this.appendByteStringToken$2($.CTC25, this.asciiString$2(start, 0));
      return next;
    }
  }
},
 tokenizeDotsOrNumber$1: function(next) {
  var start = this.get$byteOffset();
  next = this.advance$0();
  if ($.leB(48, next) && $.leB(next, 57))
    return this.tokenizeFractionPart$2(next, start);
  else if (46 === next)
    return this.select$3(46, $.CTC19, $.CTC20);
  else {
    this.appendPrecedenceToken$1($.CTC21);
    return next;
  }
},
 tokenizeFractionPart$2: function(next, start) {
  var hasDigit, done;
  if (typeof next !== 'number')
    return this.tokenizeFractionPart$2$bailout(1, next, start);
  $LOOP$0:
    for (hasDigit = false, done = false; !done;) {
      if ($.leB(48, next) && $.leB(next, 57))
        ;
      else if (101 === next || 69 === next) {
        next = this.tokenizeExponent$1(this.advance$0());
        hasDigit = true;
        done = true;
        continue $LOOP$0;
      } else {
        done = true;
        continue $LOOP$0;
      }
      next = this.advance$0();
      hasDigit = true;
    }
  if (!hasDigit) {
    this.appendByteStringToken$2($.CTC18, this.asciiString$2(start, -1));
    if (46 === next)
      return this.select$3(46, $.CTC19, $.CTC20);
    this.appendPrecedenceToken$1($.CTC21);
    return this.bigSwitch$1(next);
  }
  if (next === 100 || next === 68)
    next = this.advance$0();
  this.appendByteStringToken$2($.CTC22, this.asciiString$2(start, 0));
  return next;
},
 tokenizeFractionPart$2$bailout: function(state0, next, start) {
  var hasDigit, done;
  $LOOP$0:
    for (hasDigit = false, done = false; !done;) {
      if ($.leB(48, next) && $.leB(next, 57))
        ;
      else if (101 === next || 69 === next) {
        next = this.tokenizeExponent$1(this.advance$0());
        hasDigit = true;
        done = true;
        continue $LOOP$0;
      } else {
        done = true;
        continue $LOOP$0;
      }
      next = this.advance$0();
      hasDigit = true;
    }
  if (!hasDigit) {
    this.appendByteStringToken$2($.CTC18, this.asciiString$2(start, -1));
    if (46 === next)
      return this.select$3(46, $.CTC19, $.CTC20);
    this.appendPrecedenceToken$1($.CTC21);
    return this.bigSwitch$1(next);
  }
  if (next === 100 || next === 68)
    next = this.advance$0();
  this.appendByteStringToken$2($.CTC22, this.asciiString$2(start, 0));
  return next;
},
 tokenizeExponent$1: function(next) {
  var hasDigits;
  if (typeof next !== 'number')
    return this.tokenizeExponent$1$bailout(1, next);
  if (next === 43 || next === 45) {
    next = this.advance$0();
    if (typeof next !== 'number')
      return this.tokenizeExponent$1$bailout(2, next);
  }
  for (hasDigits = false; true; hasDigits = true) {
    if (48 <= next && next <= 57)
      ;
    else {
      if (!hasDigits)
        return this.error$1($.CTC23);
      return next;
    }
    next = this.advance$0();
    if (typeof next !== 'number')
      return this.tokenizeExponent$1$bailout(3, next);
  }
},
 tokenizeExponent$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      next = env0;
      break;
    case 2:
      next = env0;
      break;
    case 3:
      next = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    case 2:
      if (state0 === 2 || state0 === 0 && (next === 43 || next === 45))
        switch (state0) {
          case 0:
            next = this.advance$0();
          case 2:
            state0 = 0;
        }
      hasDigits = false;
    case 3:
      var next, hasDigits;
      L0:
        while (true)
          switch (state0) {
            case 0:
              if (!true)
                break L0;
              if ($.leB(48, next) && $.leB(next, 57))
                ;
              else {
                if (!hasDigits)
                  return this.error$1($.CTC23);
                return next;
              }
              next = this.advance$0();
            case 3:
              state0 = 0;
              hasDigits = true;
          }
  }
},
 tokenizeSlashOrComment$1: function(next) {
  next = this.advance$0();
  if (42 === next)
    return this.tokenizeMultiLineComment$1(next);
  else if (47 === next)
    return this.tokenizeSingleLineComment$1(next);
  else if (61 === next) {
    this.appendPrecedenceToken$1($.CTC31);
    return this.advance$0();
  } else {
    this.appendPrecedenceToken$1($.CTC32);
    return next;
  }
},
 tokenizeSingleLineComment$1: function(next) {
  for (; true;) {
    next = this.advance$0();
    if (10 === next || 13 === next || 0 === next) {
      this.appendComment$0();
      return next;
    }
  }
},
 tokenizeMultiLineComment$1: function(next) {
  var nesting;
  next = this.advance$0();
  for (nesting = 1; true;)
    if (0 === next)
      return next;
    else if (42 === next) {
      next = this.advance$0();
      if (47 === next) {
        --nesting;
        if (0 === nesting) {
          next = this.advance$0();
          this.appendComment$0();
          return next;
        } else
          next = this.advance$0();
      }
    } else if (47 === next) {
      next = this.advance$0();
      if (42 === next) {
        next = this.advance$0();
        ++nesting;
      }
    } else
      next = this.advance$0();
},
 tokenizeRawStringKeywordOrIdentifier$1: function(next) {
  var nextnext, start;
  nextnext = this.peek$0();
  if (nextnext === 34 || nextnext === 39) {
    start = this.get$byteOffset();
    return this.tokenizeString$3(this.advance$0(), start, true);
  }
  return this.tokenizeKeywordOrIdentifier$2(next, true);
},
 tokenizeKeywordOrIdentifier$2: function(next, allowDollar) {
  var state, start, t1;
  if (typeof next !== 'number')
    return this.tokenizeKeywordOrIdentifier$2$bailout(1, next, allowDollar);
  state = $.KeywordState_KEYWORD_STATE();
  start = this.get$byteOffset();
  while (true) {
    t1 = !(state == null);
    if (!(t1 && $.leB(97, next) && $.leB(next, 122)))
      break;
    state = state.next$1(next);
    next = this.advance$0();
  }
  if (state == null || state.get$keyword() == null)
    return this.tokenizeIdentifier$3(next, start, allowDollar);
  if (!($.leB(65, next) && $.leB(next, 90)))
    t1 = $.leB(48, next) && $.leB(next, 57) || next === 95 || next === 36;
  else
    t1 = true;
  if (t1)
    return this.tokenizeIdentifier$3(next, start, allowDollar);
  else if ($.ltB(next, 128)) {
    this.appendKeywordToken$1(state.get$keyword());
    return next;
  } else
    return this.tokenizeIdentifier$3(next, start, allowDollar);
},
 tokenizeKeywordOrIdentifier$2$bailout: function(state0, next, allowDollar) {
  var state, start, t1;
  state = $.KeywordState_KEYWORD_STATE();
  start = this.get$byteOffset();
  while (true) {
    t1 = !(state == null);
    if (!(t1 && $.leB(97, next) && $.leB(next, 122)))
      break;
    state = state.next$1(next);
    next = this.advance$0();
  }
  if (state == null || state.get$keyword() == null)
    return this.tokenizeIdentifier$3(next, start, allowDollar);
  if (!($.leB(65, next) && $.leB(next, 90)))
    t1 = $.leB(48, next) && $.leB(next, 57) || next === 95 || next === 36;
  else
    t1 = true;
  if (t1)
    return this.tokenizeIdentifier$3(next, start, allowDollar);
  else if ($.ltB(next, 128)) {
    this.appendKeywordToken$1(state.get$keyword());
    return next;
  } else
    return this.tokenizeIdentifier$3(next, start, allowDollar);
},
 tokenizeIdentifier$3: function(next, start, allowDollar) {
  var isDynamicBuiltIn, isAscii, t1, nonAsciiStart, string, byteLength;
  if (typeof next !== 'number')
    return this.tokenizeIdentifier$3$bailout(1, next, start, allowDollar);
  if (next === 68) {
    next = this.advance$0();
    if (next === 121) {
      next = this.advance$0();
      if (next === 110) {
        next = this.advance$0();
        if (next === 97) {
          next = this.advance$0();
          if (next === 109) {
            next = this.advance$0();
            if (next === 105) {
              next = this.advance$0();
              if (next === 99) {
                next = this.advance$0();
                isDynamicBuiltIn = true;
              } else
                isDynamicBuiltIn = false;
            } else
              isDynamicBuiltIn = false;
          } else
            isDynamicBuiltIn = false;
        } else
          isDynamicBuiltIn = false;
      } else
        isDynamicBuiltIn = false;
    } else
      isDynamicBuiltIn = false;
  } else
    isDynamicBuiltIn = false;
  if (typeof next !== 'number')
    return this.tokenizeIdentifier$3$bailout(2, start, allowDollar, isDynamicBuiltIn, next);
  for (isAscii = true; true; isDynamicBuiltIn = false) {
    if (!($.leB(97, next) && $.leB(next, 122)))
      if (!($.leB(65, next) && $.leB(next, 90)))
        if (!($.leB(48, next) && $.leB(next, 57)))
          if (!(next === 95))
            t1 = next === 36 && allowDollar;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
    else
      t1 = true;
    if (t1)
      next = this.advance$0();
    else {
      if ($.ltB(next, 128) || next === 160) {
        if ($.eqB(start, this.get$byteOffset()))
          return this.error$1($.CTC74);
        else if (isDynamicBuiltIn)
          this.appendKeywordToken$1($.CTC75);
        else if (isAscii)
          this.appendByteStringToken$2($.CTC76, this.asciiString$2(start, 0));
        else
          this.appendByteStringToken$2($.CTC17, this.utf8String$2(start, -1));
        return next;
      } else {
        nonAsciiStart = this.get$byteOffset();
        do {
          next = this.nextByte$0();
          if (next === 160)
            break;
        } while ($.gtB(next, 127));
        string = this.utf8String$2(nonAsciiStart, -1).slowToString$0();
        byteLength = $.sub(nonAsciiStart, this.get$byteOffset());
        this.addToCharOffset$1($.sub($.get$length(string), byteLength));
      }
      isAscii = false;
    }
  }
},
 tokenizeIdentifier$3$bailout: function(state0, env0, env1, env2, env3) {
  switch (state0) {
    case 1:
      allowDollar = env2;
      start = env1;
      next = env0;
      break;
    case 2:
      next = env3;
      isDynamicBuiltIn = env2;
      allowDollar = env1;
      start = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      if (next === 68) {
        next = this.advance$0();
        if (next === 121) {
          next = this.advance$0();
          if (next === 110) {
            next = this.advance$0();
            if (next === 97) {
              next = this.advance$0();
              if (next === 109) {
                next = this.advance$0();
                if (next === 105) {
                  next = this.advance$0();
                  if (next === 99) {
                    next = this.advance$0();
                    isDynamicBuiltIn = true;
                  } else
                    isDynamicBuiltIn = false;
                } else
                  isDynamicBuiltIn = false;
              } else
                isDynamicBuiltIn = false;
            } else
              isDynamicBuiltIn = false;
          } else
            isDynamicBuiltIn = false;
        } else
          isDynamicBuiltIn = false;
      } else
        isDynamicBuiltIn = false;
    case 2:
      var allowDollar, start, next, isDynamicBuiltIn, isAscii, t1, nonAsciiStart, string, byteLength;
      state0 = 0;
      for (isAscii = true; true; isDynamicBuiltIn = false) {
        if (!($.leB(97, next) && $.leB(next, 122)))
          if (!($.leB(65, next) && $.leB(next, 90)))
            if (!($.leB(48, next) && $.leB(next, 57)))
              if (!(next === 95))
                t1 = next === 36 && allowDollar;
              else
                t1 = true;
            else
              t1 = true;
          else
            t1 = true;
        else
          t1 = true;
        if (t1)
          next = this.advance$0();
        else {
          if ($.ltB(next, 128) || next === 160) {
            if ($.eqB(start, this.get$byteOffset()))
              return this.error$1($.CTC74);
            else if (isDynamicBuiltIn)
              this.appendKeywordToken$1($.CTC75);
            else if (isAscii)
              this.appendByteStringToken$2($.CTC76, this.asciiString$2(start, 0));
            else
              this.appendByteStringToken$2($.CTC17, this.utf8String$2(start, -1));
            return next;
          } else {
            nonAsciiStart = this.get$byteOffset();
            do {
              next = this.nextByte$0();
              if (next === 160)
                break;
            } while ($.gtB(next, 127));
            string = this.utf8String$2(nonAsciiStart, -1).slowToString$0();
            byteLength = $.sub(nonAsciiStart, this.get$byteOffset());
            this.addToCharOffset$1($.sub($.get$length(string), byteLength));
          }
          isAscii = false;
        }
      }
  }
},
 tokenizeAt$1: function(next) {
  this.get$byteOffset();
  next = this.advance$0();
  this.appendPrecedenceToken$1($.CTC30);
  return next;
},
 tokenizeString$3: function(next, start, raw) {
  var next0 = this.advance$0();
  if (next == null ? next0 == null : next === next0) {
    next0 = this.advance$0();
    if (next == null ? next0 == null : next === next0)
      return this.tokenizeMultiLineString$3(next, start, raw);
    else {
      this.appendByteStringToken$2($.CTC26, this.utf8String$2(start, -1));
      return next0;
    }
  }
  if (raw)
    return this.tokenizeSingleLineRawString$3(next0, next, start);
  else
    return this.tokenizeSingleLineString$3(next0, next, start);
},
 tokenizeSingleLineString$3: function(next, quoteChar, start) {
  var t1;
  if (typeof next !== 'number')
    return this.tokenizeSingleLineString$3$bailout(1, next, quoteChar, start);
  for (; !(next == null ? quoteChar == null : next === quoteChar);) {
    if (next === 92)
      next = this.advance$0();
    else if (next === 36) {
      next = this.tokenizeStringInterpolation$1(start);
      start = this.get$byteOffset();
      continue;
    }
    if ($.leB(next, 13))
      t1 = next === 10 || next === 13 || next === 0;
    else
      t1 = false;
    if (t1)
      return this.error$1($.CTC27);
    next = this.advance$0();
  }
  this.appendByteStringToken$2($.CTC26, this.utf8String$2(start, 0));
  return this.advance$0();
},
 tokenizeSingleLineString$3$bailout: function(state0, next, quoteChar, start) {
  var t1;
  for (; !(next == null ? quoteChar == null : next === quoteChar);) {
    if (next === 92)
      next = this.advance$0();
    else if (next === 36) {
      next = this.tokenizeStringInterpolation$1(start);
      start = this.get$byteOffset();
      continue;
    }
    if ($.leB(next, 13))
      t1 = next === 10 || next === 13 || next === 0;
    else
      t1 = false;
    if (t1)
      return this.error$1($.CTC27);
    next = this.advance$0();
  }
  this.appendByteStringToken$2($.CTC26, this.utf8String$2(start, 0));
  return this.advance$0();
},
 tokenizeStringInterpolation$1: function(start) {
  var next;
  this.appendByteStringToken$2($.CTC26, this.utf8String$2(start, -1));
  this.beginToken$0();
  next = this.advance$0();
  if (next === 123)
    return this.tokenizeInterpolatedExpression$2(next, start);
  else
    return this.tokenizeInterpolatedIdentifier$2(next, start);
},
 tokenizeInterpolatedExpression$2: function(next, start) {
  var t1;
  this.appendBeginGroup$2($.CTC29, '${');
  this.beginToken$0();
  next = this.advance$0();
  while (true) {
    t1 = next === 0;
    if (!(!t1 && !(next === 2)))
      break;
    next = this.bigSwitch$1(next);
  }
  if (t1)
    return next;
  next = this.advance$0();
  this.beginToken$0();
  return next;
},
 tokenizeInterpolatedIdentifier$2: function(next, start) {
  this.appendPrecedenceToken$1($.CTC28);
  this.beginToken$0();
  next = this.tokenizeKeywordOrIdentifier$2(next, false);
  this.beginToken$0();
  return next;
},
 tokenizeSingleLineRawString$3: function(next, quoteChar, start) {
  next = this.advance$0();
  if (typeof next !== 'number')
    return this.tokenizeSingleLineRawString$3$bailout(1, quoteChar, start, next);
  for (; !$.eqB(next, 0);) {
    if (next == null ? quoteChar == null : next === quoteChar) {
      this.appendByteStringToken$2($.CTC26, this.utf8String$2(start, 0));
      return this.advance$0();
    } else if (next === 10 || next === 13)
      return this.error$1($.CTC27);
    next = this.advance$0();
  }
  return this.error$1($.CTC27);
},
 tokenizeSingleLineRawString$3$bailout: function(state0, quoteChar, start, next) {
  for (; !$.eqB(next, 0);) {
    if (next == null ? quoteChar == null : next === quoteChar) {
      this.appendByteStringToken$2($.CTC26, this.utf8String$2(start, 0));
      return this.advance$0();
    } else if (next === 10 || next === 13)
      return this.error$1($.CTC27);
    next = this.advance$0();
  }
  return this.error$1($.CTC27);
},
 tokenizeMultiLineRawString$2: function(quoteChar, start) {
  var next = this.advance$0();
  $outer$0:
    for (; !(next === 0);) {
      for (; !(next == null ? quoteChar == null : next === quoteChar);) {
        next = this.advance$0();
        if (next === 0)
          break $outer$0;
      }
      next = this.advance$0();
      if (next == null ? quoteChar == null : next === quoteChar) {
        next = this.advance$0();
        if (next == null ? quoteChar == null : next === quoteChar) {
          this.appendByteStringToken$2($.CTC26, this.utf8String$2(start, 0));
          return this.advance$0();
        }
      }
    }
  return this.error$1($.CTC27);
},
 tokenizeMultiLineString$3: function(quoteChar, start, raw) {
  var next;
  if (raw)
    return this.tokenizeMultiLineRawString$2(quoteChar, start);
  next = this.advance$0();
  for (; !(next === 0);) {
    if (next === 36) {
      next = this.tokenizeStringInterpolation$1(start);
      start = this.get$byteOffset();
      continue;
    }
    if (next == null ? quoteChar == null : next === quoteChar) {
      next = this.advance$0();
      if (next == null ? quoteChar == null : next === quoteChar) {
        next = this.advance$0();
        if (next == null ? quoteChar == null : next === quoteChar) {
          this.appendByteStringToken$2($.CTC26, this.utf8String$2(start, 0));
          return this.advance$0();
        }
      }
      continue;
    }
    if (next === 92)
      if (this.advance$0() === 0)
        break;
    next = this.advance$0();
  }
  return this.error$1($.CTC27);
},
 error$1: function(message) {
  this.appendByteStringToken$2($.CTC17, message);
  return this.advance$0();
}
};

$$.StringScanner = {"": ["string", "tokens", "tail", "tokenStart", "byteOffset", "includeComments", "extraCharOffset", "groupingStack"],
 "super": "ArrayBasedScanner",
 nextByte$0: function() {
  var t1, t2, t3;
  t1 = this.byteOffset;
  if (typeof t1 !== 'number')
    return this.nextByte$0$bailout(1, t1);
  ++t1;
  this.byteOffset = t1;
  t2 = this.string;
  t3 = $.get$length(t2);
  if (typeof t3 !== 'number')
    return this.nextByte$0$bailout(2, t3, t2, t1);
  if (t3 > t1) {
    t1 = $.getInterceptor(t2).charCodeAt$1(t2, t1);
    if (typeof t1 !== 'number')
      return this.nextByte$0$bailout(3, t1);
  } else
    t1 = 0;
  return t1;
},
 nextByte$0$bailout: function(state0, env0, env1, env2) {
  switch (state0) {
    case 1:
      t1 = env0;
      break;
    case 2:
      t1 = env2;
      t2 = env1;
      t3 = env0;
      break;
    case 3:
      t1 = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = this.byteOffset;
    case 1:
      state0 = 0;
      t1 = $.add(t1, 1);
      this.byteOffset = t1;
      t2 = this.string;
      t3 = $.get$length(t2);
    case 2:
      state0 = 0;
    case 3:
      var t1, t2, t3;
      if (state0 === 3 || state0 === 0 && $.gtB(t3, t1))
        switch (state0) {
          case 0:
            t1 = $.getInterceptor(t2).charCodeAt$1(t2, t1);
          case 3:
            state0 = 0;
        }
      else
        t1 = 0;
      return t1;
  }
},
 peek$0: function() {
  var t1, t2;
  t1 = $.add(this.byteOffset, 1);
  t2 = this.string;
  return $.gtB($.get$length(t2), t1) ? $.getInterceptor(t2).charCodeAt$1(t2, t1) : 0;
},
 asciiString$2: function(start, offset) {
  return $.SubstringWrapper$(this.string, start, $.add(this.byteOffset, offset));
},
 utf8String$2: function(start, offset) {
  var t1, t2;
  t1 = this.string;
  t2 = this.byteOffset;
  if (typeof t2 !== 'number')
    return this.utf8String$2$bailout(1, start, t2, offset, t1);
  return $.SubstringWrapper$(t1, start, t2 + offset + 1);
},
 utf8String$2$bailout: function(state0, start, t2, offset, t1) {
  return $.SubstringWrapper$(t1, start, $.add($.add(t2, offset), 1));
},
 appendByteStringToken$2: function(info, value) {
  var t1 = $.StringToken$fromSource(info, value, this.tokenStart);
  this.tail.set$next(t1);
  this.tail = this.tail.get$next();
}
};

$$.SubstringWrapper = {"": ["internalString", "begin", "end", "cashedHash", "cachedSubString"],
 "super": "Object",
 get$hashCode: function() {
  if (0 === this.cashedHash)
    this.cashedHash = $.get$hashCode(this.slowToString$0());
  return this.cashedHash;
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$SourceString && $.eqB(this.slowToString$0(), other.slowToString$0());
},
 slowToString$0: function() {
  if (this.cachedSubString == null) {
    var t1 = this.internalString;
    this.cachedSubString = $.getInterceptor(t1).substring$2(t1, this.begin, this.end);
  }
  return this.cachedSubString;
},
 toString$0: function() {
  return 'SubstringWrapper(' + $.S(this.slowToString$0()) + ')';
},
 get$stringValue: function() {
  return;
},
 iterator$0: function() {
  return $.StringCodeIterator$substring(this.internalString, this.begin, this.end);
},
 get$isEmpty: function() {
  return $.eq(this.begin, this.end);
},
 is$SourceString: true
};

$$.Token = {"": ["info>", "charOffset>", "next="],
 "super": "Object",
 next$0: function() { return this.next.call$0(); },
 next$1: function(arg0) { return this.next.call$1(arg0); },
 get$value: function() {
  return this.info.get$value();
},
 get$stringValue: function() {
  return this.info.get$value().get$stringValue();
},
 get$kind: function() {
  return this.info.get$kind();
},
 toString$0: function() {
  return $.toString(this.info.get$value());
},
 slowToString$0: function() {
  return this.toString$0();
},
 get$slowCharCount: function() {
  return $.get$length(this.slowToString$0());
}
};

$$.KeywordToken = {"": ["value>", "info", "charOffset", "next"],
 "super": "Token",
 get$stringValue: function() {
  return this.value.get$syntax();
},
 toString$0: function() {
  return this.value.get$syntax();
},
 is$KeywordToken: true
};

$$.StringToken = {"": ["value>", "info", "charOffset", "next"],
 "super": "Token",
 get$stringValue: function() {
  return this.value.get$stringValue();
},
 toString$0: function() {
  return 'StringToken(' + $.S(this.value.slowToString$0()) + ')';
},
 slowToString$0: function() {
  return this.value.slowToString$0();
}
};

$$.StringWrapper = {"": ["stringValue>"],
 "super": "Object",
 get$hashCode: function() {
  return $.get$hashCode(this.stringValue);
},
 operator$eq$1: function(other) {
  return typeof other === 'object' && other !== null && !!other.is$SourceString && this.stringValue === other.slowToString$0();
},
 iterator$0: function() {
  return $.StringCodeIterator$(this.stringValue);
},
 toString$0: function() {
  return this.stringValue;
},
 slowToString$0: function() {
  return this.stringValue;
},
 get$isEmpty: function() {
  return $.get$isEmpty(this.stringValue);
},
 is$SourceString: true
};

$$.StringCodeIterator = {"": ["string", "index", "end"],
 "super": "Object",
 get$hasNext: function() {
  return $.lt(this.index, this.end);
},
 next$0: function() {
  var t1, t2, t3;
  t1 = this.string;
  t2 = $.getInterceptor(t1);
  t3 = this.index;
  if (typeof t3 !== 'number')
    return this.next$0$bailout0(1, t2, t1, t3);
  this.index = t3 + 1;
  return t2.charCodeAt$1(t1, t3);
},
 next$0$bailout0: function(state0, t2, t1, t3) {
  this.index = $.add(t3, 1);
  return t2.charCodeAt$1(t1, t3);
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); },
 StringCodeIterator$substring$3: function(string, index, end) {
}
};

$$.BeginGroupToken = {"": ["endGroup<", "value", "info", "charOffset", "next"],
 "super": "StringToken"
};

$$.PrecedenceInfo = {"": ["value>", "precedence", "kind>"],
 "super": "Object",
 toString$0: function() {
  return 'PrecedenceInfo(' + $.S(this.value) + ', ' + $.S(this.precedence) + ', ' + $.S(this.kind) + ')';
}
};

$$.ArrayBasedScanner = {"": ["tail>", "byteOffset>"],
 "super": "AbstractScanner",
 get$charOffset: function() {
  return $.add(this.byteOffset, this.extraCharOffset);
},
 advance$0: function() {
  return this.nextByte$0();
},
 select$3: function(choice, yes, no) {
  var next = this.advance$0();
  if (next === choice) {
    this.appendPrecedenceToken$1(yes);
    return this.advance$0();
  } else {
    this.appendPrecedenceToken$1(no);
    return next;
  }
},
 appendPrecedenceToken$1: function(info) {
  var t1 = $.Token$(info, this.tokenStart);
  this.tail.set$next(t1);
  this.tail = this.tail.get$next();
},
 appendStringToken$2: function(info, value) {
  var t1 = $.StringToken$(info, value, this.tokenStart);
  this.tail.set$next(t1);
  this.tail = this.tail.get$next();
},
 appendKeywordToken$1: function(keyword) {
  var syntax, t1;
  syntax = keyword.get$syntax();
  if (syntax === 'this' || syntax === 'super')
    this.discardOpenLt$0();
  t1 = $.KeywordToken$(keyword, this.tokenStart);
  this.tail.set$next(t1);
  this.tail = this.tail.get$next();
},
 appendEofToken$0: function() {
  var t1 = $.Token$($.CTC5, this.get$charOffset());
  this.tail.set$next(t1);
  this.tail = this.tail.get$next();
  t1 = this.tail;
  t1.set$next(t1);
  this.discardOpenLt$0();
  for (; $.get$isEmpty(this.groupingStack) !== true;) {
    this.groupingStack.get$head().set$endGroup(this.tail);
    this.groupingStack = this.groupingStack.get$tail();
  }
},
 beginToken$0: function() {
  this.tokenStart = this.get$charOffset();
},
 firstToken$0: function() {
  return this.tokens.next;
},
 previousToken$0: function() {
  return this.tail;
},
 addToCharOffset$1: function(offset) {
  var t1;
  if (typeof offset !== 'number')
    return this.addToCharOffset$1$bailout(1, offset);
  t1 = this.extraCharOffset;
  if (typeof t1 !== 'number')
    return this.addToCharOffset$1$bailout(2, offset, t1);
  this.extraCharOffset = t1 + offset;
},
 addToCharOffset$1$bailout: function(state0, env0, env1) {
  switch (state0) {
    case 1:
      offset = env0;
      break;
    case 2:
      t1 = env1;
      offset = env0;
      break;
  }
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
      t1 = this.extraCharOffset;
    case 2:
      var offset, t1;
      state0 = 0;
      this.extraCharOffset = $.add(t1, offset);
  }
},
 appendWhiteSpace$1: function(next) {
},
 appendBeginGroup$2: function(info, value) {
  var token = $.BeginGroupToken$(info, value, this.tokenStart);
  this.tail.set$next(token);
  this.tail = this.tail.get$next();
  if (!(info.kind === 60))
    this.discardOpenLt$0();
  this.groupingStack = this.groupingStack.prepend$1(token);
},
 appendEndGroup$3: function(info, value, openKind) {
  var begin;
  this.appendStringToken$2(info, value);
  this.discardOpenLt$0();
  if ($.get$isEmpty(this.groupingStack) === true)
    return this.advance$0();
  begin = this.groupingStack.get$head();
  if (!(begin.get$kind() === openKind)) {
    if (openKind !== 123 || !(begin.get$kind() === 128))
      return this.error$1($.StringWrapper$('Unmatched ' + $.S(begin.get$stringValue())));
    begin.set$endGroup(this.tail);
    this.groupingStack = this.groupingStack.get$tail();
    return 2;
  }
  begin.set$endGroup(this.tail);
  this.groupingStack = this.groupingStack.get$tail();
  return this.advance$0();
},
 appendGt$2: function(info, value) {
  var t1;
  this.appendStringToken$2(info, value);
  if ($.get$isEmpty(this.groupingStack) === true)
    return;
  if (this.groupingStack.get$head().get$kind() === 60) {
    t1 = this.tail;
    this.groupingStack.get$head().set$endGroup(t1);
    this.groupingStack = this.groupingStack.get$tail();
  }
},
 appendGtGt$2: function(info, value) {
  var t1;
  this.appendStringToken$2(info, value);
  if ($.get$isEmpty(this.groupingStack) === true)
    return;
  if (this.groupingStack.get$head().get$kind() === 60)
    this.groupingStack = this.groupingStack.get$tail();
  if ($.get$isEmpty(this.groupingStack) === true)
    return;
  if (this.groupingStack.get$head().get$kind() === 60) {
    t1 = this.tail;
    this.groupingStack.get$head().set$endGroup(t1);
    this.groupingStack = this.groupingStack.get$tail();
  }
},
 appendComment$0: function() {
  if (this.includeComments !== true)
    return;
  this.appendByteStringToken$2($.CTC33, this.utf8String$2(this.tokenStart, -1));
},
 discardOpenLt$0: function() {
  while (true) {
    if (!($.get$isEmpty(this.groupingStack) !== true && this.groupingStack.get$head().get$kind() === 60))
      break;
    this.groupingStack = this.groupingStack.get$tail();
  }
},
 ArrayBasedScanner$1: function(includeComments) {
  this.tail = this.tokens;
}
};

$$.Link = {"": [],
 "super": "Object",
 get$head: function() {
  return;
},
 get$tail: function() {
  return;
},
 prepend$1: function(element) {
  return $.LinkEntry$(element, this, $.getRuntimeTypeInfo(this).T);
},
 iterator$0: function() {
  return $.LinkIterator$(this);
},
 get$isEmpty: function() {
  return true;
},
 forEach$1: function(f) {
},
 operator$eq$1: function(other) {
  var t1 = $.getRuntimeTypeInfo(other);
  if (!(typeof other === 'object' && other !== null && !!other.is$Link && (!t1.T || t1.T === 'T')))
    return false;
  return $.get$isEmpty(other);
},
 toString$0: function() {
  return '[]';
},
 is$Link: true
};

$$.LinkIterator = {"": ["current"],
 "super": "Object",
 get$hasNext: function() {
  return $.get$isEmpty(this.current) !== true;
},
 next$0: function() {
  var result = this.current.get$head();
  this.current = this.current.get$tail();
  return result;
},
 get$next: function() { return new $.BoundClosure(this, 'next$0'); }
};

$$.LinkEntry = {"": ["head>", "tail>"],
 "super": "Link",
 prepend$1: function(element) {
  return $.LinkEntry$(element, this, $.getRuntimeTypeInfo(this).T);
},
 printOn$2: function(buffer, separatedBy) {
  var link;
  if (typeof separatedBy !== 'string')
    return this.printOn$2$bailout(1, buffer, separatedBy);
  $.getInterceptor(buffer).add$1(buffer, this.head);
  for (link = this.tail; $.get$isEmpty(link) !== true; link = link.get$tail()) {
    $.getInterceptor(buffer).add$1(buffer, separatedBy);
    $.getInterceptor(buffer).add$1(buffer, link.get$head());
  }
},
 printOn$2$bailout: function(state0, buffer, separatedBy) {
  var link;
  $.getInterceptor(buffer).add$1(buffer, this.head);
  if (separatedBy == null)
    separatedBy = '';
  for (link = this.tail; $.get$isEmpty(link) !== true; link = link.get$tail()) {
    $.getInterceptor(buffer).add$1(buffer, separatedBy);
    $.getInterceptor(buffer).add$1(buffer, link.get$head());
  }
},
 toString$0: function() {
  var buffer = $.StringBuffer_StringBuffer('');
  $.getInterceptor(buffer).add$1(buffer, '[ ');
  this.printOn$2(buffer, ', ');
  $.getInterceptor(buffer).add$1(buffer, ' ]');
  return $.toString(buffer);
},
 get$isEmpty: function() {
  return false;
},
 forEach$1: function(f) {
  var link;
  for (link = this; $.get$isEmpty(link) !== true; link = link.get$tail())
    f.call$1(link.get$head());
},
 operator$eq$1: function(other) {
  var t1, myElements;
  t1 = $.getRuntimeTypeInfo(other);
  if (!(typeof other === 'object' && other !== null && !!other.is$Link && (!t1.T || t1.T === 'T')))
    return false;
  other = other;
  myElements = this;
  while (true) {
    if (!($.get$isEmpty(myElements) !== true && $.get$isEmpty(other) !== true))
      break;
    if (!$.eqB(myElements.get$head(), other.get$head()))
      return false;
    myElements = myElements.get$tail();
    other = other.get$tail();
  }
  return $.get$isEmpty(myElements) === true && $.get$isEmpty(other) === true;
}
};

$$.Maps__emitMap_anon = {"": ["visiting_3", "result_2", "box_0"],
 "super": "Closure",
 call$2: function(k, v) {
  var t1, t2;
  t1 = this.box_0;
  if (t1.first_1 !== true) {
    t2 = this.result_2;
    $.getInterceptor(t2).add$1(t2, ', ');
  }
  t1.first_1 = false;
  t1 = this.result_2;
  t2 = this.visiting_3;
  $.Collections__emitObject(k, t1, t2);
  $.getInterceptor(t1).add$1(t1, ': ');
  $.Collections__emitObject(v, t1, t2);
}
};

$$.DoubleLinkedQueue_length_anon = {"": ["box_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1 = this.box_0;
  t1.counter_1 = $.add(t1.counter_1, 1);
}
};

$$._LinkedHashMapImpl_forEach_anon = {"": ["f_0"],
 "super": "Closure",
 call$1: function(entry) {
  this.f_0.call$2(entry.get$key(), entry.get$value());
}
};

$$.setupSearch_anon = {"": [],
 "super": "Closure",
 call$1: function(event$) {
  return $.showDropDown();
}
};

$$.setupSearch_anon0 = {"": [],
 "super": "Closure",
 call$1: function(event$) {
  return $.hideDropDown();
}
};

$$.enableShowHideInherited_anon = {"": [],
 "super": "Closure",
 call$0: function() {
  return 'block';
}
};

$$.enableShowHideInherited_anon0 = {"": ["showInherited_0"],
 "super": "Closure",
 call$1: function(e) {
  var t1, display;
  t1 = this.showInherited_0;
  if ($.eqB($.index(t1.get$dataAttributes(), 'show-inherited'), 'block')) {
    t1.set$innerHTML('Show inherited');
    display = 'none';
  } else {
    t1.set$innerHTML('Hide inherited');
    display = 'block';
  }
  $.indexSet(t1.get$dataAttributes(), 'show-inherited', display);
  for (t1 = $.iterator($.document().queryAll$1('.inherited')); t1.get$hasNext() === true;)
    t1.next$0().get$style().set$display(display);
}
};

$$.enableCodeBlocks_anon = {"": ["preList_0"],
 "super": "Closure",
 call$1: function(e) {
  var t1, t2, t3;
  for (t1 = $.iterator(this.preList_0); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if ($.contains$1(t2.get$classes(), 'expanded') === true)
      t2.get$classes().remove$1('expanded');
    else {
      if ($.contains$1(t2.get$classes(), 'formatted') !== true) {
        t2.set$innerHTML($.classifySource(t2.get$text()));
        t3 = t2.get$classes();
        $.getInterceptor(t3).add$1(t3, 'formatted');
      }
      t2 = t2.get$classes();
      $.getInterceptor(t2).add$1(t2, 'expanded');
    }
  }
}
};

$$.NoSuchMethodError_toString_anon = {"": ["box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1, t2;
  t1 = this.box_0;
  if ($.gtB(t1.i_2, 0)) {
    t2 = t1.sb_1;
    $.getInterceptor(t2).add$1(t2, ', ');
  }
  t2 = t1.sb_1;
  $.getInterceptor(t2).add$1(t2, key);
  t2 = t1.sb_1;
  $.getInterceptor(t2).add$1(t2, ': ');
  t2 = t1.sb_1;
  $.getInterceptor(t2).add$1(t2, $.NoSuchMethodError_safeToString(value));
  t1.i_2 = $.add(t1.i_2, 1);
}
};

$$.FilteredElementList__filtered_anon = {"": [],
 "super": "Closure",
 call$1: function(n) {
  return typeof n === 'object' && n !== null && n.is$Element();
}
};

$$._ChildrenElementList_filter_anon = {"": ["output_1", "f_0"],
 "super": "Closure",
 call$1: function(element) {
  var t1;
  if (this.f_0.call$1(element) === true) {
    t1 = this.output_1;
    $.getInterceptor(t1).add$1(t1, element);
  }
}
};

$$.FilteredElementList_removeRange_anon = {"": [],
 "super": "Closure",
 call$1: function(el) {
  return el.remove$0();
}
};

$$.KeywordState_KEYWORD_STATE_anon = {"": [],
 "super": "Closure",
 call$2: function(a, b) {
  return $.compareTo(a, b);
}
};

$$.invokeClosure_anon = {"": ["closure_0"],
 "super": "Closure",
 call$0: function() {
  return this.closure_0.call$0();
}
};

$$.invokeClosure_anon0 = {"": ["closure_2", "arg1_1"],
 "super": "Closure",
 call$0: function() {
  return this.closure_2.call$1(this.arg1_1);
}
};

$$.invokeClosure_anon1 = {"": ["arg2_5", "closure_4", "arg1_3"],
 "super": "Closure",
 call$0: function() {
  return this.closure_4.call$2(this.arg1_3, this.arg2_5);
}
};

$$.CssClassSet_clear_anon = {"": [],
 "super": "Closure",
 call$1: function(s) {
  return $.getInterceptor(s).clear$0(s);
}
};

$$._HashSetImpl_filter_anon = {"": ["result_1", "f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1;
  if (this.f_0.call$1(key) === true) {
    t1 = this.result_1;
    $.getInterceptor(t1).add$1(t1, key);
  }
}
};

$$._HashSetImpl_forEach_anon = {"": ["f_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.f_0.call$1(key);
}
};

$$._HashSetImpl_addAll_anon = {"": ["this_0"],
 "super": "Closure",
 call$1: function(value) {
  $.indexSet(this.this_0.get$_backingMap(), value, value);
}
};

$$.CssClassSet_addAll_anon = {"": ["collection_0"],
 "super": "Closure",
 call$1: function(s) {
  return $.getInterceptor(s).addAll$1(s, this.collection_0);
}
};

$$.CssClassSet_add_anon = {"": ["value_0"],
 "super": "Closure",
 call$1: function(s) {
  return $.getInterceptor(s).add$1(s, this.value_0);
}
};

$$._DataAttributeMap_keys_anon = {"": ["keys_1", "this_0"],
 "super": "Closure",
 call$2: function(key, value) {
  var t1;
  if ($.getInterceptor(key).startsWith$1(key, 'data-') === true) {
    t1 = this.keys_1;
    $.getInterceptor(t1).add$1(t1, $.getInterceptor(key).substring$1(key, 5));
  }
}
};

$$._DataAttributeMap_forEach_anon = {"": ["f_1", "this_0"],
 "super": "Closure",
 call$2: function(key, value) {
  if ($.getInterceptor(key).startsWith$1(key, 'data-') === true)
    this.f_1.call$2($.getInterceptor(key).substring$1(key, 5), value);
}
};

$$.ConstantMap_forEach_anon = {"": ["f_1", "this_0"],
 "super": "Closure",
 call$1: function(key) {
  return this.f_1.call$2(key, $.index(this.this_0, key));
}
};

$$.Result_addRow_clickHandler = {"": ["this_0"],
 "super": "Closure",
 call$1: function(event$) {
  var t1 = this.this_0.get$url();
  $.window().get$location().set$href(t1);
  $.hideDropDown();
}
};

$$.Result_addRow_anon = {"": [],
 "super": "Closure",
 call$1: function(event$) {
  $.hideDropDownSuspend = true;
  return true;
}
};

$$.Result_addRow_anon0 = {"": [],
 "super": "Closure",
 call$1: function(event$) {
  $.hideDropDownSuspend = false;
  return false;
}
};

$$._convertDartToNative_PrepareForStructuredClone_findSlot = {"": ["copies_3", "values_2"],
 "super": "Closure",
 call$1: function(value) {
  var t1, length$, i, t2;
  t1 = this.values_2;
  if (typeof t1 !== 'string' && (typeof t1 !== 'object' || t1 === null || t1.constructor !== Array && !t1.is$JavaScriptIndexingBehavior()))
    return this.call$1$bailout0(1, value, t1);
  length$ = t1.length;
  for (i = 0; i < length$; ++i) {
    t2 = t1[i];
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.getInterceptor(t1).add$1(t1, value);
  t1 = this.copies_3;
  $.getInterceptor(t1).add$1(t1, null);
  return length$;
},
 call$1$bailout0: function(state0, value, t1) {
  var length$, i, t2;
  length$ = $.get$length(t1);
  for (i = 0; $.ltB(i, length$); ++i) {
    t2 = $.index(t1, i);
    if (t2 == null ? value == null : t2 === value)
      return i;
  }
  $.getInterceptor(t1).add$1(t1, value);
  t1 = this.copies_3;
  $.getInterceptor(t1).add$1(t1, null);
  return length$;
}
};

$$._convertDartToNative_PrepareForStructuredClone_readSlot = {"": ["copies_4"],
 "super": "Closure",
 call$1: function(i) {
  return $.index(this.copies_4, i);
}
};

$$._convertDartToNative_PrepareForStructuredClone_writeSlot = {"": ["copies_5"],
 "super": "Closure",
 call$2: function(i, x) {
  $.indexSet(this.copies_5, i, x);
}
};

$$._convertDartToNative_PrepareForStructuredClone_cleanupSlots = {"": [],
 "super": "Closure",
 call$0: function() {
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk = {"": ["readSlot_8", "findSlot_7", "writeSlot_6"],
 "super": "Closure",
 call$1: function(e) {
  var t1, slot, t2, length$, copy, t3, i, element, elementCopy, j, t4;
  t1 = {};
  if (e == null)
    return e;
  if (typeof e === 'boolean')
    return e;
  if (typeof e === 'number')
    return e;
  if (typeof e === 'string')
    return e;
  if (typeof e === 'object' && e !== null && !!e.is$Date)
    throw $.$$throw($.UnimplementedError$('structured clone of Date'));
  if (typeof e === 'object' && e !== null && !!e.is$RegExp)
    throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
  if (typeof e === 'object' && e !== null && e.is$File())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Blob())
    return e;
  if (typeof e === 'object' && e !== null && e.is$_FileList())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ImageData())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
    return e;
  if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
    return e;
  if (typeof e === 'object' && e !== null && e.is$Map()) {
    slot = this.findSlot_7.call$1(e);
    t1.copy_1 = this.readSlot_8.call$1(slot);
    t2 = t1.copy_1;
    if (!(t2 == null))
      return t2;
    t1.copy_1 = {};
    this.writeSlot_6.call$2(slot, t1.copy_1);
    $.getInterceptor(e).forEach$1(e, new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
    return t1.copy_1;
  }
  if (typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List())) {
    if (typeof e !== 'object' || e === null || (e.constructor !== Array || !!e.immutable$list) && !e.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(1, e);
    length$ = e.length;
    slot = this.findSlot_7.call$1(e);
    t2 = this.readSlot_8;
    copy = t2.call$1(slot);
    if (!(copy == null)) {
      if (true === copy) {
        copy = new Array(length$);
        this.writeSlot_6.call$2(slot, copy);
      }
      return copy;
    }
    t1 = e instanceof Array && !!!(e.immutable$list);
    t3 = this.writeSlot_6;
    if (t1) {
      t3.call$2(slot, true);
      for (i = 0; i < length$; ++i) {
        if (i >= e.length)
          throw $.ioore(i);
        element = e[i];
        elementCopy = this.call$1(element);
        if (!(elementCopy == null ? element == null : elementCopy === element)) {
          copy = t2.call$1(slot);
          if (true === copy) {
            copy = new Array(length$);
            t3.call$2(slot, copy);
          }
          if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
            return this.call$1$bailout(2, e, t3, elementCopy, length$, i, copy, slot);
          for (t1 = e.length, t2 = copy.length, j = 0; j < i; ++j) {
            if (j >= t1)
              throw $.ioore(j);
            t4 = e[j];
            if (j >= t2)
              throw $.ioore(j);
            copy[j] = t4;
          }
          if (i >= t2)
            throw $.ioore(i);
          copy[i] = elementCopy;
          ++i;
          break;
        }
      }
      if (copy == null) {
        t3.call$2(slot, e);
        copy = e;
      }
    } else {
      copy = new Array(length$);
      t3.call$2(slot, copy);
      i = 0;
    }
    if (typeof copy !== 'object' || copy === null || (copy.constructor !== Array || !!copy.immutable$list) && !copy.is$JavaScriptIndexingBehavior())
      return this.call$1$bailout(3, e, copy, length$, i);
    for (; i < length$; ++i) {
      if (i >= e.length)
        throw $.ioore(i);
      t1 = this.call$1(e[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  }
  throw $.$$throw($.UnimplementedError$('structured clone of other type'));
},
 call$1$bailout: function(state0, env0, env1, env2, env3, env4, env5, env6) {
  switch (state0) {
    case 1:
      e = env0;
      break;
    case 2:
      slot = env6;
      copy = env5;
      i = env4;
      length$ = env3;
      elementCopy = env2;
      t3 = env1;
      e = env0;
      break;
    case 3:
      i = env3;
      length$ = env2;
      copy = env1;
      e = env0;
      break;
  }
  switch (state0) {
    case 0:
      t1 = {};
      if (e == null)
        return e;
      if (typeof e === 'boolean')
        return e;
      if (typeof e === 'number')
        return e;
      if (typeof e === 'string')
        return e;
      if (typeof e === 'object' && e !== null && !!e.is$Date)
        throw $.$$throw($.UnimplementedError$('structured clone of Date'));
      if (typeof e === 'object' && e !== null && !!e.is$RegExp)
        throw $.$$throw($.UnimplementedError$('structured clone of RegExp'));
      if (typeof e === 'object' && e !== null && e.is$File())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Blob())
        return e;
      if (typeof e === 'object' && e !== null && e.is$_FileList())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ImageData())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBuffer())
        return e;
      if (typeof e === 'object' && e !== null && e.is$ArrayBufferView())
        return e;
      if (typeof e === 'object' && e !== null && e.is$Map()) {
        slot = this.findSlot_7.call$1(e);
        t1.copy_1 = this.readSlot_8.call$1(slot);
        t2 = t1.copy_1;
        if (!(t2 == null))
          return t2;
        t1.copy_1 = {};
        this.writeSlot_6.call$2(slot, t1.copy_1);
        $.getInterceptor(e).forEach$1(e, new $._convertDartToNative_PrepareForStructuredClone_walk_anon(this, t1));
        return t1.copy_1;
      }
    default:
      var t1, slot, t2, e, length$, copy, t3, i, element, elementCopy, j;
      if (state0 === 3 || state0 === 2 || state0 === 1 || state0 === 0 && typeof e === 'object' && e !== null && (e.constructor === Array || e.is$List()))
        switch (state0) {
          case 0:
          case 1:
            state0 = 0;
            length$ = $.get$length(e);
            slot = this.findSlot_7.call$1(e);
            t2 = this.readSlot_8;
            copy = t2.call$1(slot);
            if (!(copy == null)) {
              if (true === copy) {
                copy = new Array(length$);
                this.writeSlot_6.call$2(slot, copy);
              }
              return copy;
            }
            t1 = e instanceof Array && !!!(e.immutable$list);
            t3 = this.writeSlot_6;
          case 2:
            if (state0 === 2 || state0 === 0 && t1)
              switch (state0) {
                case 0:
                  t3.call$2(slot, true);
                  i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          if (!$.ltB(i, length$))
                            break L0;
                          element = $.index(e, i);
                          elementCopy = this.call$1(element);
                        case 2:
                          if (state0 === 2 || state0 === 0 && !(elementCopy == null ? element == null : elementCopy === element))
                            switch (state0) {
                              case 0:
                                copy = t2.call$1(slot);
                                if (true === copy) {
                                  copy = new Array(length$);
                                  t3.call$2(slot, copy);
                                }
                              case 2:
                                state0 = 0;
                                for (j = 0; j < i; ++j)
                                  $.indexSet(copy, j, $.index(e, j));
                                $.indexSet(copy, i, elementCopy);
                                ++i;
                                break L0;
                            }
                          ++i;
                      }
                  if (copy == null) {
                    t3.call$2(slot, e);
                    copy = e;
                  }
              }
            else {
              copy = new Array(length$);
              t3.call$2(slot, copy);
              i = 0;
            }
          case 3:
            state0 = 0;
            for (; $.ltB(i, length$); ++i)
              $.indexSet(copy, i, this.call$1($.index(e, i)));
            return copy;
        }
      throw $.$$throw($.UnimplementedError$('structured clone of other type'));
  }
}
};

$$._convertDartToNative_PrepareForStructuredClone_walk_anon = {"": ["walk_9", "box_0"],
 "super": "Closure",
 call$2: function(key, value) {
  this.box_0.copy_1[key] = this.walk_9.call$1(value);
}
};

$$.BoundClosure = {'':
['self', 'target'],
'super': 'Closure',
call$0: function() { return this.self[this.target](); }
};
$$.BoundClosure0 = {'':
['self', 'target'],
'super': 'Closure',
call$1: function(p0) { return this.self[this.target](p0); }
};
$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$._Device_isOpera = function() {
  return $.contains$2($._Device_userAgent(), 'Opera', 0);
};

$._Device_isFirefox = function() {
  return $.contains$2($._Device_userAgent(), 'Firefox', 0);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Collections_contains = function(iterable, element) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    if ($.eqB(t1.next$0(), element))
      return true;
  return false;
};

$._Device_isIE = function() {
  return $._Device_isOpera() !== true && $.contains$2($._Device_userAgent(), 'MSIE', 0) === true;
};

$._Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      $.getInterceptor(destination).add$1(destination, t2);
  }
  return destination;
};

$._NodeListWrapper$ = function(list) {
  return new $._NodeListWrapper(list);
};

$.DedicatedWorkerContextEvents$ = function(_ptr) {
  return new $.DedicatedWorkerContextEvents(_ptr);
};

$._Sort__doSort = function(a, left, right, compare) {
  if ($.leB($.sub(right, left), 32))
    $._Sort_insertionSort_(a, left, right, compare);
  else
    $._Sort__dualPivotQuicksort(a, left, right, compare);
};

$._Sort__dualPivotQuicksort = function(a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, t1, el1, el2, el3, el4, el5, t0, t2, less, great, pivots_are_equal, k, ak, comp, great0, less0, t3;
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort__dualPivotQuicksort$bailout(1, a, left, right, compare);
  sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  if (typeof sixth !== 'number')
    throw $.iae(sixth);
  index1 = left + sixth;
  index5 = $.sub(right, sixth);
  if (typeof right !== 'number')
    throw $.iae(right);
  index3 = $.tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  if (index1 !== (index1 | 0))
    throw $.iae(index1);
  t1 = a.length;
  if (index1 < 0 || index1 >= t1)
    throw $.ioore(index1);
  el1 = a[index1];
  if (index2 !== (index2 | 0))
    throw $.iae(index2);
  if (index2 < 0 || index2 >= t1)
    throw $.ioore(index2);
  el2 = a[index2];
  if (index3 !== (index3 | 0))
    throw $.iae(index3);
  if (index3 < 0 || index3 >= t1)
    throw $.ioore(index3);
  el3 = a[index3];
  if (index4 !== (index4 | 0))
    throw $.iae(index4);
  if (index4 < 0 || index4 >= t1)
    throw $.ioore(index4);
  el4 = a[index4];
  if (index5 !== (index5 | 0))
    throw $.iae(index5);
  if (index5 < 0 || index5 >= t1)
    throw $.ioore(index5);
  el5 = a[index5];
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  t1 = a.length;
  if (index1 >= t1)
    throw $.ioore(index1);
  a[index1] = el1;
  if (index3 >= t1)
    throw $.ioore(index3);
  a[index3] = el3;
  if (index5 >= t1)
    throw $.ioore(index5);
  a[index5] = el5;
  if (left !== (left | 0))
    throw $.iae(left);
  if (left < 0 || left >= t1)
    throw $.ioore(left);
  t2 = a[left];
  if (index2 >= t1)
    throw $.ioore(index2);
  a[index2] = t2;
  if (right !== (right | 0))
    throw $.iae(right);
  if (right < 0 || right >= t1)
    throw $.ioore(right);
  t2 = a[right];
  if (index4 >= t1)
    throw $.ioore(index4);
  a[index4] = t2;
  less = left + 1;
  great = right - 1;
  pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      comp = compare.call$2(ak, el2);
      if ($.eqB(comp, 0))
        continue;
      if ($.ltB(comp, 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else
        for (; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          comp = compare.call$2(a[great], el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else {
            t1 = $.ltB(comp, 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
              break;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
              break;
            }
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.gtB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
  t1 = less - 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  t2 = a.length;
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (left >= t2)
    throw $.ioore(left);
  a[left] = t3;
  a[t1] = el2;
  t1 = great + 1;
  if (t1 !== (t1 | 0))
    throw $.iae(t1);
  if (t1 < 0 || t1 >= t2)
    throw $.ioore(t1);
  t3 = a[t1];
  if (right >= t2)
    throw $.ioore(right);
  a[right] = t3;
  a[t1] = el4;
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && great > index5) {
    while (true) {
      if (less !== (less | 0))
        throw $.iae(less);
      if (less < 0 || less >= a.length)
        throw $.ioore(less);
      if (!$.eqB(compare.call$2(a[less], el2), 0))
        break;
      ++less;
    }
    while (true) {
      if (great !== (great | 0))
        throw $.iae(great);
      if (great < 0 || great >= a.length)
        throw $.ioore(great);
      if (!$.eqB(compare.call$2(a[great], el4), 0))
        break;
      --great;
    }
    for (k = less; k <= great; ++k) {
      if (k !== (k | 0))
        throw $.iae(k);
      if (k < 0 || k >= a.length)
        throw $.ioore(k);
      ak = a[k];
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          if (less !== (less | 0))
            throw $.iae(less);
          t1 = a.length;
          if (less < 0 || less >= t1)
            throw $.ioore(less);
          t2 = a[less];
          if (k >= t1)
            throw $.ioore(k);
          a[k] = t2;
          a[less] = ak;
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (; true;) {
          if (great !== (great | 0))
            throw $.iae(great);
          if (great < 0 || great >= a.length)
            throw $.ioore(great);
          if ($.eqB(compare.call$2(a[great], el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if (great >= a.length)
              throw $.ioore(great);
            t1 = $.ltB(compare.call$2(a[great], el2), 0);
            t2 = a.length;
            great0 = great - 1;
            if (t1) {
              if (less !== (less | 0))
                throw $.iae(less);
              if (less < 0 || less >= t2)
                throw $.ioore(less);
              t1 = a[less];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              less0 = less + 1;
              if (great >= t2)
                throw $.ioore(great);
              a[less] = a[great];
              a[great] = ak;
              great = great0;
              less = less0;
            } else {
              if (great >= t2)
                throw $.ioore(great);
              t1 = a[great];
              if (k >= t2)
                throw $.ioore(k);
              a[k] = t1;
              a[great] = ak;
              great = great0;
            }
            break;
          }
        }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$._Sort_insertionSort_ = function(a, left, right, compare) {
  var i, el, j, t1, t2, j0;
  if (typeof a !== 'object' || a === null || (a.constructor !== Array || !!a.immutable$list) && !a.is$JavaScriptIndexingBehavior())
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  if (typeof right !== 'number')
    return $._Sort_insertionSort_$bailout(1, a, left, right, compare);
  for (i = left + 1; i <= right; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    el = a[i];
    j = i;
    while (true) {
      if (j > left) {
        t1 = j - 1;
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= a.length)
          throw $.ioore(t1);
        t2 = $.gtB(compare.call$2(a[t1], el), 0);
        t1 = t2;
      } else
        t1 = false;
      t2 = a.length;
      if (!t1)
        break;
      j0 = j - 1;
      if (j0 !== (j0 | 0))
        throw $.iae(j0);
      if (j0 < 0 || j0 >= t2)
        throw $.ioore(j0);
      t1 = a[j0];
      if (j !== (j | 0))
        throw $.iae(j);
      if (j < 0 || j >= t2)
        throw $.ioore(j);
      a[j] = t1;
      j = j0;
    }
    if (j !== (j | 0))
      throw $.iae(j);
    if (j < 0 || j >= t2)
      throw $.ioore(j);
    a[j] = el;
  }
};

$.WorkerContextEvents$ = function(_ptr) {
  return new $.WorkerContextEvents(_ptr);
};

$.add = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a + b : $.add$slow(a, b);
};

$.sub = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a - b : $.sub$slow(a, b);
};

$.gt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b);
};

$.lt = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b);
};

$.gtB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a > b : $.gt$slow(a, b) === true;
};

$.geB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a >= b : $.ge$slow(a, b) === true;
};

$.ltB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a < b : $.lt$slow(a, b) === true;
};

$.leB = function(a, b) {
  return typeof a === 'number' && typeof b === 'number' ? a <= b : $.le$slow(a, b) === true;
};

$.index = function(a, index) {
  var key;
  if (typeof a == "string" || a.constructor === Array) {
    key = index >>> 0;
    if (key === index && key < a.length)
      return a[key];
  }
  return $.index$slow(a, index);
};

$.indexSet = function(a, index, value) {
  var key;
  if (a.constructor === Array && !a.immutable$list) {
    key = index >>> 0;
    if (key === index && key < a.length) {
      a[key] = value;
      return;
    }
  }
  $.indexSet$slow(a, index, value);
};

$.checkNumbers = function(a, b) {
  if (typeof a === 'number')
    if (typeof b === 'number')
      return true;
    else {
      $.checkNull(b);
      throw $.$$throw($.ArgumentError$(b));
    }
  return false;
};

$.isJsArray = function(value) {
  return !(value == null) && value.constructor === Array;
};

$.add$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a + b;
  return a.operator$add$1(b);
};

$.sub$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a - b;
  return a.operator$sub$1(b);
};

$.tdiv = function(a, b) {
  if ($.checkNumbers(a, b))
    return $.truncate(a / b);
  return a.operator$tdiv$1(b);
};

$.eq = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b);
  return a === b;
};

$.eqB = function(a, b) {
  if (a == null)
    return b == null;
  if (b == null)
    return false;
  if (typeof a === "object")
    if (!!a.operator$eq$1)
      return a.operator$eq$1(b) === true;
  return a === b;
};

$.gt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a > b;
  return a.operator$gt$1(b);
};

$.ge$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a >= b;
  return a.operator$ge$1(b);
};

$.lt$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a < b;
  return a.operator$lt$1(b);
};

$.and = function(a, b) {
  if ($.checkNumbers(a, b))
    return (a & b) >>> 0;
  return a.operator$and$1(b);
};

$.index$slow = function(a, index) {
  var t1;
  if (!(typeof a === 'string'))
    t1 = !(a == null) && a.constructor === Array;
  else
    t1 = true;
  if (t1) {
    if (!(typeof index === 'number' && Math.floor(index) === index)) {
      if (!(typeof index === 'number'))
        throw $.$$throw($.ArgumentError$(index));
      if (!($.truncate(index) === index))
        throw $.$$throw($.ArgumentError$(index));
    }
    if ($.ltB(index, 0) || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    return a[index];
  }
  return a.operator$index$1(index);
};

$.indexSet$slow = function(a, index, value) {
  if (!(a == null) && a.constructor === Array) {
    if (!(typeof index === 'number' && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0 || $.geB(index, $.get$length(a)))
      throw $.$$throw($.RangeError$value(index));
    $.checkMutable(a, 'indexed set');
    a[index] = value;
    return;
  }
  a.oprator$indexSet$2(index, value);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var res = $.toString(value);
  if (!(typeof res === 'string'))
    throw $.$$throw($.ArgumentError$(value));
  return res;
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.NullPointerException$(null, $.CTC3));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === 'number')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.checkString = function(value) {
  if (!(typeof value === 'string')) {
    $.checkNull(value);
    throw $.$$throw($.ArgumentError$(value));
  }
  return value;
};

$.$$throw = function(ex) {
  var jsError;
  if (ex == null)
    ex = $.CTC;
  jsError = new Error();
  jsError.name = ex;
  jsError.description = ex;
  jsError.dartException = ex;
  jsError.toString = $.toStringWrapper.call$0;
  throw jsError;
};

$.toStringWrapper = function() {
  return $.toString(this.dartException);
};

$.unwrapException = function(ex) {
  var message, type, name$, ieErrorCode, ieFacilityNumber, t1;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name$ = ex.arguments ? ex.arguments[0] : "";
    if ($.eqB(type, 'property_not_function') || $.eqB(type, 'called_non_callable') || $.eqB(type, 'non_object_property_call') || $.eqB(type, 'non_object_property_load'))
      return $.NullPointerException$(null, $.CTC3);
    else if ($.eqB(type, 'undefined_method'))
      return $.NoSuchMethodError$('', name$, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    if (typeof message === 'string')
      if ($.getInterceptor(message).endsWith$1(message, 'is null') === true || $.getInterceptor(message).endsWith$1(message, 'is undefined') === true || $.getInterceptor(message).endsWith$1(message, 'is null or undefined') === true)
        return $.NullPointerException$(null, $.CTC3);
      else {
        if ($.contains$1(message, ' is not a function') !== true)
          t1 = ieErrorCode === 438 && ieFacilityNumber === 10;
        else
          t1 = true;
        if (t1)
          return $.NoSuchMethodError$('', '<unknown>', [], $.makeLiteralMap([]), null);
      }
    return $._ExceptionImplementation$(typeof message === 'string' ? message : '');
  }
  if (ex instanceof RangeError) {
    if (typeof message === 'string' && $.contains$1(message, 'call stack') === true)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === 'string' && message === 'too much recursion')
      return $.StackOverflowError$();
  return ex;
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result;
  iterator = $.iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (; iterator.get$hasNext() === true;)
    $.indexSet(result, iterator.next$0(), iterator.next$0());
  return result;
};

$.le$slow = function(a, b) {
  if ($.checkNumbers(a, b))
    return a <= b;
  return a.operator$le$1(b);
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  if ($.eqB(numberOfArguments, 0))
    return new $.invokeClosure_anon(closure).call$0();
  else if ($.eqB(numberOfArguments, 1))
    return new $.invokeClosure_anon0(closure, arg1).call$0();
  else if ($.eqB(numberOfArguments, 2))
    return new $.invokeClosure_anon1(arg2, closure, arg1).call$0();
  else
    throw $.$$throw($._ExceptionImplementation$('Unsupported number of arguments for wrapped closure'));
};

$.convertDartClosureToJS = function(closure, arity) {
  var function$;
  if (closure == null)
    return;
  function$ = closure.$identity;
  if (!!function$)
    return function$;
  function$ = function() {
    return $.invokeClosure.call$5(closure, $, arity, arguments[0], arguments[1]);
  };
  closure.$identity = function$;
  return function$;
};

$.setRuntimeTypeInfo = function(target, typeInfo) {
  if (!(target == null))
    target.builtin$typeInfo = typeInfo;
};

$.getRuntimeTypeInfo = function(target) {
  var res;
  if (target == null)
    return;
  res = target.builtin$typeInfo;
  return res == null ? {} : res;
};

$.Collections_forEach = function(iterable, f) {
  var t1;
  for (t1 = $.iterator(iterable); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
};

$.Collections_filter = function(source, destination, f) {
  var t1, t2;
  for (t1 = $.iterator(source); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (f.call$1(t2) === true)
      $.getInterceptor(destination).add$1(destination, t2);
  }
  return destination;
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$('Cyclic initialization for static ' + $.S(staticName)));
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer('');
  $.Collections__emitCollection(c, result, $._ListImpl_List(null));
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var isList, t1, first, t2;
  $.getInterceptor(visiting).add$1(visiting, c);
  isList = typeof c === 'object' && c !== null && (c.constructor === Array || c.is$List());
  t1 = $.getInterceptor(result);
  t1.add$1(result, isList ? '[' : '{');
  for (t1 = $.iterator(c), first = true; t1.get$hasNext() === true; first = false) {
    t2 = t1.next$0();
    if (!first)
      $.getInterceptor(result).add$1(result, ', ');
    $.Collections__emitObject(t2, result, visiting);
  }
  t1 = $.getInterceptor(result);
  t1.add$1(result, isList ? ']' : '}');
  $.getInterceptor(visiting).removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  var t1;
  if (typeof o === 'object' && o !== null && (o.constructor === Array || o.is$Collection()))
    if ($.Collections__containsRef(visiting, o)) {
      t1 = $.getInterceptor(result);
      t1.add$1(result, typeof o === 'object' && o !== null && (o.constructor === Array || o.is$List()) ? '[...]' : '{...}');
    } else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === 'object' && o !== null && o.is$Map())
    if ($.Collections__containsRef(visiting, o))
      $.getInterceptor(result).add$1(result, '{...}');
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.getInterceptor(result).add$1(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.typeNameInChrome = function(obj) {
  var name$ = obj.constructor.name;
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$.typeNameInSafari = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'WebKitMutationObserver')
    return 'MutationObserver';
  if (name$ === 'AudioChannelMerger')
    return 'ChannelMergerNode';
  if (name$ === 'AudioChannelSplitter')
    return 'ChannelSplitterNode';
  if (name$ === 'AudioGainNode')
    return 'GainNode';
  if (name$ === 'AudioPannerNode')
    return 'PannerNode';
  if (name$ === 'JavaScriptAudioNode')
    return 'ScriptProcessorNode';
  if (name$ === 'Oscillator')
    return 'OscillatorNode';
  if (name$ === 'RealtimeAnalyserNode')
    return 'AnalyserNode';
  return name$;
};

$.typeNameInOpera = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  return name$;
};

$.typeNameInFirefox = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'XMLDocument')
    return 'Document';
  if (name$ === 'WorkerMessageEvent')
    return 'MessageEvent';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'MouseScrollEvent')
    return 'WheelEvent';
  if (name$ === 'OfflineResourceList')
    return 'DOMApplicationCache';
  return name$;
};

$.typeNameInIE = function(obj) {
  var name$ = $.constructorNameFallback(obj);
  if (name$ === 'Window')
    return 'DOMWindow';
  if (name$ === 'Document') {
    if (!!obj.xmlVersion)
      return 'Document';
    return 'HTMLDocument';
  }
  if (name$ === 'ApplicationCache')
    return 'DOMApplicationCache';
  if (name$ === 'CanvasPixelArray')
    return 'Uint8ClampedArray';
  if (name$ === 'DataTransfer')
    return 'Clipboard';
  if (name$ === 'DragEvent')
    return 'MouseEvent';
  if (name$ === 'HTMLDDElement')
    return 'HTMLElement';
  if (name$ === 'HTMLDTElement')
    return 'HTMLElement';
  if (name$ === 'HTMLTableDataCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLTableHeaderCellElement')
    return 'HTMLTableCellElement';
  if (name$ === 'HTMLPhraseElement')
    return 'HTMLElement';
  if (name$ === 'MSStyleCSSProperties')
    return 'CSSStyleDeclaration';
  if (name$ === 'MouseWheelEvent')
    return 'WheelEvent';
  return name$;
};

$.constructorNameFallback = function(object) {
  var constructor$, name$, t1, string;
  if (object == null)
    return 'Null';
  constructor$ = object.constructor;
  if (typeof(constructor$) === 'function') {
    name$ = constructor$.name;
    if (typeof name$ === 'string')
      t1 = !(name$ === '') && !(name$ === 'Object') && !(name$ === 'Function.prototype');
    else
      t1 = false;
    if (t1)
      return name$;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.DocumentEvents$ = function(_ptr) {
  return new $.DocumentEvents(_ptr);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === 'object'))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf('Chrome') !== -1 || userAgent.indexOf('DumpRenderTree') !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf('Firefox') !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf('MSIE') !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf('Opera') !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf('AppleWebKit') !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return 'Instance of ' + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property,
      {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name$, methods, arguments$) {
  var tag, hasOwnProperty, method, i, entry, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnProperty = Object.prototype.hasOwnProperty;
  method = $.lookupDynamicClass(hasOwnProperty, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if (hasOwnProperty.call(entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnProperty, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnProperty, methods, $.getTypeNameOf($.CTC80));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name$ + " is not a function");} else {return Object.prototype[name$].apply(this, arguments);}};
  if (!hasOwnProperty.call(proto, name$))
    $.defineProperty(proto, name$, method);
  return method.apply(obj, arguments$);
};

$.lookupDynamicClass = function(hasOwnProperty, methods, className) {
  return hasOwnProperty.call(methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name$) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name$];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CTC80)[name$];
  if (!(dartMethod == null))
    methods['Object'] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name$, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name$, bind);
  return methods;
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === 'undefined') {
    var t1 = [];
    $._dynamicMetadata(t1);
  }
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = $.getInterceptor(tags).split$1(tags, '|');
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    $.getInterceptor(result).add$1(result, $.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.regExpMakeNative = function(regExp, global, exception) {
  var pattern, multiLine, ignoreCase, sb, t1, e;
  pattern = regExp.get$pattern();
  multiLine = regExp.get$multiLine();
  ignoreCase = regExp.get$ignoreCase();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer('');
  if (multiLine === true) {
    t1 = sb;
    $.getInterceptor(t1).add$1(t1, 'm');
  }
  if (ignoreCase === true) {
    t1 = sb;
    $.getInterceptor(t1).add$1(t1, 'i');
  }
  if (global === true) {
    t1 = sb;
    $.getInterceptor(t1).add$1(t1, 'g');
  }
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, length$, patternLength, startIndex, position, endIndex;
  result = $._ListImpl_List(null);
  length$ = $.get$length(haystack);
  patternLength = $.get$length(needle);
  if (patternLength !== (patternLength | 0))
    return $.allMatchesInStringUnchecked$bailout(1, needle, haystack, patternLength, result, length$);
  for (startIndex = 0; true;) {
    position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    $.getInterceptor(result).add$1(result, $.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  var substr;
  if (typeof other === 'string')
    return !$.eqB($.indexOf$2(receiver, other, startIndex), -1);
  else if (typeof other === 'object' && other !== null && !!other.is$JSSyntaxRegExp)
    return other.hasMatch$1($.getInterceptor(receiver).substring$1(receiver, startIndex));
  else {
    substr = $.getInterceptor(receiver).substring$1(receiver, startIndex);
    return $.iterator($.getInterceptor(other).allMatches$1(other, substr)).get$hasNext();
  }
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length$, i;
  if (typeof receiver !== 'string')
    return $.stringReplaceAllUnchecked$bailout(1, receiver, from, to);
  if (typeof from === 'string')
    if (from === '')
      if (receiver === '')
        return to;
      else {
        result = $.StringBuffer_StringBuffer('');
        length$ = receiver.length;
        $.getInterceptor(result).add$1(result, to);
        for (i = 0; i < length$; ++i) {
          $.getInterceptor(result).add$1(result, receiver[i]);
          $.getInterceptor(result).add$1(result, to);
        }
        return $.toString(result);
      }
    else
      return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
  else if (typeof from === 'object' && from !== null && !!from.is$JSSyntaxRegExp)
    return $.stringReplaceJS(receiver, $.regExpMakeNative(from, true), to);
  else {
    $.checkNull(from);
    throw $.$$throw('String.replaceAll(Pattern) UNIMPLEMENTED');
  }
};

$.stringSplitUnchecked = function(receiver, pattern) {
  if (typeof pattern === 'string')
    return receiver.split(pattern);
  else if (typeof pattern === 'object' && pattern !== null && !!pattern.is$JSSyntaxRegExp)
    return receiver.split($.regExpGetNative(pattern));
  else
    throw $.$$throw('String.split(Pattern) UNIMPLEMENTED');
};

$.stringJoinUnchecked = function(array, separator) {
  return array.join(separator);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = $.window();
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.coreSort = function(l, compare) {
  $._Sort__doSort(l, 0, $.sub($.get$length(l), 1), compare);
  return;
};

$.getInterceptor = function(object) {
  if (typeof object === 'string')
    return $.CTC0;
  if ($.isJsArray(object))
    return $.CTC1;
  return $.CTC2;
};

$.get$length = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length;
  else
    return receiver.get$length();
};

$.set$length = function(receiver, newLength) {
  if ($.isJsArray(receiver)) {
    $.checkNull(newLength);
    if (!(typeof newLength === 'number' && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, 'set length');
    receiver.length = newLength;
  } else
    receiver.set$length(newLength);
  return newLength;
};

$.toString = function(value) {
  if (typeof value == "object" && value != null)
    if ($.isJsArray(value))
      return $.Collections_collectionToString(value);
    else
      return value.toString$0();
  if (value === 0 && (1 / value) < 0)
    return '-0.0';
  if (value == null)
    return 'null';
  if (typeof value == "function")
    return 'Closure';
  return String(value);
};

$.get$isEmpty = function(receiver) {
  if (typeof receiver === 'string' || $.isJsArray(receiver))
    return receiver.length === 0;
  return receiver.get$isEmpty();
};

$.compareTo = function(a, b) {
  var aIsNegative, t1;
  if ($.checkNumbers(a, b))
    if ($.ltB(a, b))
      return -1;
    else if ($.gtB(a, b))
      return 1;
    else if ($.eqB(a, b)) {
      if ($.eqB(a, 0)) {
        aIsNegative = $.get$isNegative(a);
        if ($.eqB(aIsNegative, $.get$isNegative(b)))
          return 0;
        if (aIsNegative === true)
          return -1;
        return 1;
      }
      return 0;
    } else if ($.get$isNaN(a) === true) {
      if ($.get$isNaN(b) === true)
        return 0;
      return 1;
    } else
      return -1;
  else if (typeof a === 'string') {
    if (!(typeof b === 'string'))
      throw $.$$throw($.ArgumentError$(b));
    if (a == b)
      t1 = 0;
    else
      t1 = a < b ? -1 : 1;
    return t1;
  } else
    return a.compareTo$1(b);
};

$.iterator = function(receiver) {
  if ($.isJsArray(receiver))
    return $.ListIterator$(receiver);
  return receiver.iterator$0();
};

$.indexOf$1 = function(receiver, element) {
  if ($.isJsArray(receiver))
    return $.Arrays_indexOf(receiver, element, 0, receiver.length);
  else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    return receiver.indexOf(element);
  }
  return receiver.indexOf$1(element);
};

$.indexOf$2 = function(receiver, element, start) {
  if ($.isJsArray(receiver)) {
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  } else if (typeof receiver === 'string') {
    $.checkNull(element);
    if (!(typeof start === 'number' && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof element === 'string'))
      throw $.$$throw($.ArgumentError$(element));
    if (start < 0)
      return -1;
    return receiver.indexOf(element, start);
  }
  return receiver.indexOf$2(element, start);
};

$.get$last = function(receiver) {
  if (!$.isJsArray(receiver))
    return receiver.get$last();
  return $.index(receiver, $.sub($.get$length(receiver), 1));
};

$.sort$1 = function(receiver, compare) {
  if (!$.isJsArray(receiver))
    return receiver.sort$1(compare);
  $.checkMutable(receiver, 'sort');
  $.coreSort(receiver, compare);
};

$.get$isNegative = function(receiver) {
  if (typeof receiver === 'number')
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  else
    return receiver.get$isNegative();
};

$.get$isNaN = function(receiver) {
  if (typeof receiver === 'number')
    return isNaN(receiver);
  else
    return receiver.get$isNaN();
};

$.ceil = function(receiver) {
  return Math.ceil(receiver);
};

$.floor = function(receiver) {
  return Math.floor(receiver);
};

$.truncate = function(receiver) {
  return receiver < 0 ? $.ceil(receiver) : $.floor(receiver);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1 = {};
  $.getInterceptor(visiting).add$1(visiting, m);
  $.getInterceptor(result).add$1(result, '{');
  t1.first_1 = true;
  $.getInterceptor(m).forEach$1(m, new $.Maps__emitMap_anon(visiting, result, t1));
  $.getInterceptor(result).add$1(result, '}');
  $.getInterceptor(visiting).removeLast$0(visiting);
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer('');
  $.Maps__emitMap(m, result, $._ListImpl_List(null));
  return $.toString(result);
};

$.contains$1 = function(receiver, other) {
  var t1, i;
  if (typeof receiver !== 'string' && (typeof receiver !== 'object' || receiver === null || receiver.constructor !== Array && !receiver.is$JavaScriptIndexingBehavior()))
    return $.contains$1$bailout(1, receiver, other);
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (t1 = receiver.length, i = 0; i < t1; ++i)
      if (other === receiver[i])
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.StringBuffer_StringBuffer = function(content$) {
  return $._StringBufferImpl$(content$);
};

$.get$hashCode = function(receiver) {
  var length$, hash, i, hash0, hash1;
  if (receiver == null)
    return 0;
  if (typeof receiver === 'number')
    return receiver & 536870911;
  if (typeof receiver === 'boolean')
    return receiver ? 1077375012 : 3247177846;
  if ($.isJsArray(receiver))
    return $.Primitives_objectHashCode(receiver);
  if (!(typeof receiver === 'string'))
    return receiver.get$hashCode();
  length$ = receiver.length;
  for (hash = 0, i = 0; i < length$; ++i, hash = hash1) {
    hash0 = 536870911 & hash + receiver.charCodeAt(i);
    hash1 = 536870911 & hash0 + (524287 & hash0) << 10;
    hash1 = hash1 ^ (hash1 >> 6);
  }
  hash0 = 536870911 & hash + (67108863 & hash) << 3;
  hash0 = hash0 ^ (hash0 >> 11);
  return 536870911 & hash0 + (16383 & hash0) << 15;
};

$.contains$2 = function(receiver, other, startIndex) {
  if (!(typeof receiver === 'string'))
    return receiver.contains$2(other, startIndex);
  $.checkNull(other);
  return $.stringContainsUnchecked(receiver, other, startIndex);
};

$.EventSourceEvents$ = function(_ptr) {
  return new $.EventSourceEvents(_ptr);
};

$._StringBufferImpl$ = function(content$) {
  var t1 = new $._StringBufferImpl(null, null);
  t1._StringBufferImpl$1(content$);
  return t1;
};

$.main = function() {
  $.setupLocation();
  var t1 = $.window().get$on().get$keyDown();
  $.getInterceptor(t1).add$1(t1, $.shortcutHandler);
  $.enableCodeBlocks();
  $.enableShowHideInherited();
  $.setupSearch($.json());
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  $.checkNull(separator);
  return $.stringJoinUnchecked($.Strings__toJsStringArray(strings), separator);
};

$.updateDropDown = function(event$) {
  var t1, results, text, typeText, memberText, searchText, t2, elements, table, count;
  if ($.libraryList == null)
    return;
  t1 = $.searchInput;
  if (t1 == null)
    return;
  if ($.dropdown == null)
    return;
  results = [];
  text = t1.get$value();
  if ($.eqB(text, $.currentSearchText))
    return;
  if ($.get$isEmpty(text) === true) {
    $.updateResults(text, results);
    $.hideDropDown();
    return;
  }
  if ($.contains$1(text, '.') === true) {
    typeText = $.getInterceptor(text).substring$2(text, 0, $.indexOf$1(text, '.'));
    memberText = $.getInterceptor(text).substring$1(text, $.add($.indexOf$1(text, '.'), 1));
    if ($.get$isEmpty(typeText) === true && $.get$isEmpty(memberText) === true)
      ;
    else if ($.get$isEmpty(typeText) === true)
      $.matchAllMembers(results, memberText);
    else if ($.get$isEmpty(memberText) === true)
      $.matchAllMembersInType(results, typeText, memberText);
    else
      $.matchMembersInType(results, text, typeText, memberText);
  } else {
    searchText = $.SearchText$(text);
    for (t1 = $.iterator($.libraryList); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      $.matchLibrary(results, searchText, t2);
      $.matchLibraryMembers(results, searchText, t2);
      $.matchTypes(results, searchText, t2);
    }
  }
  elements = [];
  table = $.TableElement_TableElement();
  t1 = table.get$classes();
  $.getInterceptor(t1).add$1(t1, 'drop-down-table');
  $.getInterceptor(elements).add$1(elements, table);
  if ($.get$isEmpty(results) === true)
    table.insertRow$1(0).set$innerHTML('<tr><td>No matches found for \'' + $.S(text) + '\'.</td></tr>');
  else {
    $.sort$1(results, $.resultComparator);
    for (t1 = $.iterator(results), count = 0; t1.get$hasNext() === true;) {
      t1.next$0().addRow$1(table);
      ++count;
      if (count >= 10)
        break;
    }
    if (results.length >= 10) {
      table.insertRow$1($.get$length(table.get$rows())).set$innerHTML('<tr><td>+ ' + $.S(results.length - 10) + ' more.</td></tr>');
      results = $.getInterceptor(results).getRange$2(results, 0, 10);
    }
  }
  $.dropdown.set$elements(elements);
  $.updateResults(text, results);
  $.showDropDown();
};

$.Strings__toJsStringArray = function(strings) {
  var length$, i, string, array;
  if (typeof strings !== 'object' || strings === null || (strings.constructor !== Array || !!strings.immutable$list) && !strings.is$JavaScriptIndexingBehavior())
    return $.Strings__toJsStringArray$bailout(1, strings);
  $.checkNull(strings);
  length$ = strings.length;
  if ($.isJsArray(strings)) {
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$);
    for (i = 0; i < length$; ++i) {
      if (i >= strings.length)
        throw $.ioore(i);
      string = strings[i];
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      array[i] = string;
    }
  }
  return array;
};

$.matchAllMembers = function(results, memberText) {
  var searchText, t1, t2, libraryName, t3, typeName, t4, t5, memberMatch;
  searchText = $.SearchText$(memberText);
  for (t1 = $.iterator($.libraryList); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    libraryName = $.index(t2, 'name');
    if (t2.containsKey$1('types') === true)
      for (t3 = $.iterator($.index(t2, 'types')); t3.get$hasNext() === true;) {
        t2 = t3.next$0();
        typeName = $.index(t2, 'name');
        if (t2.containsKey$1('members') === true)
          for (t4 = $.iterator($.index(t2, 'members')); t4.get$hasNext() === true;) {
            t5 = t4.next$0();
            memberMatch = $.obtainMatch(searchText, $.index(t5, 'name'));
            if (!(memberMatch == null))
              $.getInterceptor(results).add$1(results, $.Result$(memberMatch, $.index(t5, 'kind'), $.getTypeMemberUrl(libraryName, typeName, t5), $.index(t2, 'args'), libraryName, $.index(t5, 'noparams'), null, typeName));
          }
      }
  }
};

$.matchLibraryMembers = function(results, searchText, library) {
  var libraryName, t1, t2, memberMatch;
  if (library.containsKey$1('members') === true) {
    libraryName = $.index(library, 'name');
    for (t1 = $.iterator($.index(library, 'members')); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      memberMatch = $.obtainMatch(searchText, $.index(t2, 'name'));
      if (!(memberMatch == null))
        $.getInterceptor(results).add$1(results, $.Result$(memberMatch, $.index(t2, 'kind'), $.getLibraryMemberUrl(libraryName, t2), null, libraryName, $.index(t2, 'noparams'), null, null));
    }
  }
};

$.matchTypeMembers = function(results, searchText, libraryName, type) {
  var typeName, t1, t2, memberMatch;
  if (type.containsKey$1('members') === true) {
    typeName = $.index(type, 'name');
    for (t1 = $.iterator($.index(type, 'members')); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      memberMatch = $.obtainMatch(searchText, $.index(t2, 'name'));
      if (!(memberMatch == null))
        $.getInterceptor(results).add$1(results, $.Result$(memberMatch, $.index(t2, 'kind'), $.getTypeMemberUrl(libraryName, typeName, t2), $.index(type, 'args'), libraryName, $.index(t2, 'noparams'), null, typeName));
    }
  }
};

$.matchMembersInType = function(results, text, typeText, memberText) {
  var searchText, typeSearchText, memberSearchText, t1, t2, libraryName, t3, typeName, typeMatch, t4, t5, constructorMatch, memberMatch;
  searchText = $.SearchText$(text);
  typeSearchText = $.SearchText$(typeText);
  memberSearchText = $.SearchText$(memberText);
  for (t1 = $.iterator($.libraryList); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    libraryName = $.index(t2, 'name');
    if (t2.containsKey$1('types') === true)
      for (t3 = $.iterator($.index(t2, 'types')); t3.get$hasNext() === true;) {
        t2 = t3.next$0();
        typeName = $.index(t2, 'name');
        typeMatch = $.obtainMatch(typeSearchText, typeName);
        if (!(typeMatch == null))
          if (t2.containsKey$1('members') === true)
            for (t4 = $.iterator($.index(t2, 'members')); t4.get$hasNext() === true;) {
              t5 = t4.next$0();
              constructorMatch = $.obtainMatch(searchText, $.index(t5, 'name'));
              if (!(constructorMatch == null))
                $.getInterceptor(results).add$1(results, $.Result$(constructorMatch, $.index(t5, 'kind'), $.getTypeMemberUrl(libraryName, typeName, t5), null, libraryName, $.index(t5, 'noparams'), null, null));
              else {
                memberMatch = $.obtainMatch(memberSearchText, $.index(t5, 'name'));
                if (!(memberMatch == null))
                  $.getInterceptor(results).add$1(results, $.Result$(memberMatch, $.index(t5, 'kind'), $.getTypeMemberUrl(libraryName, typeName, t5), $.index(t2, 'args'), libraryName, $.index(t5, 'noparams'), typeMatch, null));
              }
            }
      }
  }
};

$.matchLibrary = function(results, searchText, library) {
  var libraryName, libraryMatch, t1, t2, t3;
  libraryName = $.index(library, 'name');
  libraryMatch = $.obtainMatch(searchText, libraryName);
  if (!(libraryMatch == null)) {
    t1 = $.getInterceptor(results);
    t2 = $.S($.prefix);
    t3 = $.getInterceptor(libraryName).replaceAll$2(libraryName, ':', '_');
    t1.add$1(results, $.Result$(libraryMatch, 'library', t2 + $.S($.getInterceptor(t3).replaceAll$2(t3, '/', '_')) + '.html', null, null, false, null, null));
  }
};

$.updateResults = function(searchText, results) {
  var t1;
  $.currentSearchText = searchText;
  $.currentResults = results;
  if ($.get$isEmpty($.currentResults) === true) {
    $._currentResultIndex = -1;
    $.currentResult(null);
  } else {
    $._currentResultIndex = 0;
    t1 = $.index($.currentResults, 0);
    $.currentResult(t1);
  }
};

$.currentResultIndex0 = function(index) {
  var t1;
  if ($.ltB(index, -1))
    return;
  if ($.geB(index, $.get$length($.currentResults)))
    return;
  if (!$.eqB(index, $._currentResultIndex)) {
    $._currentResultIndex = index;
    if ($.geB(index, 0)) {
      t1 = $.index($.currentResults, $._currentResultIndex);
      $.currentResult(t1);
    } else
      $.currentResult(null);
  }
};

$.matchTypes = function(results, searchText, library) {
  var libraryName, t1, t2;
  if (library.containsKey$1('types') === true) {
    libraryName = $.index(library, 'name');
    for (t1 = $.iterator($.index(library, 'types')); t1.get$hasNext() === true;) {
      t2 = t1.next$0();
      $.index(t2, 'name');
      $.matchType(results, searchText, libraryName, t2);
      $.matchTypeMembers(results, searchText, libraryName, t2);
    }
  }
};

$.currentResultIndex = function() {
  return $._currentResultIndex;
};

$.currentResult0 = function() {
  return $._currentResult;
};

$.showDropDown = function() {
  if ($.get$isEmpty($.currentResults) === true)
    $.hideDropDown();
  else
    $.dropdown.get$style().set$visibility('visible');
};

$.handleUpDown = function(event$) {
  var t1;
  if ($.eqB(event$.get$keyIdentifier(), 'Up')) {
    t1 = $.sub($.currentResultIndex(), 1);
    $.currentResultIndex0(t1);
    event$.preventDefault$0();
  } else if ($.eqB(event$.get$keyIdentifier(), 'Down')) {
    t1 = $.add($.currentResultIndex(), 1);
    $.currentResultIndex0(t1);
    event$.preventDefault$0();
  } else if ($.eqB(event$.get$keyIdentifier(), 'Enter'))
    if (!($.currentResult0() == null)) {
      t1 = $.currentResult0().get$url();
      $.window().get$location().set$href(t1);
      event$.preventDefault$0();
      $.hideDropDown();
    }
};

$.shortcutHandler = function(event$) {
  if ($.eqB(event$.get$keyCode(), 51) && event$.get$ctrlKey() === true) {
    $.searchInput.focus$0();
    event$.preventDefault$0();
  } else if (!$.eqB(event$.get$target(), $.searchInput) && $.eqB(event$.get$keyCode(), 83)) {
    $.searchInput.focus$0();
    event$.preventDefault$0();
  }
};

$.matchAllMembersInType = function(results, typeText, memberText) {
  var searchText, emptyText, t1, t2, libraryName, t3, typeName, typeMatch, t4, memberMatch;
  searchText = $.SearchText$(typeText);
  emptyText = $.SearchText$(memberText);
  for (t1 = $.iterator($.libraryList); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    libraryName = $.index(t2, 'name');
    if (t2.containsKey$1('types') === true)
      for (t3 = $.iterator($.index(t2, 'types')); t3.get$hasNext() === true;) {
        t2 = t3.next$0();
        typeName = $.index(t2, 'name');
        typeMatch = $.obtainMatch(searchText, typeName);
        if (!(typeMatch == null))
          if (t2.containsKey$1('members') === true)
            for (t4 = $.iterator($.index(t2, 'members')); t4.get$hasNext() === true;) {
              t2 = t4.next$0();
              memberMatch = $.obtainMatch(emptyText, $.index(t2, 'name'));
              $.getInterceptor(results).add$1(results, $.Result$(memberMatch, $.index(t2, 'kind'), $.getTypeMemberUrl(libraryName, typeName, t2), null, libraryName, $.index(t2, 'noparams'), typeMatch, null));
            }
      }
  }
};

$.setupSearch = function(libraries) {
  var t1;
  $.libraryList = libraries;
  $.searchInput = $.query('#q');
  $.dropdown = $.query('#drop-down');
  t1 = $.searchInput.get$on().get$keyDown();
  $.getInterceptor(t1).add$1(t1, $.handleUpDown);
  t1 = $.searchInput.get$on().get$keyUp();
  $.getInterceptor(t1).add$1(t1, $.updateDropDown);
  t1 = $.searchInput.get$on().get$change();
  $.getInterceptor(t1).add$1(t1, $.updateDropDown);
  t1 = $.searchInput.get$on().get$reset();
  $.getInterceptor(t1).add$1(t1, $.updateDropDown);
  t1 = $.searchInput.get$on().get$focus();
  $.getInterceptor(t1).add$1(t1, new $.setupSearch_anon());
  t1 = $.searchInput.get$on().get$blur();
  $.getInterceptor(t1).add$1(t1, new $.setupSearch_anon0());
};

$.hideDropDown = function() {
  if ($.hideDropDownSuspend === true)
    return;
  $.dropdown.get$style().set$visibility('hidden');
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.resultComparator = function(a, b) {
  var result, t1, t2, t3;
  result = $.compareBools(a.get$isTopLevel(), b.get$isTopLevel());
  if (result !== 0)
    return result;
  t1 = a.get$prefix();
  if (!(t1 == null) && !(b.get$prefix() == null)) {
    result = $.compareBools(t1.get$isFullMatch(), b.get$prefix().get$isFullMatch());
    if (result !== 0)
      return result;
  }
  result = $.compareBools($.eq(a.get$match().get$matchOffset(), 0), $.eq(b.get$match().get$matchOffset(), 0));
  if (result !== 0)
    return result;
  t1 = a.get$match();
  t2 = $.eq(t1.get$matchEnd(), $.get$length(t1.get$text()));
  t3 = b.get$match();
  result = $.compareBools(t2, $.eq(t3.get$matchEnd(), $.get$length(t3.get$text())));
  if (result !== 0)
    return result;
  result = $.compareBools(a.get$match().get$isExactMatch(), b.get$match().get$isExactMatch());
  if (result !== 0)
    return result;
  result = $.compareBools(a.get$match().get$isCamelCaseMatch(), b.get$match().get$isCamelCaseMatch());
  if (result !== 0)
    return result;
  result = $.compareTo(a.get$match().get$matchOffset(), b.get$match().get$matchOffset());
  if (!$.eqB(result, 0))
    return result;
  t1 = a.get$type();
  if (!(t1 == null) && !(b.get$type() == null)) {
    result = $.compareTo($.get$length(t1), $.get$length(b.get$type()));
    if (!$.eqB(result, 0))
      return result;
    t1 = a.get$type();
    t1 = $.getInterceptor(t1).toLowerCase$0(t1);
    t2 = b.get$type();
    result = $.compareTo(t1, $.getInterceptor(t2).toLowerCase$0(t2));
    if (!$.eqB(result, 0))
      return result;
  }
  t1 = a.get$match().get$text();
  t1 = $.getInterceptor(t1).toLowerCase$0(t1);
  t2 = b.get$match().get$text();
  return $.compareTo(t1, $.getInterceptor(t2).toLowerCase$0(t2));
};

$.obtainMatch = function(searchText, text) {
  var offset;
  if ($.get$isEmpty(searchText) === true)
    return $.StringMatch$0(searchText, text, 0, 0);
  offset = $.indexOf$1($.getInterceptor(text).toLowerCase$0(text), searchText.lowerCase);
  if (!$.eqB(offset, -1))
    return $.StringMatch$0(searchText, text, offset, $.add(offset, $.get$length(searchText)));
  return;
};

$.compareBools = function(a, b) {
  if ($.eqB(a, b))
    return 0;
  return a === true ? -1 : 1;
};

$.matchType = function(results, searchText, libraryName, type) {
  var typeMatch, t1, t2, t3, t4, t5, t6;
  typeMatch = $.obtainMatch(searchText, $.index(type, 'name'));
  if (!(typeMatch == null)) {
    t1 = $.getInterceptor(results);
    t2 = $.index(type, 'kind');
    t3 = $.S($.prefix);
    t4 = $.getInterceptor(libraryName).replaceAll$2(libraryName, ':', '_');
    t5 = t3 + $.S($.getInterceptor(t4).replaceAll$2(t4, '/', '_')) + '/';
    t6 = $.index(type, 'name');
    t6 = $.getInterceptor(t6).replaceAll$2(t6, ':', '_');
    t1.add$1(results, $.Result$(typeMatch, t2, t5 + $.S($.getInterceptor(t6).replaceAll$2(t6, '/', '_')) + '.html', $.index(type, 'args'), libraryName, false, null, null));
  }
};

$.currentResult = function(result) {
  var t1, t2;
  if (!$.eqB($._currentResult, result)) {
    t1 = $._currentResult;
    if (!(t1 == null))
      t1.get$row().get$classes().remove$1('drop-down-link-select');
    $._currentResult = result;
    t1 = $._currentResult;
    if (!(t1 == null)) {
      t2 = t1.get$row().get$classes();
      $.getInterceptor(t2).add$1(t2, 'drop-down-link-select');
    }
  }
};

$.kindToString = function(kind) {
  if ($.eqB(kind, 'library'))
    return 'library';
  else if ($.eqB(kind, 'class'))
    return 'class';
  else if ($.eqB(kind, 'interface'))
    return 'interface';
  else if ($.eqB(kind, 'typedef'))
    return 'typedef';
  else if ($.eqB(kind, 'field'))
    return 'field';
  else if ($.eqB(kind, 'constructor'))
    return 'constructor';
  else if ($.eqB(kind, 'method'))
    return 'method';
  else if ($.eqB(kind, 'getter'))
    return 'getter';
  else if ($.eqB(kind, 'setter'))
    return 'setter';
  return '';
};

$.FileReaderEvents$ = function(_ptr) {
  return new $.FileReaderEvents(_ptr);
};

$.setupLocation = function() {
  var body = $.document().query$1('body');
  $.currentLibrary = $.index(body.get$dataAttributes(), 'library');
  $.currentType = $.index(body.get$dataAttributes(), 'type');
  $.prefix = !($.currentType == null) ? '../' : '';
};

$.enableCodeBlocks = function() {
  var t1, t2, showCode, preList;
  for (t1 = $.iterator($.document().queryAll$1('.method, .field')); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    showCode = t2.query$1('.show-code');
    if (showCode == null)
      continue;
    preList = t2.queryAll$1('pre.source');
    t2 = showCode.get$on().get$click();
    $.getInterceptor(t2).add$1(t2, new $.enableCodeBlocks_anon(preList));
  }
};

$.enableShowHideInherited = function() {
  var showInherited, t1;
  showInherited = $.document().query$1('#show-inherited');
  if (showInherited == null)
    return;
  showInherited.get$dataAttributes().putIfAbsent$2('show-inherited', new $.enableShowHideInherited_anon());
  t1 = showInherited.get$on().get$click();
  $.getInterceptor(t1).add$1(t1, new $.enableShowHideInherited_anon0(showInherited));
};

$.getLibraryMemberUrl = function(libraryName, memberInfo) {
  var t1, t2, t3;
  t1 = $.S($.prefix);
  t2 = $.getInterceptor(libraryName).replaceAll$2(libraryName, ':', '_');
  t3 = t1 + $.S($.getInterceptor(t2).replaceAll$2(t2, '/', '_')) + '.html#';
  return t3 + $.S(memberInfo.containsKey$1('link_name') === true ? $.index(memberInfo, 'link_name') : $.index(memberInfo, 'name'));
};

$.getTypeMemberUrl = function(libraryName, typeName, memberInfo) {
  var t1, t2, t3, t4, t5;
  t1 = $.S($.prefix);
  t2 = $.getInterceptor(libraryName).replaceAll$2(libraryName, ':', '_');
  t3 = t1 + $.S($.getInterceptor(t2).replaceAll$2(t2, '/', '_')) + '/';
  t4 = $.getInterceptor(typeName).replaceAll$2(typeName, ':', '_');
  t5 = t3 + $.S($.getInterceptor(t4).replaceAll$2(t4, '/', '_')) + '.html#';
  return t5 + $.S(memberInfo.containsKey$1('link_name') === true ? $.index(memberInfo, 'link_name') : $.index(memberInfo, 'name'));
};

$.json = function() {
  return [$.makeLiteralMap(['name', 'nyx', 'types', [$.makeLiteralMap(['name', 'Exception_MissingFeature', 'kind', 'class', 'members', [$.makeLiteralMap(['kind', 'field', 'name', 'HELP_MESSAGE'])]]), $.makeLiteralMap(['name', 'FramePainter', 'kind', 'typedef']), $.makeLiteralMap(['name', 'GL', 'kind', 'class', 'members', [$.makeLiteralMap(['kind', 'field', 'name', 'ACTIVE_ATTRIBUTES']), $.makeLiteralMap(['kind', 'field', 'name', 'ACTIVE_TEXTURE']), $.makeLiteralMap(['kind', 'field', 'name', 'ACTIVE_UNIFORMS']), $.makeLiteralMap(['kind', 'field', 'name', 'ALIASED_LINE_WIDTH_RANGE']), $.makeLiteralMap(['kind', 'field', 'name', 'ALIASED_POINT_SIZE_RANGE']), $.makeLiteralMap(['kind', 'field', 'name', 'ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'ALPHA_BITS']), $.makeLiteralMap(['kind', 'field', 'name', 'ALWAYS']), $.makeLiteralMap(['kind', 'field', 'name', 'ARRAY_BUFFER']), $.makeLiteralMap(['kind', 'field', 'name', 'ARRAY_BUFFER_BINDING']), $.makeLiteralMap(['kind', 'field', 'name', 'ATTACHED_SHADERS']), $.makeLiteralMap(['kind', 'field', 'name', 'BACK']), $.makeLiteralMap(['kind', 'field', 'name', 'BLEND']), $.makeLiteralMap(['kind', 'field', 'name', 'BLEND_COLOR']), $.makeLiteralMap(['kind', 'field', 'name', 'BLEND_DST_ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'BLEND_DST_RGB']), $.makeLiteralMap(['kind', 'field', 'name', 'BLEND_EQUATION']), $.makeLiteralMap(['kind', 'field', 'name', 'BLEND_EQUATION_ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'BLEND_EQUATION_RGB']), $.makeLiteralMap(['kind', 'field', 'name', 'BLEND_SRC_ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'BLEND_SRC_RGB']), $.makeLiteralMap(['kind', 'field', 'name', 'BLUE_BITS']), $.makeLiteralMap(['kind', 'field', 'name', 'BOOL']), $.makeLiteralMap(['kind', 'field', 'name', 'BOOL_VEC2']), $.makeLiteralMap(['kind', 'field', 'name', 'BOOL_VEC3']), $.makeLiteralMap(['kind', 'field', 'name', 'BOOL_VEC4']), $.makeLiteralMap(['kind', 'field', 'name', 'BROWSER_DEFAULT_WEBGL']), $.makeLiteralMap(['kind', 'field', 'name', 'BUFFER_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'BUFFER_USAGE']), $.makeLiteralMap(['kind', 'field', 'name', 'BYTE']), $.makeLiteralMap(['kind', 'field', 'name', 'CCW']), $.makeLiteralMap(['kind', 'field', 'name', 'CLAMP_TO_EDGE']), $.makeLiteralMap(['kind', 'field', 'name', 'COLOR_ATTACHMENT0']), $.makeLiteralMap(['kind', 'field', 'name', 'COLOR_BUFFER_BIT']), $.makeLiteralMap(['kind', 'field', 'name', 'COLOR_CLEAR_VALUE']), $.makeLiteralMap(['kind', 'field', 'name', 'COLOR_WRITEMASK']), $.makeLiteralMap(['kind', 'field', 'name', 'COMPILE_STATUS']), $.makeLiteralMap(['kind', 'field', 'name', 'COMPRESSED_TEXTURE_FORMATS']), $.makeLiteralMap(['kind', 'field', 'name', 'CONSTANT_ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'CONSTANT_COLOR']), $.makeLiteralMap(['kind', 'field', 'name', 'CONTEXT_LOST_WEBGL']), $.makeLiteralMap(['kind', 'field', 'name', 'CULL_FACE']), $.makeLiteralMap(['kind', 'field', 'name', 'CULL_FACE_MODE']), $.makeLiteralMap(['kind', 'field', 'name', 'CURRENT_PROGRAM']), $.makeLiteralMap(['kind', 'field', 'name', 'CURRENT_VERTEX_ATTRIB']), $.makeLiteralMap(['kind', 'field', 'name', 'CW']), $.makeLiteralMap(['kind', 'field', 'name', 'DECR']), $.makeLiteralMap(['kind', 'field', 'name', 'DECR_WRAP']), $.makeLiteralMap(['kind', 'field', 'name', 'DELETE_STATUS']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_ATTACHMENT']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_BITS']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_BUFFER_BIT']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_CLEAR_VALUE']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_COMPONENT']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_COMPONENT16']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_FUNC']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_RANGE']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_STENCIL']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_STENCIL_ATTACHMENT']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_TEST']), $.makeLiteralMap(['kind', 'field', 'name', 'DEPTH_WRITEMASK']), $.makeLiteralMap(['kind', 'field', 'name', 'DITHER']), $.makeLiteralMap(['kind', 'field', 'name', 'DONT_CARE']), $.makeLiteralMap(['kind', 'field', 'name', 'DST_ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'DST_COLOR']), $.makeLiteralMap(['kind', 'field', 'name', 'DYNAMIC_DRAW']), $.makeLiteralMap(['kind', 'field', 'name', 'ELEMENT_ARRAY_BUFFER']), $.makeLiteralMap(['kind', 'field', 'name', 'ELEMENT_ARRAY_BUFFER_BINDING']), $.makeLiteralMap(['kind', 'field', 'name', 'EQUAL']), $.makeLiteralMap(['kind', 'field', 'name', 'FASTEST']), $.makeLiteralMap(['kind', 'field', 'name', 'FLOAT']), $.makeLiteralMap(['kind', 'field', 'name', 'FLOAT_MAT2']), $.makeLiteralMap(['kind', 'field', 'name', 'FLOAT_MAT3']), $.makeLiteralMap(['kind', 'field', 'name', 'FLOAT_MAT4']), $.makeLiteralMap(['kind', 'field', 'name', 'FLOAT_VEC2']), $.makeLiteralMap(['kind', 'field', 'name', 'FLOAT_VEC3']), $.makeLiteralMap(['kind', 'field', 'name', 'FLOAT_VEC4']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAGMENT_SHADER']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER_ATTACHMENT_OBJECT_NAME']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER_BINDING']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER_COMPLETE']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER_INCOMPLETE_ATTACHMENT']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER_INCOMPLETE_DIMENSIONS']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT']), $.makeLiteralMap(['kind', 'field', 'name', 'FRAMEBUFFER_UNSUPPORTED']), $.makeLiteralMap(['kind', 'field', 'name', 'FRONT']), $.makeLiteralMap(['kind', 'field', 'name', 'FRONT_AND_BACK']), $.makeLiteralMap(['kind', 'field', 'name', 'FRONT_FACE']), $.makeLiteralMap(['kind', 'field', 'name', 'FUNC_ADD']), $.makeLiteralMap(['kind', 'field', 'name', 'FUNC_REVERSE_SUBTRACT']), $.makeLiteralMap(['kind', 'field', 'name', 'FUNC_SUBTRACT']), $.makeLiteralMap(['kind', 'field', 'name', 'GENERATE_MIPMAP_HINT']), $.makeLiteralMap(['kind', 'field', 'name', 'GEQUAL']), $.makeLiteralMap(['kind', 'field', 'name', 'GREATER']), $.makeLiteralMap(['kind', 'field', 'name', 'GREEN_BITS']), $.makeLiteralMap(['kind', 'field', 'name', 'HIGH_FLOAT']), $.makeLiteralMap(['kind', 'field', 'name', 'HIGH_INT']), $.makeLiteralMap(['kind', 'field', 'name', 'INCR']), $.makeLiteralMap(['kind', 'field', 'name', 'INCR_WRAP']), $.makeLiteralMap(['kind', 'field', 'name', 'INT']), $.makeLiteralMap(['kind', 'field', 'name', 'INT_VEC2']), $.makeLiteralMap(['kind', 'field', 'name', 'INT_VEC3']), $.makeLiteralMap(['kind', 'field', 'name', 'INT_VEC4']), $.makeLiteralMap(['kind', 'field', 'name', 'INVALID_ENUM']), $.makeLiteralMap(['kind', 'field', 'name', 'INVALID_FRAMEBUFFER_OPERATION']), $.makeLiteralMap(['kind', 'field', 'name', 'INVALID_OPERATION']), $.makeLiteralMap(['kind', 'field', 'name', 'INVALID_VALUE']), $.makeLiteralMap(['kind', 'field', 'name', 'INVERT']), $.makeLiteralMap(['kind', 'field', 'name', 'KEEP']), $.makeLiteralMap(['kind', 'field', 'name', 'LEQUAL']), $.makeLiteralMap(['kind', 'field', 'name', 'LESS']), $.makeLiteralMap(['kind', 'field', 'name', 'LINE_LOOP']), $.makeLiteralMap(['kind', 'field', 'name', 'LINE_STRIP']), $.makeLiteralMap(['kind', 'field', 'name', 'LINE_WIDTH']), $.makeLiteralMap(['kind', 'field', 'name', 'LINEAR']), $.makeLiteralMap(['kind', 'field', 'name', 'LINEAR_MIPMAP_LINEAR']), $.makeLiteralMap(['kind', 'field', 'name', 'LINEAR_MIPMAP_NEAREST']), $.makeLiteralMap(['kind', 'field', 'name', 'LINES']), $.makeLiteralMap(['kind', 'field', 'name', 'LINK_STATUS']), $.makeLiteralMap(['kind', 'field', 'name', 'LOW_FLOAT']), $.makeLiteralMap(['kind', 'field', 'name', 'LOW_INT']), $.makeLiteralMap(['kind', 'field', 'name', 'LUMINANCE']), $.makeLiteralMap(['kind', 'field', 'name', 'LUMINANCE_ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_COMBINED_TEXTURE_IMAGE_UNITS']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_CUBE_MAP_TEXTURE_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_FRAGMENT_UNIFORM_VECTORS']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_RENDERBUFFER_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_TEXTURE_IMAGE_UNITS']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_TEXTURE_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_VARYING_VECTORS']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_VERTEX_ATTRIBS']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_VERTEX_TEXTURE_IMAGE_UNITS']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_VERTEX_UNIFORM_VECTORS']), $.makeLiteralMap(['kind', 'field', 'name', 'MAX_VIEWPORT_DIMS']), $.makeLiteralMap(['kind', 'field', 'name', 'MEDIUM_FLOAT']), $.makeLiteralMap(['kind', 'field', 'name', 'MEDIUM_INT']), $.makeLiteralMap(['kind', 'field', 'name', 'MIRRORED_REPEAT']), $.makeLiteralMap(['kind', 'field', 'name', 'NEAREST']), $.makeLiteralMap(['kind', 'field', 'name', 'NEAREST_MIPMAP_LINEAR']), $.makeLiteralMap(['kind', 'field', 'name', 'NEAREST_MIPMAP_NEAREST']), $.makeLiteralMap(['kind', 'field', 'name', 'NEVER']), $.makeLiteralMap(['kind', 'field', 'name', 'NICEST']), $.makeLiteralMap(['kind', 'field', 'name', 'NO_ERROR']), $.makeLiteralMap(['kind', 'field', 'name', 'NONE']), $.makeLiteralMap(['kind', 'field', 'name', 'NOTEQUAL']), $.makeLiteralMap(['kind', 'field', 'name', 'ONE']), $.makeLiteralMap(['kind', 'field', 'name', 'ONE_MINUS_CONSTANT_ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'ONE_MINUS_CONSTANT_COLOR']), $.makeLiteralMap(['kind', 'field', 'name', 'ONE_MINUS_DST_ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'ONE_MINUS_DST_COLOR']), $.makeLiteralMap(['kind', 'field', 'name', 'ONE_MINUS_SRC_ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'ONE_MINUS_SRC_COLOR']), $.makeLiteralMap(['kind', 'field', 'name', 'OUT_OF_MEMORY']), $.makeLiteralMap(['kind', 'field', 'name', 'PACK_ALIGNMENT']), $.makeLiteralMap(['kind', 'field', 'name', 'POINTS']), $.makeLiteralMap(['kind', 'field', 'name', 'POLYGON_OFFSET_FACTOR']), $.makeLiteralMap(['kind', 'field', 'name', 'POLYGON_OFFSET_FILL']), $.makeLiteralMap(['kind', 'field', 'name', 'POLYGON_OFFSET_UNITS']), $.makeLiteralMap(['kind', 'field', 'name', 'RED_BITS']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER_ALPHA_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER_BINDING']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER_BLUE_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER_DEPTH_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER_GREEN_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER_HEIGHT']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER_INTERNAL_FORMAT']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER_RED_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER_STENCIL_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERBUFFER_WIDTH']), $.makeLiteralMap(['kind', 'field', 'name', 'RENDERER']), $.makeLiteralMap(['kind', 'field', 'name', 'REPEAT']), $.makeLiteralMap(['kind', 'field', 'name', 'REPLACE']), $.makeLiteralMap(['kind', 'field', 'name', 'RGB']), $.makeLiteralMap(['kind', 'field', 'name', 'RGB565']), $.makeLiteralMap(['kind', 'field', 'name', 'RGB5_A1']), $.makeLiteralMap(['kind', 'field', 'name', 'RGBA']), $.makeLiteralMap(['kind', 'field', 'name', 'RGBA4']), $.makeLiteralMap(['kind', 'field', 'name', 'SAMPLE_ALPHA_TO_COVERAGE']), $.makeLiteralMap(['kind', 'field', 'name', 'SAMPLE_BUFFERS']), $.makeLiteralMap(['kind', 'field', 'name', 'SAMPLE_COVERAGE']), $.makeLiteralMap(['kind', 'field', 'name', 'SAMPLE_COVERAGE_INVERT']), $.makeLiteralMap(['kind', 'field', 'name', 'SAMPLE_COVERAGE_VALUE']), $.makeLiteralMap(['kind', 'field', 'name', 'SAMPLER_2D']), $.makeLiteralMap(['kind', 'field', 'name', 'SAMPLER_CUBE']), $.makeLiteralMap(['kind', 'field', 'name', 'SAMPLES']), $.makeLiteralMap(['kind', 'field', 'name', 'SCISSOR_BOX']), $.makeLiteralMap(['kind', 'field', 'name', 'SCISSOR_TEST']), $.makeLiteralMap(['kind', 'field', 'name', 'SHADER_TYPE']), $.makeLiteralMap(['kind', 'field', 'name', 'SHADING_LANGUAGE_VERSION']), $.makeLiteralMap(['kind', 'field', 'name', 'SHORT']), $.makeLiteralMap(['kind', 'field', 'name', 'SRC_ALPHA']), $.makeLiteralMap(['kind', 'field', 'name', 'SRC_ALPHA_SATURATE']), $.makeLiteralMap(['kind', 'field', 'name', 'SRC_COLOR']), $.makeLiteralMap(['kind', 'field', 'name', 'STATIC_DRAW']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_ATTACHMENT']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_BACK_FAIL']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_BACK_FUNC']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_BACK_PASS_DEPTH_FAIL']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_BACK_PASS_DEPTH_PASS']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_BACK_REF']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_BACK_VALUE_MASK']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_BACK_WRITEMASK']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_BITS']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_BUFFER_BIT']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_CLEAR_VALUE']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_FAIL']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_FUNC']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_INDEX']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_INDEX8']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_PASS_DEPTH_FAIL']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_PASS_DEPTH_PASS']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_REF']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_TEST']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_VALUE_MASK']), $.makeLiteralMap(['kind', 'field', 'name', 'STENCIL_WRITEMASK']), $.makeLiteralMap(['kind', 'field', 'name', 'STREAM_DRAW']), $.makeLiteralMap(['kind', 'field', 'name', 'SUBPIXEL_BITS']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE0']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE1']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE10']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE11']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE12']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE13']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE14']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE15']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE16']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE17']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE18']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE19']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE2']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE20']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE21']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE22']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE23']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE24']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE25']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE26']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE27']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE28']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE29']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE3']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE30']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE31']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE4']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE5']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE6']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE7']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE8']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE9']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_2D']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_BINDING_2D']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_BINDING_CUBE_MAP']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_CUBE_MAP']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_CUBE_MAP_NEGATIVE_X']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_CUBE_MAP_NEGATIVE_Y']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_CUBE_MAP_NEGATIVE_Z']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_CUBE_MAP_POSITIVE_X']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_CUBE_MAP_POSITIVE_Y']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_CUBE_MAP_POSITIVE_Z']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_MAG_FILTER']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_MIN_FILTER']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_WRAP_S']), $.makeLiteralMap(['kind', 'field', 'name', 'TEXTURE_WRAP_T']), $.makeLiteralMap(['kind', 'field', 'name', 'TRIANGLE_FAN']), $.makeLiteralMap(['kind', 'field', 'name', 'TRIANGLE_STRIP']), $.makeLiteralMap(['kind', 'field', 'name', 'TRIANGLES']), $.makeLiteralMap(['kind', 'field', 'name', 'UNPACK_ALIGNMENT']), $.makeLiteralMap(['kind', 'field', 'name', 'UNPACK_COLORSPACE_CONVERSION_WEBGL']), $.makeLiteralMap(['kind', 'field', 'name', 'UNPACK_FLIP_Y_WEBGL']), $.makeLiteralMap(['kind', 'field', 'name', 'UNPACK_PREMULTIPLY_ALPHA_WEBGL']), $.makeLiteralMap(['kind', 'field', 'name', 'UNSIGNED_BYTE']), $.makeLiteralMap(['kind', 'field', 'name', 'UNSIGNED_INT']), $.makeLiteralMap(['kind', 'field', 'name', 'UNSIGNED_SHORT']), $.makeLiteralMap(['kind', 'field', 'name', 'UNSIGNED_SHORT_4_4_4_4']), $.makeLiteralMap(['kind', 'field', 'name', 'UNSIGNED_SHORT_5_5_5_1']), $.makeLiteralMap(['kind', 'field', 'name', 'UNSIGNED_SHORT_5_6_5']), $.makeLiteralMap(['kind', 'field', 'name', 'VALIDATE_STATUS']), $.makeLiteralMap(['kind', 'field', 'name', 'VENDOR']), $.makeLiteralMap(['kind', 'field', 'name', 'VERSION']), $.makeLiteralMap(['kind', 'field', 'name', 'VERTEX_ATTRIB_ARRAY_BUFFER_BINDING']), $.makeLiteralMap(['kind', 'field', 'name', 'VERTEX_ATTRIB_ARRAY_ENABLED']), $.makeLiteralMap(['kind', 'field', 'name', 'VERTEX_ATTRIB_ARRAY_NORMALIZED']), $.makeLiteralMap(['kind', 'field', 'name', 'VERTEX_ATTRIB_ARRAY_POINTER']), $.makeLiteralMap(['kind', 'field', 'name', 'VERTEX_ATTRIB_ARRAY_SIZE']), $.makeLiteralMap(['kind', 'field', 'name', 'VERTEX_ATTRIB_ARRAY_STRIDE']), $.makeLiteralMap(['kind', 'field', 'name', 'VERTEX_ATTRIB_ARRAY_TYPE']), $.makeLiteralMap(['kind', 'field', 'name', 'VERTEX_SHADER']), $.makeLiteralMap(['kind', 'field', 'name', 'VIEWPORT']), $.makeLiteralMap(['kind', 'field', 'name', 'ZERO'])]]), $.makeLiteralMap(['name', 'Preprocess', 'kind', 'typedef']), $.makeLiteralMap(['name', 'Viewport', 'kind', 'class', 'members', [$.makeLiteralMap(['kind', 'method', 'name', 'addFragmentShader']), $.makeLiteralMap(['kind', 'method', 'name', 'addVertexShader']), $.makeLiteralMap(['kind', 'method', 'name', 'animate']), $.makeLiteralMap(['kind', 'field', 'name', 'canvas']), $.makeLiteralMap(['kind', 'field', 'name', 'container']), $.makeLiteralMap(['kind', 'method', 'noparams', true, 'name', 'execute']), $.makeLiteralMap(['kind', 'field', 'name', 'fps']), $.makeLiteralMap(['kind', 'field', 'name', 'fpsAverage']), $.makeLiteralMap(['kind', 'method', 'name', 'fpsIs']), $.makeLiteralMap(['kind', 'field', 'name', 'framepainter']), $.makeLiteralMap(['kind', 'field', 'name', 'gl']), $.makeLiteralMap(['kind', 'field', 'name', 'height']), $.makeLiteralMap(['kind', 'method', 'name', 'painter']), $.makeLiteralMap(['kind', 'field', 'name', 'preanimation']), $.makeLiteralMap(['kind', 'method', 'name', 'preprocessor']), $.makeLiteralMap(['kind', 'field', 'name', 'program']), $.makeLiteralMap(['kind', 'field', 'name', 'renderTime']), $.makeLiteralMap(['kind', 'field', 'name', 'shaders']), $.makeLiteralMap(['kind', 'field', 'name', 'showFPS']), $.makeLiteralMap(['kind', 'constructor', 'name', 'Viewport']), $.makeLiteralMap(['kind', 'field', 'name', 'width'])]])]])];
};

$.window = function() {
  return window;
};

$.document = function() {
  return document;
};

$.query = function(selector) {
  return $.document().query$1(selector);
};

$.FileWriterEvents$ = function(_ptr) {
  return new $.FileWriterEvents(_ptr);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$._browserPrefix = function() {
  if ($._cachedBrowserPrefix == null)
    if ($._Device_isFirefox() === true)
      $._cachedBrowserPrefix = '-moz-';
    else if ($._Device_isIE() === true)
      $._cachedBrowserPrefix = '-ms-';
    else if ($._Device_isOpera() === true)
      $._cachedBrowserPrefix = '-o-';
    else
      $._cachedBrowserPrefix = '-webkit-';
  return $._cachedBrowserPrefix;
};

$._HashSetImpl$ = function() {
  var t1 = new $._HashSetImpl(null);
  t1._HashSetImpl$0();
  return t1;
};

$.WebSocketEvents$ = function(_ptr) {
  return new $.WebSocketEvents(_ptr);
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length$) {
  return (currentProbe + numberOfProbes & length$ - 1) >>> 0;
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.WorkerEvents$ = function(_ptr) {
  return new $.WorkerEvents(_ptr);
};

$._HashSetIterator$ = function(set_) {
  var t1 = new $._HashSetIterator(set_._backingMap._keys, -1);
  t1._HashSetIterator$1(set_);
  return t1;
};

$.FrameSetElementEvents$ = function(_ptr) {
  return new $.FrameSetElementEvents(_ptr);
};

$._FrozenCssClassSet$ = function() {
  return new $._FrozenCssClassSet();
};

$.HttpRequestEvents$ = function(_ptr) {
  return new $.HttpRequestEvents(_ptr);
};

$.HttpRequestUploadEvents$ = function(_ptr) {
  return new $.HttpRequestUploadEvents(_ptr);
};

$.StringMatch$0 = function(searchText, text, matchOffset, matchEnd) {
  return new $.StringMatch0(searchText, text, matchOffset, matchEnd);
};

$.IDBDatabaseEvents$ = function(_ptr) {
  return new $.IDBDatabaseEvents(_ptr);
};

$._convertNativeToDart_EventTarget = function(e) {
  if ("setInterval" in e)
    return $._DOMWindowCrossFrame__createSafe(e);
  else
    return e;
};

$._convertDartToNative_PrepareForStructuredClone = function(value) {
  var values, copies, t1, t2, t3, t4, copy;
  values = [];
  copies = [];
  t1 = new $._convertDartToNative_PrepareForStructuredClone_findSlot(copies, values);
  t2 = new $._convertDartToNative_PrepareForStructuredClone_readSlot(copies);
  t3 = new $._convertDartToNative_PrepareForStructuredClone_writeSlot(copies);
  t4 = new $._convertDartToNative_PrepareForStructuredClone_cleanupSlots();
  copy = new $._convertDartToNative_PrepareForStructuredClone_walk(t2, t1, t3).call$1(value);
  t4.call$0();
  return copy;
};

$._LocationCrossFrame$ = function(_location) {
  return new $._LocationCrossFrame(_location);
};

$._LocationCrossFrame__createSafe = function(location$) {
  var t1 = $.window().get$location();
  if (location$ == null ? t1 == null : location$ === t1)
    return location$;
  else
    return $._LocationCrossFrame$(location$);
};

$._LocationCrossFrame__setHref = function(location$, val) {
  location$.href = val;
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null, false);
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$.IDBOpenDBRequestEvents$ = function(_ptr) {
  return new $.IDBOpenDBRequestEvents(_ptr);
};

$.IDBRequestEvents$ = function(_ptr) {
  return new $.IDBRequestEvents(_ptr);
};

$.IDBTransactionEvents$ = function(_ptr) {
  return new $.IDBTransactionEvents(_ptr);
};

$.IDBVersionChangeRequestEvents$ = function(_ptr) {
  return new $.IDBVersionChangeRequestEvents(_ptr);
};

$.InputElementEvents$ = function(_ptr) {
  return new $.InputElementEvents(_ptr);
};

$.classifySource = function(text) {
  var html, token, whitespaceOffset, inString, whitespaceOffset0, kind, escapedText, stringClass;
  html = $.StringBuffer_StringBuffer('');
  token = $.StringScanner$(text, true).tokenize$0();
  for (whitespaceOffset = 0, inString = false; !$.eqB(token.get$kind(), 0); whitespaceOffset = whitespaceOffset0) {
    $.getInterceptor(html).add$1(html, $.getInterceptor(text).substring$2(text, whitespaceOffset, token.get$charOffset()));
    whitespaceOffset0 = $.add(token.get$charOffset(), token.get$slowCharCount());
    switch (token.get$kind()) {
      case 39:
      case 128:
        inString = true;
        break;
    }
    kind = $.classify(token);
    escapedText = $.escapeHtml(token.slowToString$0());
    if (!(kind == null)) {
      stringClass = inString ? 'si' : '';
      $.getInterceptor(html).add$1(html, '<span class="' + $.S(kind) + ' ' + stringClass + '">' + $.S(escapedText) + '</span>');
    } else
      $.getInterceptor(html).add$1(html, escapedText);
    if ($.eqB(token.get$kind(), 39))
      inString = false;
    token = token.get$next();
  }
  return $.toString(html);
};

$._looksLikeType = function(name$) {
  return $._looksLikePublicType(name$) || $._looksLikePrivateType(name$);
};

$._looksLikePublicType = function(name$) {
  var t1, t2;
  if ($.geB($.get$length(name$), 2)) {
    t1 = $.index(name$, 0);
    if (!$.eqB($.getInterceptor(t1).toLowerCase$0(t1), t1)) {
      t1 = $.index(name$, 1);
      t2 = !$.eqB($.getInterceptor(t1).toUpperCase$0(t1), t1);
      t1 = t2;
    } else
      t1 = false;
  } else
    t1 = false;
  return t1;
};

$._looksLikePrivateType = function(name$) {
  var t1, t2;
  if ($.geB($.get$length(name$), 3))
    if ($.eqB($.index(name$, 0), '_')) {
      t1 = $.index(name$, 1);
      if (!$.eqB($.getInterceptor(t1).toLowerCase$0(t1), t1)) {
        t1 = $.index(name$, 2);
        t2 = !$.eqB($.getInterceptor(t1).toUpperCase$0(t1), t1);
        t1 = t2;
      } else
        t1 = false;
    } else
      t1 = false;
  else
    t1 = false;
  return t1;
};

$._ElementAttributeMap$ = function(_element) {
  return new $._ElementAttributeMap(_element);
};

$.classify = function(token) {
  var text;
  switch (token.get$kind()) {
    case 1024:
      return 'e';
    case 97:
      text = token.slowToString$0();
      if ($._looksLikeType(text) || $.eqB(text, 'num') || $.eqB(text, 'bool') || $.eqB(text, 'int') || $.eqB(text, 'double'))
        return 't';
      return 'i';
    case 39:
    case 128:
      return 's';
    case 105:
    case 120:
    case 100:
      return 'n';
    case 158:
      return 'c';
    case 130:
      return 'a';
    case 40:
    case 41:
    case 91:
    case 93:
    case 123:
    case 125:
    case 58:
    case 59:
    case 44:
    case 46:
    case 133:
      return 'p';
    case 149:
    case 151:
    case 126:
    case 33:
    case 61:
    case 147:
    case 157:
    case 145:
    case 136:
    case 139:
    case 150:
    case 152:
    case 148:
    case 131:
    case 153:
    case 155:
    case 63:
    case 146:
    case 144:
    case 124:
    case 94:
    case 38:
    case 137:
    case 156:
    case 43:
    case 45:
    case 42:
    case 47:
    case 154:
    case 37:
    case 135:
    case 143:
    case 134:
    case 142:
    case 60:
    case 62:
    case 129:
    case 138:
    case 141:
    case 140:
      return 'o';
    case 35:
    case 107:
      if ($.eqB(token.get$stringValue(), 'void'))
        return 't';
      if ($.eqB(token.get$stringValue(), 'this') || $.eqB(token.get$stringValue(), 'super'))
        return 'r';
      return 'k';
    case 0:
      return;
    default:
      return;
  }
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.Set_Set = function() {
  return $._HashSetImpl$();
};

$.ElementEvents$ = function(_ptr) {
  return new $.ElementEvents(_ptr);
};

$.MediaStreamEvents$ = function(_ptr) {
  return new $.MediaStreamEvents(_ptr);
};

$._LocationWrapper$ = function(_ptr) {
  return new $._LocationWrapper(_ptr);
};

$.EventListenerList$ = function(_ptr, _type) {
  return new $.EventListenerList(_ptr, _type);
};

$.Events$ = function(_ptr) {
  return new $.Events(_ptr);
};

$._LocationWrapper__set = function(p, m, v) {
  return p[m] = v;
};

$.LocalWindowEvents$ = function(_ptr) {
  return new $.LocalWindowEvents(_ptr);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.SVGElementInstanceEvents$ = function(_ptr) {
  return new $.SVGElementInstanceEvents(_ptr);
};

$.TableElement_TableElement = function() {
  return $.document().$$dom_createElement$1('table');
};

$.AbstractWorkerEvents$ = function(_ptr) {
  return new $.AbstractWorkerEvents(_ptr);
};

$._DataAttributeMap$ = function($$dom_attributes) {
  return new $._DataAttributeMap($$dom_attributes);
};

$.AudioContextEvents$ = function(_ptr) {
  return new $.AudioContextEvents(_ptr);
};

$.MediaElementEvents$ = function(_ptr) {
  return new $.MediaElementEvents(_ptr);
};

$.StringScanner$ = function(string, includeComments) {
  var t1 = new $.StringScanner(string, $.Token$($.CTC5, -1), null, -1, -1, includeComments, 0, $.CTC78);
  t1.ArrayBasedScanner$1(includeComments);
  return t1;
};

$.BatteryManagerEvents$ = function(_ptr) {
  return new $.BatteryManagerEvents(_ptr);
};

$.MediaStreamTrackEvents$ = function(_ptr) {
  return new $.MediaStreamTrackEvents(_ptr);
};

$.BodyElementEvents$ = function(_ptr) {
  return new $.BodyElementEvents(_ptr);
};

$.MediaStreamTrackListEvents$ = function(_ptr) {
  return new $.MediaStreamTrackListEvents(_ptr);
};

$.Token$ = function(info, charOffset) {
  return new $.Token(info, charOffset, null);
};

$.Link$ = function(T) {
  var t1 = new $.Link();
  $.setRuntimeTypeInfo(t1, {'T': T});
  return t1;
};

$.BeginGroupToken$ = function(info, value, charOffset) {
  return new $.BeginGroupToken(null, $.StringWrapper$(value), info, charOffset, null);
};

$.StringToken$ = function(info, value, charOffset) {
  return new $.StringToken($.StringWrapper$(value), info, charOffset, null);
};

$.StringToken$fromSource = function(info, value, charOffset) {
  return new $.StringToken(value, info, charOffset, null);
};

$.MessagePortEvents$ = function(_ptr) {
  return new $.MessagePortEvents(_ptr);
};

$.Keyword_keywords = function() {
  if ($.Keyword__keywords == null)
    $.Keyword__keywords = $.Keyword_computeKeywordMap();
  return $.Keyword__keywords;
};

$.Keyword_computeKeywordMap = function() {
  var result, t1, t2;
  result = $.LinkedHashMap_LinkedHashMap();
  for (t1 = $.iterator($.CTC77); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.indexSet(result, t2.get$syntax(), t2);
  }
  return result;
};

$.StringWrapper$ = function(stringValue) {
  return new $.StringWrapper(stringValue);
};

$.StringCodeIterator$ = function(string) {
  return new $.StringCodeIterator(string, 0, $.get$length(string));
};

$.StringCodeIterator$substring = function(string, index, end) {
  var t1 = new $.StringCodeIterator(string, index, end);
  t1.StringCodeIterator$substring$3(string, index, end);
  return t1;
};

$.NotificationEvents$ = function(_ptr) {
  return new $.NotificationEvents(_ptr);
};

$.SubstringWrapper$ = function(internalString, begin, end) {
  return new $.SubstringWrapper(internalString, begin, end, 0, null);
};

$.PeerConnection00Events$ = function(_ptr) {
  return new $.PeerConnection00Events(_ptr);
};

$.KeywordToken$ = function(value, charOffset) {
  return new $.KeywordToken(value, value.get$info(), charOffset, null);
};

$.KeywordState_KEYWORD_STATE = function() {
  var strings, i;
  if ($.KeywordState__KEYWORD_STATE == null) {
    strings = $._ListImpl_List(52);
    for (i = 0; i < 52; ++i)
      strings[i] = $.CTC77[i].get$syntax();
    $.sort$1(strings, new $.KeywordState_KEYWORD_STATE_anon());
    $.KeywordState__KEYWORD_STATE = $.KeywordState_computeKeywordStateTable(0, strings, 0, 52);
  }
  return $.KeywordState__KEYWORD_STATE;
};

$.KeywordState_computeKeywordStateTable = function(start, strings, offset, length$) {
  var result, t1, t2, i, chunk, chunkStart, isLeaf, t3, c, t4;
  result = $._ListImpl_List(26);
  for (t1 = start + 1, t2 = strings.length, i = offset, chunk = 0, chunkStart = -1, isLeaf = false; t3 = offset + length$, i < t3; ++i) {
    if (i < 0)
      throw $.ioore(i);
    t3 = $.get$length(strings[i]);
    if (typeof t3 !== 'number')
      return $.KeywordState_computeKeywordStateTable$bailout(1, start, strings, offset, length$, t3, result, t1, chunk, chunkStart, isLeaf, i, t2);
    if (t3 === start)
      isLeaf = true;
    t3 = $.get$length(strings[i]);
    if (typeof t3 !== 'number')
      return $.KeywordState_computeKeywordStateTable$bailout(2, start, strings, offset, length$, result, isLeaf, t1, t3, chunk, chunkStart, i, t2);
    if (t3 > start) {
      t3 = strings[i];
      c = $.getInterceptor(t3).charCodeAt$1(t3, start);
      if (c !== (c | 0))
        return $.KeywordState_computeKeywordStateTable$bailout(3, start, strings, offset, length$, result, isLeaf, t1, chunk, chunkStart, i, t2, c);
      if (chunk !== c) {
        if (chunkStart !== -1) {
          t3 = chunk - 97;
          t4 = $.KeywordState_computeKeywordStateTable(t1, strings, chunkStart, i - chunkStart);
          if (t3 < 0 || t3 >= 26)
            throw $.ioore(t3);
          result[t3] = t4;
        }
        chunkStart = i;
        chunk = c;
      }
    }
  }
  if (chunkStart !== -1) {
    t4 = chunk - 97;
    t1 = $.KeywordState_computeKeywordStateTable(t1, strings, chunkStart, t3 - chunkStart);
    if (t4 < 0 || t4 >= 26)
      throw $.ioore(t4);
    result[t4] = t1;
  } else {
    if (offset < 0 || offset >= t2)
      throw $.ioore(offset);
    return $.LeafKeywordState$(strings[offset]);
  }
  if (isLeaf) {
    if (offset < 0 || offset >= t2)
      throw $.ioore(offset);
    return $.ArrayKeywordState$(result, strings[offset]);
  } else
    return $.ArrayKeywordState$(result, null);
};

$.RTCDataChannelEvents$ = function(_ptr) {
  return new $.RTCDataChannelEvents(_ptr);
};

$.RTCPeerConnectionEvents$ = function(_ptr) {
  return new $.RTCPeerConnectionEvents(_ptr);
};

$.LeafKeywordState$ = function(syntax) {
  return new $.LeafKeywordState($.index($.Keyword_keywords(), syntax));
};

$.ArrayKeywordState$ = function(table, syntax) {
  var t1 = syntax == null ? null : $.index($.Keyword_keywords(), syntax);
  return new $.ArrayKeywordState(table, t1);
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueIterator$ = function(_sentinel) {
  var t1 = new $._DoubleLinkedQueueIterator(_sentinel, null);
  t1._DoubleLinkedQueueIterator$1(_sentinel);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator($.get$length(array), array, 0);
};

$.ScriptProcessorNodeEvents$ = function(_ptr) {
  return new $.ScriptProcessorNodeEvents(_ptr);
};

$.SharedWorkerContextEvents$ = function(_ptr) {
  return new $.SharedWorkerContextEvents(_ptr);
};

$.Result$ = function(match, kind, url, args, library, noargs, prefix, type) {
  var t1 = !(args == null) ? '&lt;' + $.S(args) + '&gt;' : '';
  return new $.Result(prefix, match, library, type, t1, kind, url, noargs, null);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.LinkIterator$ = function(current) {
  return new $.LinkIterator(current);
};

$.LinkEntry$ = function(head, tail, T) {
  var t1 = tail == null ? $.Link$($.getRuntimeTypeInfo(this).T) : tail;
  t1 = new $.LinkEntry(head, t1);
  $.setRuntimeTypeInfo(t1, {'T': T});
  return t1;
};

$.SearchText$ = function(searchText) {
  var t1, t2, t3;
  t1 = $.getInterceptor(searchText).toLowerCase$0(searchText);
  if ($.get$isEmpty(searchText) === true)
    t2 = '';
  else {
    t2 = $.getInterceptor(searchText).substring$2(searchText, 0, 1);
    t3 = $.S($.getInterceptor(t2).toUpperCase$0(t2)) + $.S($.getInterceptor(searchText).substring$1(searchText, 1));
    t2 = t3;
  }
  return new $.SearchText(searchText, t1, t2);
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError('value ' + $.S(value));
};

$.NullPointerException$ = function(functionName, arguments$) {
  return new $.NullPointerException(functionName, arguments$);
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$.SpeechRecognitionEvents$ = function(_ptr) {
  return new $.SpeechRecognitionEvents(_ptr);
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$.escapeHtml = function(html) {
  var t1 = $.getInterceptor(html).replaceAll$2(html, '&', '&amp;');
  t1 = $.getInterceptor(t1).replaceAll$2(t1, '<', '&lt;');
  return $.getInterceptor(t1).replaceAll$2(t1, '>', '&gt;');
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.NoSuchMethodError_safeToString = function(object) {
  var t1;
  if (typeof object === 'number' && Math.floor(object) === object || typeof object === 'number' || typeof object === 'boolean' || null == object)
    return $.toString(object);
  if (typeof object === 'string') {
    t1 = $.getInterceptor(object).replaceAll$2(object, '\\', '\\\\');
    t1 = $.getInterceptor(t1).replaceAll$2(t1, '\n', '\\n');
    t1 = $.getInterceptor(t1).replaceAll$2(t1, '\r', '\\r');
    return '"' + $.S($.getInterceptor(t1).replaceAll$2(t1, '"', '\\"')) + '"';
  }
  return $.Primitives_objectToString(object);
};

$._Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== 'number')
    return $._Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$._Lists_getRange = function(a, start, length$, accumulator) {
  var end, i, t1;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if (typeof start !== 'number')
    return $._Lists_getRange$bailout(1, a, start, length$, accumulator);
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length$ !== 'number')
    throw $.iae(length$);
  end = start + length$;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    t1 = $.getInterceptor(accumulator);
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    t1.add$1(accumulator, a[i]);
  }
  return accumulator;
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.String_String$fromCharCodes = function(charCodes) {
  $.checkNull(charCodes);
  if (!$.isJsArray(charCodes))
    charCodes = $._ListImpl_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.Comparable_compare = function(a, b) {
  return $.compareTo(a, b);
};

$._ListImpl_List = function(length$) {
  return $.Primitives_newList(length$);
};

$._ListImpl_List$from = function(other) {
  var result, t1, t2;
  result = $._ListImpl_List(null);
  for (t1 = $.iterator(other); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    $.getInterceptor(result).add$1(result, t2);
  }
  return result;
};

$.TextTrackEvents$ = function(_ptr) {
  return new $.TextTrackEvents(_ptr);
};

$.TextTrackCueEvents$ = function(_ptr) {
  return new $.TextTrackCueEvents(_ptr);
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== 'string' && (typeof a !== 'object' || a === null || a.constructor !== Array && !a.is$JavaScriptIndexingBehavior()))
    return $.Arrays_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.eqB(a[i], element))
      return i;
  }
  return -1;
};

$.TextTrackListEvents$ = function(_ptr) {
  return new $.TextTrackListEvents(_ptr);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, 0);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(0, list);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_objectTypeName = function(object) {
  var name$, decompiled;
  name$ = $.constructorNameFallback(object);
  if ($.eqB(name$, 'Object')) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === 'string')
      name$ = decompiled;
  }
  return $.getInterceptor(name$).charCodeAt$1(name$, 0) === 36 ? $.getInterceptor(name$).substring$1(name$, 1) : name$;
};

$.Primitives_objectToString = function(object) {
  return 'Instance of \'' + $.S($.Primitives_objectTypeName(object)) + '\'';
};

$.Primitives_newList = function(length$) {
  var result;
  if (length$ == null)
    return new Array();
  if (!(typeof length$ === 'number' && Math.floor(length$) === length$) || length$ < 0)
    throw $.$$throw($.ArgumentError$(length$));
  result = new Array(length$);
  result.fixed$length = true;
  return result;
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.iterator(charCodes); t1.get$hasNext() === true;) {
    t2 = t1.next$0();
    if (!(typeof t2 === 'number' && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
  }
  return String.fromCharCode.apply(null, charCodes);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.DOMApplicationCacheEvents$ = function(_ptr) {
  return new $.DOMApplicationCacheEvents(_ptr);
};

$.LocalWindow__isDartLocation = function(thing, exception) {
  var t1;
  try {
    t1 = thing;
    t1 = typeof t1 === 'object' && t1 !== null && t1.is$Location();
    return t1;
  } catch (exception) {
    $.unwrapException(exception);
    return false;
  }

};

$.RegExp_RegExp = function(pattern, ignoreCase, multiLine) {
  return $.JSSyntaxRegExp$(pattern, ignoreCase, multiLine);
};

$.JSSyntaxRegExp$ = function(pattern, ignoreCase, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, ignoreCase);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$multiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$ignoreCase(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked$bailout = function(state0, needle, haystack, patternLength, result, length$) {
  var startIndex, position, endIndex;
  for (startIndex = 0; true;) {
    position = $.indexOf$2(haystack, needle, startIndex);
    if ($.eqB(position, -1))
      break;
    $.getInterceptor(result).add$1(result, $.StringMatch$(position, haystack, needle));
    endIndex = $.add(position, patternLength);
    if ($.eqB(endIndex, length$))
      break;
    else
      startIndex = $.eqB(position, endIndex) ? $.add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringReplaceAllUnchecked$bailout = function(state0, receiver, from, to) {
  var result, length$, i;
  if (typeof from === 'string')
    if (from === '')
      if ($.eqB(receiver, ''))
        return to;
      else {
        result = $.StringBuffer_StringBuffer('');
        length$ = $.get$length(receiver);
        $.getInterceptor(result).add$1(result, to);
        for (i = 0; $.ltB(i, length$); ++i) {
          $.getInterceptor(result).add$1(result, $.index(receiver, i));
          $.getInterceptor(result).add$1(result, to);
        }
        return $.toString(result);
      }
    else
      return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), false, false), true), to);
  else if (typeof from === 'object' && from !== null && !!from.is$JSSyntaxRegExp)
    return $.stringReplaceJS(receiver, $.regExpMakeNative(from, true), to);
  else {
    $.checkNull(from);
    throw $.$$throw('String.replaceAll(Pattern) UNIMPLEMENTED');
  }
};

$.contains$1$bailout = function(state0, receiver, other) {
  var i;
  if (typeof receiver === 'string')
    return $.contains$2(receiver, other, 0);
  else if ($.isJsArray(receiver)) {
    for (i = 0; $.ltB(i, $.get$length(receiver)); ++i)
      if (other === $.index(receiver, i))
        return true;
    return false;
  }
  return receiver.contains$1(other);
};

$.KeywordState_computeKeywordStateTable$bailout = function(state0, env0, env1, env2, env3, env4, env5, env6, env7, env8, env9, env10, env11) {
  switch (state0) {
    case 1:
      t2 = env11;
      i = env10;
      isLeaf = env9;
      chunkStart = env8;
      chunk = env7;
      t1 = env6;
      result = env5;
      t3 = env4;
      length$ = env3;
      offset = env2;
      strings = env1;
      start = env0;
      break;
    case 2:
      t2 = env11;
      i = env10;
      chunkStart = env9;
      chunk = env8;
      t3 = env7;
      t1 = env6;
      isLeaf = env5;
      result = env4;
      length$ = env3;
      offset = env2;
      strings = env1;
      start = env0;
      break;
    case 3:
      c = env11;
      t2 = env10;
      i = env9;
      chunkStart = env8;
      chunk = env7;
      t1 = env6;
      isLeaf = env5;
      result = env4;
      length$ = env3;
      offset = env2;
      strings = env1;
      start = env0;
      break;
  }
  switch (state0) {
    case 0:
      result = $._ListImpl_List(26);
      t1 = start + 1;
      t2 = strings.length;
      i = offset;
      chunk = 0;
      chunkStart = -1;
      isLeaf = false;
    default:
      var result, t1, t2, i, chunk, chunkStart, isLeaf, t3, length$, offset, strings, start, c, t4;
      L0:
        while (true)
          switch (state0) {
            case 0:
              t3 = offset + length$;
              if (!(i < t3))
                break L0;
              if (i < 0)
                throw $.ioore(i);
              t3 = $.get$length(strings[i]);
            case 1:
              state0 = 0;
              if ($.eqB(t3, start))
                isLeaf = true;
              t3 = $.get$length(strings[i]);
            case 2:
              state0 = 0;
            case 3:
              if (state0 === 3 || state0 === 0 && $.gtB(t3, start))
                switch (state0) {
                  case 0:
                    t3 = strings[i];
                    c = $.getInterceptor(t3).charCodeAt$1(t3, start);
                  case 3:
                    state0 = 0;
                    if (!$.eqB(chunk, c)) {
                      if (chunkStart !== -1) {
                        t3 = $.sub(chunk, 97);
                        t4 = $.KeywordState_computeKeywordStateTable(t1, strings, chunkStart, i - chunkStart);
                        if (t3 !== (t3 | 0))
                          throw $.iae(t3);
                        if (t3 < 0 || t3 >= 26)
                          throw $.ioore(t3);
                        result[t3] = t4;
                      }
                      chunkStart = i;
                      chunk = c;
                    }
                }
              ++i;
          }
      if (chunkStart !== -1) {
        t4 = $.sub(chunk, 97);
        t1 = $.KeywordState_computeKeywordStateTable(t1, strings, chunkStart, t3 - chunkStart);
        if (t4 !== (t4 | 0))
          throw $.iae(t4);
        if (t4 < 0 || t4 >= 26)
          throw $.ioore(t4);
        result[t4] = t1;
      } else {
        if (offset < 0 || offset >= t2)
          throw $.ioore(offset);
        return $.LeafKeywordState$(strings[offset]);
      }
      if (isLeaf) {
        if (offset < 0 || offset >= t2)
          throw $.ioore(offset);
        return $.ArrayKeywordState$(result, strings[offset]);
      } else
        return $.ArrayKeywordState$(result, null);
  }
};

$._Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if ($.ltB(startIndex, 0))
    startIndex = 0;
  for (i = startIndex; $.ltB(i, endIndex); i = $.add(i, 1))
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Lists_getRange$bailout = function(state0, a, start, length$, accumulator) {
  var end, i;
  if ($.ltB(length$, 0))
    throw $.$$throw($.ArgumentError$('length'));
  if ($.ltB(start, 0))
    throw $.$$throw($.RangeError$value(start));
  end = $.add(start, length$);
  if ($.gtB(end, $.get$length(a)))
    throw $.$$throw($.RangeError$value(end));
  for (i = start; $.ltB(i, end); i = $.add(i, 1))
    $.getInterceptor(accumulator).add$1(accumulator, $.index(a, i));
  return accumulator;
};

$._Sort__dualPivotQuicksort$bailout = function(state0, a, left, right, compare) {
  var sixth, index1, index5, index3, index2, index4, el1, el2, el3, el4, el5, t0, less, great, pivots_are_equal, k, ak, comp, less0, great0, t1;
  sixth = $.tdiv($.add($.sub(right, left), 1), 6);
  if (typeof sixth !== 'number')
    throw $.iae(sixth);
  index1 = left + sixth;
  index5 = $.sub(right, sixth);
  if (typeof right !== 'number')
    throw $.iae(right);
  index3 = $.tdiv(left + right, 2);
  index2 = index3 - sixth;
  index4 = index3 + sixth;
  el1 = $.index(a, index1);
  el2 = $.index(a, index2);
  el3 = $.index(a, index3);
  el4 = $.index(a, index4);
  el5 = $.index(a, index5);
  if ($.gtB(compare.call$2(el1, el2), 0)) {
    t0 = el2;
    el2 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  if ($.gtB(compare.call$2(el1, el3), 0)) {
    t0 = el3;
    el3 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el1, el4), 0)) {
    t0 = el4;
    el4 = el1;
    el1 = t0;
  }
  if ($.gtB(compare.call$2(el3, el4), 0)) {
    t0 = el4;
    el4 = el3;
    el3 = t0;
  }
  if ($.gtB(compare.call$2(el2, el5), 0)) {
    t0 = el5;
    el5 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el2, el3), 0)) {
    t0 = el3;
    el3 = el2;
    el2 = t0;
  }
  if ($.gtB(compare.call$2(el4, el5), 0)) {
    t0 = el5;
    el5 = el4;
    el4 = t0;
  }
  $.indexSet(a, index1, el1);
  $.indexSet(a, index3, el3);
  $.indexSet(a, index5, el5);
  $.indexSet(a, index2, $.index(a, left));
  $.indexSet(a, index4, $.index(a, right));
  less = left + 1;
  great = right - 1;
  pivots_are_equal = $.eqB(compare.call$2(el2, el4), 0);
  if (pivots_are_equal)
    for (k = less; k <= great; ++k) {
      ak = $.index(a, k);
      comp = compare.call$2(ak, el2);
      if ($.eqB(comp, 0))
        continue;
      if ($.ltB(comp, 0)) {
        if (!(k === less)) {
          $.indexSet(a, k, $.index(a, less));
          $.indexSet(a, less, ak);
        }
        ++less;
      } else
        for (; true;) {
          comp = compare.call$2($.index(a, great), el2);
          if ($.gtB(comp, 0)) {
            --great;
            continue;
          } else if ($.ltB(comp, 0)) {
            $.indexSet(a, k, $.index(a, less));
            less0 = less + 1;
            $.indexSet(a, less, $.index(a, great));
            great0 = great - 1;
            $.indexSet(a, great, ak);
            great = great0;
            less = less0;
            break;
          } else {
            $.indexSet(a, k, $.index(a, great));
            great0 = great - 1;
            $.indexSet(a, great, ak);
            great = great0;
            break;
          }
        }
    }
  else
    for (k = less; k <= great; ++k) {
      ak = $.index(a, k);
      if ($.ltB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          $.indexSet(a, k, $.index(a, less));
          $.indexSet(a, less, ak);
        }
        ++less;
      } else if ($.gtB(compare.call$2(ak, el4), 0))
        for (; true;)
          if ($.gtB(compare.call$2($.index(a, great), el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
              $.indexSet(a, k, $.index(a, less));
              less0 = less + 1;
              $.indexSet(a, less, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              $.indexSet(a, k, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
    }
  t1 = less - 1;
  $.indexSet(a, left, $.index(a, t1));
  $.indexSet(a, t1, el2);
  $.indexSet(a, right, $.index(a, great + 1));
  $.indexSet(a, great + 1, el4);
  $._Sort__doSort(a, left, less - 2, compare);
  $._Sort__doSort(a, great + 2, right, compare);
  if (pivots_are_equal)
    return;
  if (less < index1 && $.gtB(great, index5)) {
    for (; $.eqB(compare.call$2($.index(a, less), el2), 0);)
      ++less;
    for (; $.eqB(compare.call$2($.index(a, great), el4), 0);)
      --great;
    for (k = less; k <= great; ++k) {
      ak = $.index(a, k);
      if ($.eqB(compare.call$2(ak, el2), 0)) {
        if (!(k === less)) {
          $.indexSet(a, k, $.index(a, less));
          $.indexSet(a, less, ak);
        }
        ++less;
      } else if ($.eqB(compare.call$2(ak, el4), 0))
        for (; true;)
          if ($.eqB(compare.call$2($.index(a, great), el4), 0)) {
            --great;
            if (great < k)
              break;
            continue;
          } else {
            if ($.ltB(compare.call$2($.index(a, great), el2), 0)) {
              $.indexSet(a, k, $.index(a, less));
              less0 = less + 1;
              $.indexSet(a, less, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
              less = less0;
            } else {
              $.indexSet(a, k, $.index(a, great));
              great0 = great - 1;
              $.indexSet(a, great, ak);
              great = great0;
            }
            break;
          }
    }
    $._Sort__doSort(a, less, great, compare);
  } else
    $._Sort__doSort(a, less, great, compare);
};

$.Arrays_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var i;
  if ($.geB(startIndex, $.get$length(a)))
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i)
    if ($.eqB($.index(a, i), element))
      return i;
  return -1;
};

$._Sort_insertionSort_$bailout = function(state0, a, left, right, compare) {
  var i, el, j, j0;
  for (i = left + 1; $.leB(i, right); ++i) {
    el = $.index(a, i);
    j = i;
    while (true) {
      if (!(j > left && $.gtB(compare.call$2($.index(a, j - 1), el), 0)))
        break;
      j0 = j - 1;
      $.indexSet(a, j, $.index(a, j0));
      j = j0;
    }
    $.indexSet(a, j, el);
  }
};

$.Strings__toJsStringArray$bailout = function(state0, strings) {
  var length$, i, string, array;
  $.checkNull(strings);
  length$ = $.get$length(strings);
  if ($.isJsArray(strings)) {
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
    }
    array = strings;
  } else {
    array = $._ListImpl_List(length$);
    for (i = 0; $.ltB(i, length$); ++i) {
      string = $.index(strings, i);
      $.checkNull(string);
      if (!(typeof string === 'string'))
        throw $.$$throw($.ArgumentError$(string));
      if (i >= array.length)
        throw $.ioore(i);
      array[i] = string;
    }
  }
  return array;
};

$.resultComparator.call$2 = $.resultComparator;
$.resultComparator.$name = "resultComparator";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.Comparable_compare.call$2 = $.Comparable_compare;
$.Comparable_compare.$name = "Comparable_compare";
$.handleUpDown.call$1 = $.handleUpDown;
$.handleUpDown.$name = "handleUpDown";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$.shortcutHandler.call$1 = $.shortcutHandler;
$.shortcutHandler.$name = "shortcutHandler";
$.updateDropDown.call$1 = $.updateDropDown;
$.updateDropDown.$name = "updateDropDown";
$.toStringWrapper.call$0 = $.toStringWrapper;
$.toStringWrapper.$name = "toStringWrapper";
Isolate.$finishClasses($$);
$$ = {};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CTC3 = Isolate.makeConstantList([]);
$.CTC79 = new Isolate.$isolateProperties.ConstantMap(0, {}, Isolate.$isolateProperties.CTC3);
$.CTC81 = new Isolate.$isolateProperties.StringWrapper('||');
$.CTC43 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC81, 4, 146);
$.CTC82 = new Isolate.$isolateProperties.StringWrapper('-');
$.CTC55 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC82, 12, 45);
$.CTC83 = new Isolate.$isolateProperties.StringWrapper('++');
$.CTC84 = new Isolate.$isolateProperties.StringWrapper('&=');
$.CTC85 = new Isolate.$isolateProperties.StringWrapper(')');
$.CTC8 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC85, 0, 41);
$.CTC86 = new Isolate.$isolateProperties.StringWrapper('|');
$.CTC87 = new Isolate.$isolateProperties.StringWrapper('#');
$.CTC34 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC87, 0, 35);
$.CTC88 = new Isolate.$isolateProperties.StringWrapper('keyword');
$.CTC89 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC88, 0, 107);
$.CTC90 = new Isolate.$isolateProperties.Keyword('export', false, true, Isolate.$isolateProperties.CTC89);
$.CTC91 = new Isolate.$isolateProperties.StringWrapper('as');
$.CTC92 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC91, 10, 107);
$.CTC93 = new Isolate.$isolateProperties.Keyword('throw', false, false, Isolate.$isolateProperties.CTC89);
$.CTC94 = new Isolate.$isolateProperties.StringWrapper('|=');
$.CTC44 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC94, 1, 147);
$.CTC95 = new Isolate.$isolateProperties.StringWrapper('>>=');
$.CTC96 = new Isolate.$isolateProperties.StringWrapper('-=');
$.CTC54 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC96, 1, 152);
$.CTC97 = new Isolate.$isolateProperties.Keyword('get', false, true, Isolate.$isolateProperties.CTC89);
$.CTC98 = new Isolate.$isolateProperties.StringWrapper(']');
$.CTC13 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC98, 0, 93);
$.CTC99 = new Isolate.$isolateProperties.Keyword('import', false, true, Isolate.$isolateProperties.CTC89);
$.CTC100 = new Isolate.$isolateProperties.StringWrapper('+');
$.CTC101 = new Isolate.$isolateProperties.Keyword('in', false, false, Isolate.$isolateProperties.CTC89);
$.CTC24 = new Isolate.$isolateProperties.StringWrapper('hex digit expected');
$.CTC102 = new Isolate.$isolateProperties.StringWrapper('malformed input');
$.CTC103 = new Isolate.$isolateProperties.StringWrapper('^');
$.CTC42 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC103, 7, 94);
$.CTC104 = new Isolate.$isolateProperties.StringWrapper('*');
$.CTC52 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC104, 13, 42);
$.CTC105 = new Isolate.$isolateProperties.StringWrapper('[]=');
$.CTC38 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC105, 0, 140);
$.CTC4 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CTC106 = new Isolate.$isolateProperties.StringWrapper('{');
$.CTC15 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC106, 0, 123);
$.CTC107 = new Isolate.$isolateProperties.StringWrapper('<<');
$.CTC72 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC107, 11, 137);
$.CTC80 = new Isolate.$isolateProperties.Object();
$.CTC108 = new Isolate.$isolateProperties.StringWrapper('string');
$.CTC26 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC108, 0, 39);
$.CTC109 = new Isolate.$isolateProperties.StringWrapper('!==');
$.CTC59 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC109, 9, 142);
$.CTC110 = new Isolate.$isolateProperties.StringWrapper('~/');
$.CTC36 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC110, 13, 154);
$.CTC111 = new Isolate.$isolateProperties.StringWrapper('>');
$.CTC112 = new Isolate.$isolateProperties.Keyword('true', false, false, Isolate.$isolateProperties.CTC89);
$.CTC113 = new Isolate.$isolateProperties.Keyword('implements', false, true, Isolate.$isolateProperties.CTC89);
$.CTC114 = new Isolate.$isolateProperties.StringWrapper('${');
$.CTC115 = new Isolate.$isolateProperties.StringWrapper('^=');
$.CTC41 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC115, 1, 157);
$.CTC116 = new Isolate.$isolateProperties.Keyword('of', true, false, Isolate.$isolateProperties.CTC89);
$.CTC117 = new Isolate.$isolateProperties.Keyword('continue', false, false, Isolate.$isolateProperties.CTC89);
$.CTC118 = new Isolate.$isolateProperties.StringWrapper('--');
$.CTC119 = new Isolate.$isolateProperties.StringWrapper('.');
$.CTC120 = new Isolate.$isolateProperties.StringWrapper('!=');
$.CTC121 = new Isolate.$isolateProperties.StringWrapper('..');
$.CTC20 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC121, 2, 133);
$.CTC122 = new Isolate.$isolateProperties.StringWrapper('[]');
$.CTC39 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC122, 0, 141);
$.CTC123 = new Isolate.$isolateProperties.Keyword('part', false, true, Isolate.$isolateProperties.CTC89);
$.CTC124 = new Isolate.$isolateProperties.StringWrapper('identifier');
$.CTC2 = new Isolate.$isolateProperties.ObjectInterceptor();
$.CTC1 = new Isolate.$isolateProperties.JSArray();
$.CTC0 = new Isolate.$isolateProperties.JSString();
$.CTC125 = new Isolate.$isolateProperties.StringWrapper('=');
$.CTC65 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC125, 1, 61);
$.CTC126 = new Isolate.$isolateProperties.StringWrapper('/');
$.CTC127 = new Isolate.$isolateProperties.StringWrapper('EOF');
$.CTC5 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC127, 0, 0);
$.CTC128 = new Isolate.$isolateProperties.Keyword('return', false, false, Isolate.$isolateProperties.CTC89);
$.CTC129 = new Isolate.$isolateProperties.StringWrapper('>=');
$.CTC130 = new Isolate.$isolateProperties.StringWrapper('/=');
$.CTC131 = new Isolate.$isolateProperties.Keyword('show', true, false, Isolate.$isolateProperties.CTC89);
$.CTC132 = new Isolate.$isolateProperties.StringWrapper('==');
$.CTC63 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC132, 9, 135);
$.CTC133 = new Isolate.$isolateProperties.StringWrapper('comment');
$.CTC134 = new Isolate.$isolateProperties.StringWrapper('%');
$.CTC50 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC134, 13, 37);
$.CTC135 = new Isolate.$isolateProperties.StringWrapper('$');
$.CTC136 = new Isolate.$isolateProperties.StringWrapper('\\');
$.CTC137 = new Isolate.$isolateProperties.StringWrapper('===');
$.CTC62 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC137, 9, 134);
$.CTC138 = new Isolate.$isolateProperties.Keyword('library', false, true, Isolate.$isolateProperties.CTC89);
$.CTC139 = new Isolate.$isolateProperties.Keyword('extends', false, false, Isolate.$isolateProperties.CTC89);
$.CTC140 = new Isolate.$isolateProperties.Keyword('default', false, false, Isolate.$isolateProperties.CTC89);
$.CTC141 = new Isolate.$isolateProperties.StringWrapper('is');
$.CTC142 = new Isolate.$isolateProperties.StringWrapper(',');
$.CTC9 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC142, 0, 44);
$.CTC143 = new Isolate.$isolateProperties.StringWrapper('*=');
$.CTC144 = new Isolate.$isolateProperties.StringWrapper('!');
$.CTC145 = new Isolate.$isolateProperties.StringWrapper('double');
$.CTC146 = new Isolate.$isolateProperties.StringWrapper('+=');
$.CTC57 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC146, 1, 150);
$.CTC147 = new Isolate.$isolateProperties.StringWrapper('&&');
$.CTC148 = new Isolate.$isolateProperties.Keyword('switch', false, false, Isolate.$isolateProperties.CTC89);
$.CTC149 = new Isolate.$isolateProperties.StringWrapper('`');
$.CTC14 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC149, 0, 96);
$.CTC150 = new Isolate.$isolateProperties.StringWrapper('}');
$.CTC151 = new Isolate.$isolateProperties.Keyword('new', false, false, Isolate.$isolateProperties.CTC89);
$.CTC152 = new Isolate.$isolateProperties.StringWrapper('int');
$.CTC18 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC152, 0, 105);
$.CTC153 = new Isolate.$isolateProperties.Keyword('on', true, false, Isolate.$isolateProperties.CTC89);
$.CTC154 = new Isolate.$isolateProperties.Keyword('case', false, false, Isolate.$isolateProperties.CTC89);
$.CTC155 = new Isolate.$isolateProperties.StringWrapper('~');
$.CTC37 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC155, 0, 126);
$.CTC156 = new Isolate.$isolateProperties.StringWrapper(';');
$.CTC11 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC156, 0, 59);
$.CTC157 = new Isolate.$isolateProperties.StringWrapper('<<=');
$.CTC158 = new Isolate.$isolateProperties.StringWrapper('?');
$.CTC159 = new Isolate.$isolateProperties.Keyword('interface', false, true, Isolate.$isolateProperties.CTC89);
$.CTC160 = new Isolate.$isolateProperties.StringWrapper('<=');
$.CTC70 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC160, 10, 129);
$.CTC161 = new Isolate.$isolateProperties.StringWrapper('(');
$.CTC162 = new Isolate.$isolateProperties.Keyword('var', false, false, Isolate.$isolateProperties.CTC89);
$.CTC163 = new Isolate.$isolateProperties.StringWrapper(':');
$.CTC164 = new Isolate.$isolateProperties.StringWrapper('...');
$.CTC165 = new Isolate.$isolateProperties.StringWrapper('%=');
$.CTC49 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC165, 1, 155);
$.CTC166 = new Isolate.$isolateProperties.StringWrapper('@');
$.CTC167 = new Isolate.$isolateProperties.StringWrapper('~/=');
$.CTC35 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC167, 1, 153);
$.CTC168 = new Isolate.$isolateProperties.StringWrapper('>>');
$.CTC169 = new Isolate.$isolateProperties.StringWrapper('=>');
$.CTC170 = new Isolate.$isolateProperties.StringWrapper('&');
$.CTC48 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC170, 8, 38);
$.CTC171 = new Isolate.$isolateProperties.StringWrapper('hexadecimal');
$.CTC172 = new Isolate.$isolateProperties.StringWrapper('[');
$.CTC40 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC172, 14, 91);
$.CTC173 = new Isolate.$isolateProperties.StringWrapper('<');
$.CTC73 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC173, 10, 60);
$.CTC25 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC171, 0, 120);
$.CTC174 = new Isolate.$isolateProperties.Keyword('while', false, false, Isolate.$isolateProperties.CTC89);
$.CTC175 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC141, 10, 107);
$.CTC176 = new Isolate.$isolateProperties.Keyword('is', false, false, Isolate.$isolateProperties.CTC175);
$.CTC177 = new Isolate.$isolateProperties.Keyword('assert', false, false, Isolate.$isolateProperties.CTC89);
$.CTC178 = new Isolate.$isolateProperties.Keyword('break', false, false, Isolate.$isolateProperties.CTC89);
$.CTC179 = new Isolate.$isolateProperties.Keyword('catch', false, false, Isolate.$isolateProperties.CTC89);
$.CTC180 = new Isolate.$isolateProperties.Keyword('class', false, false, Isolate.$isolateProperties.CTC89);
$.CTC181 = new Isolate.$isolateProperties.Keyword('const', false, false, Isolate.$isolateProperties.CTC89);
$.CTC182 = new Isolate.$isolateProperties.Keyword('do', false, false, Isolate.$isolateProperties.CTC89);
$.CTC183 = new Isolate.$isolateProperties.Keyword('else', false, false, Isolate.$isolateProperties.CTC89);
$.CTC184 = new Isolate.$isolateProperties.Keyword('false', false, false, Isolate.$isolateProperties.CTC89);
$.CTC185 = new Isolate.$isolateProperties.Keyword('final', false, false, Isolate.$isolateProperties.CTC89);
$.CTC186 = new Isolate.$isolateProperties.Keyword('finally', false, false, Isolate.$isolateProperties.CTC89);
$.CTC187 = new Isolate.$isolateProperties.Keyword('for', false, false, Isolate.$isolateProperties.CTC89);
$.CTC188 = new Isolate.$isolateProperties.Keyword('if', false, false, Isolate.$isolateProperties.CTC89);
$.CTC189 = new Isolate.$isolateProperties.Keyword('null', false, false, Isolate.$isolateProperties.CTC89);
$.CTC190 = new Isolate.$isolateProperties.Keyword('super', false, false, Isolate.$isolateProperties.CTC89);
$.CTC191 = new Isolate.$isolateProperties.Keyword('this', false, false, Isolate.$isolateProperties.CTC89);
$.CTC192 = new Isolate.$isolateProperties.Keyword('try', false, false, Isolate.$isolateProperties.CTC89);
$.CTC193 = new Isolate.$isolateProperties.Keyword('void', false, false, Isolate.$isolateProperties.CTC89);
$.CTC194 = new Isolate.$isolateProperties.Keyword('abstract', false, true, Isolate.$isolateProperties.CTC89);
$.CTC195 = new Isolate.$isolateProperties.Keyword('as', false, true, Isolate.$isolateProperties.CTC92);
$.CTC196 = new Isolate.$isolateProperties.Keyword('dynamic', false, true, Isolate.$isolateProperties.CTC89);
$.CTC197 = new Isolate.$isolateProperties.Keyword('external', false, true, Isolate.$isolateProperties.CTC89);
$.CTC198 = new Isolate.$isolateProperties.Keyword('factory', false, true, Isolate.$isolateProperties.CTC89);
$.CTC199 = new Isolate.$isolateProperties.Keyword('operator', false, true, Isolate.$isolateProperties.CTC89);
$.CTC200 = new Isolate.$isolateProperties.Keyword('set', false, true, Isolate.$isolateProperties.CTC89);
$.CTC201 = new Isolate.$isolateProperties.Keyword('static', false, true, Isolate.$isolateProperties.CTC89);
$.CTC202 = new Isolate.$isolateProperties.Keyword('typedef', false, true, Isolate.$isolateProperties.CTC89);
$.CTC203 = new Isolate.$isolateProperties.Keyword('hide', true, false, Isolate.$isolateProperties.CTC89);
$.CTC204 = new Isolate.$isolateProperties.Keyword('native', true, false, Isolate.$isolateProperties.CTC89);
$.CTC205 = new Isolate.$isolateProperties.Keyword('source', true, false, Isolate.$isolateProperties.CTC89);
$.CTC77 = Isolate.makeConstantList([Isolate.$isolateProperties.CTC177, Isolate.$isolateProperties.CTC178, Isolate.$isolateProperties.CTC154, Isolate.$isolateProperties.CTC179, Isolate.$isolateProperties.CTC180, Isolate.$isolateProperties.CTC181, Isolate.$isolateProperties.CTC117, Isolate.$isolateProperties.CTC140, Isolate.$isolateProperties.CTC182, Isolate.$isolateProperties.CTC183, Isolate.$isolateProperties.CTC139, Isolate.$isolateProperties.CTC184, Isolate.$isolateProperties.CTC185, Isolate.$isolateProperties.CTC186, Isolate.$isolateProperties.CTC187, Isolate.$isolateProperties.CTC188, Isolate.$isolateProperties.CTC101, Isolate.$isolateProperties.CTC151, Isolate.$isolateProperties.CTC189, Isolate.$isolateProperties.CTC128, Isolate.$isolateProperties.CTC190, Isolate.$isolateProperties.CTC148, Isolate.$isolateProperties.CTC191, Isolate.$isolateProperties.CTC93, Isolate.$isolateProperties.CTC112, Isolate.$isolateProperties.CTC192, Isolate.$isolateProperties.CTC162, Isolate.$isolateProperties.CTC193, Isolate.$isolateProperties.CTC174, Isolate.$isolateProperties.CTC176, Isolate.$isolateProperties.CTC194, Isolate.$isolateProperties.CTC195, Isolate.$isolateProperties.CTC196, Isolate.$isolateProperties.CTC90, Isolate.$isolateProperties.CTC197, Isolate.$isolateProperties.CTC198, Isolate.$isolateProperties.CTC97, Isolate.$isolateProperties.CTC113, Isolate.$isolateProperties.CTC99, Isolate.$isolateProperties.CTC159, Isolate.$isolateProperties.CTC138, Isolate.$isolateProperties.CTC199, Isolate.$isolateProperties.CTC123, Isolate.$isolateProperties.CTC200, Isolate.$isolateProperties.CTC201, Isolate.$isolateProperties.CTC202, Isolate.$isolateProperties.CTC203, Isolate.$isolateProperties.CTC204, Isolate.$isolateProperties.CTC116, Isolate.$isolateProperties.CTC153, Isolate.$isolateProperties.CTC131, Isolate.$isolateProperties.CTC205]);
$.CTC61 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC144, 0, 33);
$.CTC56 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC83, 14, 149);
$.CTC47 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC84, 1, 145);
$.CTC32 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC126, 13, 47);
$.CTC23 = new Isolate.$isolateProperties.StringWrapper('digit expected');
$.CTC67 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC95, 1, 139);
$.CTC = new Isolate.$isolateProperties.NullPointerException(null, Isolate.$isolateProperties.CTC3);
$.CTC30 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC166, 0, 64);
$.CTC16 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC150, 0, 125);
$.CTC22 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC145, 0, 100);
$.CTC10 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC163, 0, 58);
$.CTC29 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC114, 0, 128);
$.CTC12 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC158, 3, 63);
$.CTC60 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC120, 9, 143);
$.CTC53 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC118, 14, 151);
$.CTC7 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC161, 14, 40);
$.CTC74 = new Isolate.$isolateProperties.StringWrapper('expected identifier');
$.CTC6 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC136, 0, 92);
$.CTC33 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC133, 0, 158);
$.CTC78 = new Isolate.$isolateProperties.Link();
$.CTC75 = new Isolate.$isolateProperties.Keyword('Dynamic', false, true, Isolate.$isolateProperties.CTC89);
$.CTC76 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC124, 0, 97);
$.CTC58 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC100, 12, 43);
$.CTC66 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC129, 10, 138);
$.CTC31 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC130, 1, 131);
$.CTC27 = new Isolate.$isolateProperties.StringWrapper('unterminated string literal');
$.CTC46 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC147, 5, 144);
$.CTC28 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC135, 0, 159);
$.CTC51 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC143, 1, 148);
$.CTC21 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC119, 14, 46);
$.CTC71 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC157, 1, 136);
$.CTC19 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC164, 0, 132);
$.CTC69 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC111, 10, 62);
$.CTC17 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC102, 0, 88);
$.CTC68 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC168, 11, 156);
$.CTC45 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC86, 6, 124);
$.CTC64 = new Isolate.$isolateProperties.PrecedenceInfo(Isolate.$isolateProperties.CTC169, 0, 130);
$.BANG_TOKEN = 33;
$.BAR_TOKEN = 124;
$.COLON_TOKEN = 58;
$.COMMA_TOKEN = 44;
$.EQ_TOKEN = 61;
$.GT_TOKEN = 62;
$.HASH_TOKEN = 35;
$.OPEN_CURLY_BRACKET_TOKEN = 123;
$.OPEN_SQUARE_BRACKET_TOKEN = 91;
$.OPEN_PAREN_TOKEN = 40;
$.LT_TOKEN = 60;
$.MINUS_TOKEN = 45;
$.PERIOD_TOKEN = 46;
$.PLUS_TOKEN = 43;
$.QUESTION_TOKEN = 63;
$.AT_TOKEN = 64;
$.CLOSE_CURLY_BRACKET_TOKEN = 125;
$.CLOSE_SQUARE_BRACKET_TOKEN = 93;
$.CLOSE_PAREN_TOKEN = 41;
$.SEMICOLON_TOKEN = 59;
$.SLASH_TOKEN = 47;
$.TILDE_TOKEN = 126;
$.STAR_TOKEN = 42;
$.PERCENT_TOKEN = 37;
$.CARET_TOKEN = 94;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CTC4;
$.STRING_INTERPOLATION_TOKEN = 128;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.LT_EQ_TOKEN = 129;
$.FUNCTION_TOKEN = 130;
$.SLASH_EQ_TOKEN = 131;
$.PERIOD_PERIOD_PERIOD_TOKEN = 132;
$.KeyName_UP = 'Up';
$.PERIOD_PERIOD_TOKEN = 133;
$.EQ_EQ_EQ_TOKEN = 134;
$.EQ_EQ_TOKEN = 135;
$.LT_LT_EQ_TOKEN = 136;
$.LT_LT_TOKEN = 137;
$.GT_EQ_TOKEN = 138;
$.GT_GT_EQ_TOKEN = 139;
$.INDEX_EQ_TOKEN = 140;
$.INDEX_TOKEN = 141;
$.BANG_EQ_EQ_TOKEN = 142;
$.BANG_EQ_TOKEN = 143;
$.AMPERSAND_AMPERSAND_TOKEN = 144;
$.AMPERSAND_EQ_TOKEN = 145;
$.KeywordState__KEYWORD_STATE = null;
$.BAR_BAR_TOKEN = 146;
$.BAR_EQ_TOKEN = 147;
$.STAR_EQ_TOKEN = 148;
$.PLUS_PLUS_TOKEN = 149;
$.PLUS_EQ_TOKEN = 150;
$.MINUS_MINUS_TOKEN = 151;
$.MINUS_EQ_TOKEN = 152;
$.TILDE_SLASH_EQ_TOKEN = 153;
$.TILDE_SLASH_TOKEN = 154;
$.PERCENT_EQ_TOKEN = 155;
$.GT_GT_TOKEN = 156;
$.CARET_EQ_TOKEN = 157;
$.COMMENT_TOKEN = 158;
$.STRING_INTERPOLATION_IDENTIFIER_TOKEN = 159;
$.UNKNOWN_TOKEN = 1024;
$.BACKPING_INFO = Isolate.$isolateProperties.CTC14;
$.BACKSLASH_INFO = Isolate.$isolateProperties.CTC6;
$.PERIOD_PERIOD_PERIOD_INFO = Isolate.$isolateProperties.CTC19;
$.CASCADE_PRECEDENCE = 2;
$.PERIOD_PERIOD_INFO = Isolate.$isolateProperties.CTC20;
$.BANG_INFO = Isolate.$isolateProperties.CTC61;
$.COLON_INFO = Isolate.$isolateProperties.CTC10;
$.INDEX_INFO = Isolate.$isolateProperties.CTC39;
$.MINUS_MINUS_INFO = Isolate.$isolateProperties.CTC53;
$.PLUS_PLUS_INFO = Isolate.$isolateProperties.CTC56;
$.TILDE_INFO = Isolate.$isolateProperties.CTC37;
$.FUNCTION_INFO = Isolate.$isolateProperties.CTC64;
$.HASH_INFO = Isolate.$isolateProperties.CTC34;
$.INDEX_EQ_INFO = Isolate.$isolateProperties.CTC38;
$.SEMICOLON_INFO = Isolate.$isolateProperties.CTC11;
$.COMMA_INFO = Isolate.$isolateProperties.CTC9;
$.AT_INFO = Isolate.$isolateProperties.CTC30;
$.ASSIGNMENT_PRECEDENCE = 1;
$.AMPERSAND_EQ_INFO = Isolate.$isolateProperties.CTC47;
$.BAR_EQ_INFO = Isolate.$isolateProperties.CTC44;
$.CARET_EQ_INFO = Isolate.$isolateProperties.CTC41;
$.EQ_INFO = Isolate.$isolateProperties.CTC65;
$.GT_GT_EQ_INFO = Isolate.$isolateProperties.CTC67;
$.LT_LT_EQ_INFO = Isolate.$isolateProperties.CTC71;
$.MINUS_EQ_INFO = Isolate.$isolateProperties.CTC54;
$.PERCENT_EQ_INFO = Isolate.$isolateProperties.CTC49;
$.PLUS_EQ_INFO = Isolate.$isolateProperties.CTC57;
$.SLASH_EQ_INFO = Isolate.$isolateProperties.CTC31;
$.STAR_EQ_INFO = Isolate.$isolateProperties.CTC51;
$.TILDE_SLASH_EQ_INFO = Isolate.$isolateProperties.CTC35;
$.QUESTION_INFO = Isolate.$isolateProperties.CTC12;
$.BAR_BAR_INFO = Isolate.$isolateProperties.CTC43;
$.AMPERSAND_AMPERSAND_INFO = Isolate.$isolateProperties.CTC46;
$.BAR_INFO = Isolate.$isolateProperties.CTC45;
$.CARET_INFO = Isolate.$isolateProperties.CTC42;
$.AMPERSAND_INFO = Isolate.$isolateProperties.CTC48;
$.BANG_EQ_EQ_INFO = Isolate.$isolateProperties.CTC59;
$.BANG_EQ_INFO = Isolate.$isolateProperties.CTC60;
$.EQ_EQ_EQ_INFO = Isolate.$isolateProperties.CTC62;
$.EQ_EQ_INFO = Isolate.$isolateProperties.CTC63;
$.GT_EQ_INFO = Isolate.$isolateProperties.CTC66;
$.GT_INFO = Isolate.$isolateProperties.CTC69;
$.IS_INFO = Isolate.$isolateProperties.CTC175;
$.AS_INFO = Isolate.$isolateProperties.CTC92;
$.LT_EQ_INFO = Isolate.$isolateProperties.CTC70;
$.LT_INFO = Isolate.$isolateProperties.CTC73;
$.GT_GT_INFO = Isolate.$isolateProperties.CTC68;
$.LT_LT_INFO = Isolate.$isolateProperties.CTC72;
$.MINUS_INFO = Isolate.$isolateProperties.CTC55;
$.PLUS_INFO = Isolate.$isolateProperties.CTC58;
$.PERCENT_INFO = Isolate.$isolateProperties.CTC50;
$.SLASH_INFO = Isolate.$isolateProperties.CTC32;
$.STAR_INFO = Isolate.$isolateProperties.CTC52;
$.TILDE_SLASH_INFO = Isolate.$isolateProperties.CTC36;
$.POSTFIX_PRECEDENCE = 14;
$.PERIOD_INFO = Isolate.$isolateProperties.CTC21;
$.KEYWORD_INFO = Isolate.$isolateProperties.CTC89;
$.EOF_INFO = Isolate.$isolateProperties.CTC5;
$.IDENTIFIER_INFO = Isolate.$isolateProperties.CTC76;
$.BAD_INPUT_INFO = Isolate.$isolateProperties.CTC17;
$.OPEN_PAREN_INFO = Isolate.$isolateProperties.CTC7;
$.CLOSE_PAREN_INFO = Isolate.$isolateProperties.CTC8;
$.OPEN_CURLY_BRACKET_INFO = Isolate.$isolateProperties.CTC15;
$.CLOSE_CURLY_BRACKET_INFO = Isolate.$isolateProperties.CTC16;
$.INT_INFO = Isolate.$isolateProperties.CTC18;
$.STRING_INFO = Isolate.$isolateProperties.CTC26;
$.OPEN_SQUARE_BRACKET_INFO = Isolate.$isolateProperties.CTC40;
$.CLOSE_SQUARE_BRACKET_INFO = Isolate.$isolateProperties.CTC13;
$.DOUBLE_INFO = Isolate.$isolateProperties.CTC22;
$.STRING_INTERPOLATION_INFO = Isolate.$isolateProperties.CTC29;
$.STRING_INTERPOLATION_IDENTIFIER_INFO = Isolate.$isolateProperties.CTC28;
$.HEXADECIMAL_INFO = Isolate.$isolateProperties.CTC25;
$.COMMENT_INFO = Isolate.$isolateProperties.CTC33;
$.$$EOF = 0;
$._Sort__INSERTION_SORT_THRESHOLD = 32;
$.$$STX = 2;
$.$$TAB = 9;
$.$$LF = 10;
$.$$CR = 13;
$.$$SPACE = 32;
$.$$BANG = 33;
$.$$DQ = 34;
$.$$HASH = 35;
$.$$$ = 36;
$.$$PERCENT = 37;
$.$$AMPERSAND = 38;
$.$$SQ = 39;
$.$$OPEN_PAREN = 40;
$.$$CLOSE_PAREN = 41;
$.$$STAR = 42;
$.$$PLUS = 43;
$.$$COMMA = 44;
$.$$MINUS = 45;
$.$$PERIOD = 46;
$.$$SLASH = 47;
$.$$0 = 48;
$.$$1 = 49;
$.$$2 = 50;
$.$$3 = 51;
$.$$4 = 52;
$.$$5 = 53;
$.$$6 = 54;
$.$$7 = 55;
$.$$8 = 56;
$.$$9 = 57;
$.$$COLON = 58;
$.$$SEMICOLON = 59;
$.$$LT = 60;
$.$$EQ = 61;
$.$$GT = 62;
$.$$QUESTION = 63;
$.$$AT = 64;
$.$$A = 65;
$.$$D = 68;
$.$$E = 69;
$.$$F = 70;
$.$$X = 88;
$.$$Z = 90;
$.$$OPEN_SQUARE_BRACKET = 91;
$.$$BACKSLASH = 92;
$.$$CLOSE_SQUARE_BRACKET = 93;
$.$$CARET = 94;
$.$$_ = 95;
$.$$BACKPING = 96;
$.$$a = 97;
$.$$c = 99;
$.$$d = 100;
$.$$e = 101;
$.$$f = 102;
$.$$i = 105;
$.$$k = 107;
$.$$m = 109;
$.$$n = 110;
$.$$r = 114;
$.$$x = 120;
$.$$y = 121;
$.$$z = 122;
$.$$OPEN_CURLY_BRACKET = 123;
$.$$BAR = 124;
$.$$CLOSE_CURLY_BRACKET = 125;
$.$$TILDE = 126;
$._getTypeNameOf = null;
$.$$NBSP = 160;
$.Keyword_values = Isolate.$isolateProperties.CTC77;
$.Keyword_DYNAMIC_DEPRECATED = Isolate.$isolateProperties.CTC75;
$.Keyword__keywords = null;
$.libraryList = null;
$.searchInput = null;
$.dropdown = null;
$.currentSearchText = null;
$._currentResult = null;
$.currentResults = Isolate.$isolateProperties.CTC3;
$.Classification_NONE = null;
$._currentResultIndex = null;
$.Classification_ERROR = 'e';
$.Classification_COMMENT = 'c';
$.Classification_IDENTIFIER = 'i';
$.Classification_KEYWORD = 'k';
$.Classification_OPERATOR = 'o';
$.hideDropDownSuspend = false;
$.Classification_STRING = 's';
$.Classification_NUMBER = 'n';
$.Classification_PUNCTUATION = 'p';
$.Classification_TYPE_IDENTIFIER = 't';
$.Classification_SPECIAL_IDENTIFIER = 'r';
$.Classification_ARROW_OPERATOR = 'a';
$.Classification_STRING_INTERPOLATION = 'si';
$.LIBRARY = 'library';
$.CLASS = 'class';
$.INTERFACE = 'interface';
$.TYPEDEF = 'typedef';
$.MEMBERS = 'members';
$.TYPES = 'types';
$.NAME = 'name';
$.ARGS = 'args';
$.KIND = 'kind';
$.FIELD = 'field';
$.CONSTRUCTOR = 'constructor';
$.METHOD = 'method';
$.NO_PARAMS = 'noparams';
$.GETTER = 'getter';
$.SETTER = 'setter';
$.LINK_NAME = 'link_name';
$.Primitives_hashCodeSeed = 0;
$.currentLibrary = null;
$.currentType = null;
$.prefix = '';
$.KeyName_DOWN = 'Down';
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$.KeyName_ENTER = 'Enter';
$._cachedBrowserPrefix = null;
$.EOF_TOKEN = 0;
$.KEYWORD_TOKEN = 107;
$.IDENTIFIER_TOKEN = 97;
$.BAD_INPUT_TOKEN = 88;
$.DOUBLE_TOKEN = 100;
$.INT_TOKEN = 105;
$.HEXADECIMAL_TOKEN = 120;
$.STRING_TOKEN = 39;
$.AMPERSAND_TOKEN = 38;
$.BACKPING_TOKEN = 96;
$.BACKSLASH_TOKEN = 92;
Isolate.$lazy($, 'quoteRegExp', 'quoteRegExp', 'get$quoteRegExp', function() {
  return $.JSSyntaxRegExp$('[-[\\]{}()*+?.,\\\\^$|#\\s]', false, false);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''] || [];
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastCharCode = field.charCodeAt(len - 1);
    var needsAccessor = (lastCharCode & 63) >= 60;
    if (needsAccessor) {
      var needsGetter = (lastCharCode & 3) > 0;
      var needsSetter = (lastCharCode & 2) == 0;
      var renaming = (lastCharCode & 64) != 0;
      var accessorName = field = field.substring(0, len - 1);
      if (renaming) {
        var divider = field.indexOf(":");
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (needsGetter) {
        var getterString = "return this." + field + ";";
        prototype["get$" + accessorName] = new Function(getterString);
      }
      if (needsSetter) {
        var setterString = "this." + field + " = v;";
        prototype["set$" + accessorName] = new Function("v", setterString);
      }
    }
    return field;
  };
  for (var i = 0; i < fields.length; i++) {
    generateGetterSetter(fields[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method !== '') {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table) {
    $.defineProperty(Object.prototype, key, table[key]);
  }
})({
 is$Location: function() { return false; },
 is$Element: function() { return false; },
 is$JavaScriptIndexingBehavior: function() { return false; },
 is$ArrayBuffer: function() { return false; },
 is$Collection: function() { return false; },
 toString$0: function() { return $.toStringForNativeObject(this); },
 is$ImageData: function() { return false; },
 is$ArrayBufferView: function() { return false; },
 get$hashCode: function() { return $.hashCodeForNativeObject(this); },
 is$List: function() { return false; },
 is$Map: function() { return false; },
 is$File: function() { return false; },
 is$Blob: function() { return false; },
 is$_FileList: function() { return false; }
});

$.$defineNativeClass('HTMLElement', {"": []
});

$.$defineNativeClass('AbstractWorker', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.AbstractWorkerEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('AnalyserNode', {"": []
});

$.$defineNativeClass('HTMLAnchorElement', {"": ["href<", "name>", "target>", "type>"],
 toString$0: function() {
  return this.toString();
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('WebKitAnimation', {"": ["name>"]
});

$.$defineNativeClass('WebKitAnimationEvent', {"": []
});

$.$defineNativeClass('HTMLAppletElement', {"": ["name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAreaElement', {"": ["href<", "target>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ArrayBuffer', {"": [],
 is$ArrayBuffer: function() { return true; }
});

$.$defineNativeClass('ArrayBufferView', {"": [],
 is$ArrayBufferView: function() { return true; }
});

$.$defineNativeClass('Attr', {"": ["name>", "value="]
});

$.$defineNativeClass('AudioBuffer', {"": ["length>"]
});

$.$defineNativeClass('AudioBufferSourceNode', {"": []
});

$.$defineNativeClass('AudioContext', {"": [],
 get$on: function() {
  return $.AudioContextEvents$(this);
}
});

$.$defineNativeClass('AudioDestinationNode', {"": []
});

$.$defineNativeClass('HTMLAudioElement', {"": []
});

$.$defineNativeClass('AudioGain', {"": []
});

$.$defineNativeClass('AudioListener', {"": []
});

$.$defineNativeClass('AudioNode', {"": []
});

$.$defineNativeClass('AudioParam', {"": ["name>", "value="]
});

$.$defineNativeClass('AudioProcessingEvent', {"": []
});

$.$defineNativeClass('AudioSourceNode', {"": []
});

$.$defineNativeClass('HTMLBRElement', {"": [],
 clear$0: function() { return this.clear.call$0(); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('BarInfo', {"": []
});

$.$defineNativeClass('HTMLBaseElement', {"": ["href<", "target>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLBaseFontElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('BatteryManager', {"": [],
 get$on: function() {
  return $.BatteryManagerEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('BeforeLoadEvent', {"": ["url>"]
});

$.$defineNativeClass('BiquadFilterNode', {"": ["type>"]
});

$.$defineNativeClass('Blob', {"": ["type>"],
 is$Blob: function() { return true; }
});

$.$defineNativeClass('HTMLBodyElement', {"": [],
 get$on: function() {
  return $.BodyElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLButtonElement', {"": ["name>", "type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('CDATASection', {"": []
});

$.$defineNativeClass('CSSCharsetRule', {"": []
});

$.$defineNativeClass('CSSFontFaceRule', {"": ["style>"]
});

$.$defineNativeClass('CSSImportRule', {"": []
});

$.$defineNativeClass('WebKitCSSKeyframeRule', {"": ["style>"]
});

$.$defineNativeClass('WebKitCSSKeyframesRule', {"": ["name>"]
});

$.$defineNativeClass('WebKitCSSMatrix', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('CSSMediaRule', {"": []
});

$.$defineNativeClass('CSSPageRule', {"": ["style>"]
});

$.$defineNativeClass('CSSPrimitiveValue', {"": []
});

$.$defineNativeClass('CSSRule', {"": ["type>"]
});

$.$defineNativeClass('CSSStyleDeclaration', {"": ["length>"],
 _getPropertyValue$1: function(propertyName) {
  return this.getPropertyValue(propertyName);
},
 getPropertyValue$1: function(propertyName) {
  var propValue = this._getPropertyValue$1(propertyName);
  return !(propValue == null) ? propValue : '';
},
 setProperty$3: function(propertyName, value, priority) {
  this.setProperty(propertyName, value, priority);
  if (!!this.setAttribute)
    this.setAttribute(propertyName, value);
},
 get$clear: function() {
  return this.getPropertyValue$1('clear');
},
 clear$0: function() { return this.get$clear().call$0(); },
 set$display: function(value) {
  this.setProperty$3('display', value, '');
},
 get$filter: function() {
  return this.getPropertyValue$1($.S($._browserPrefix()) + 'filter');
},
 filter$1: function(arg0) { return this.get$filter().call$1(arg0); },
 filter$3: function(arg0, arg1, arg2) { return this.get$filter().call$3(arg0, arg1, arg2); },
 set$visibility: function(value) {
  this.setProperty$3('visibility', value, '');
}
});

$.$defineNativeClass('CSSStyleRule', {"": ["style>"]
});

$.$defineNativeClass('CSSStyleSheet', {"": []
});

$.$defineNativeClass('WebKitCSSTransformValue', {"": []
});

$.$defineNativeClass('CSSUnknownRule', {"": []
});

$.$defineNativeClass('CSSValue', {"": []
});

$.$defineNativeClass('HTMLCanvasElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('CanvasGradient', {"": []
});

$.$defineNativeClass('CanvasPattern', {"": []
});

$.$defineNativeClass('CanvasRenderingContext', {"": []
});

$.$defineNativeClass('CanvasRenderingContext2D', {"": []
});

$.$defineNativeClass('ChannelMergerNode', {"": []
});

$.$defineNativeClass('ChannelSplitterNode', {"": []
});

$.$defineNativeClass('CharacterData', {"": ["length>"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ClientRect', {"": []
});

$.$defineNativeClass('Clipboard', {"": []
});

$.$defineNativeClass('CloseEvent', {"": []
});

$.$defineNativeClass('Comment', {"": []
});

$.$defineNativeClass('CompositionEvent', {"": []
});

Console = (typeof console == 'undefined' ? {} : console);
Console.info$1 = function(arg) {
  return this.info(arg);
};
Console.get$info = function() { return new $.BoundClosure0(this, 'info$1'); };
$.$defineNativeClass('HTMLContentElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ConvolverNode', {"": []
});

$.$defineNativeClass('Coordinates', {"": []
});

$.$defineNativeClass('Counter', {"": []
});

$.$defineNativeClass('Crypto', {"": []
});

$.$defineNativeClass('CustomEvent', {"": []
});

$.$defineNativeClass('HTMLDListElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DOMApplicationCache', {"": [],
 get$on: function() {
  return $.DOMApplicationCacheEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('DOMError', {"": ["name>"]
});

$.$defineNativeClass('DOMException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMFileSystem', {"": ["name>"]
});

$.$defineNativeClass('DOMFileSystemSync', {"": ["name>"]
});

$.$defineNativeClass('DOMImplementation', {"": []
});

$.$defineNativeClass('MimeType', {"": ["type>"]
});

$.$defineNativeClass('MimeTypeArray', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMParser', {"": []
});

$.$defineNativeClass('Plugin', {"": ["length>", "name>"]
});

$.$defineNativeClass('PluginArray', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Selection', {"": ["type>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('DOMSettableTokenList', {"": ["value="]
});

$.$defineNativeClass('DOMTokenList', {"": ["length>"],
 contains$1: function(token) {
  return this.contains(token);
},
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('HTMLDataListElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DataTransferItem', {"": ["kind>", "type>"]
});

$.$defineNativeClass('DataTransferItemList', {"": ["length>"],
 add$2: function(data_OR_file, type) {
  return this.add(data_OR_file,type);
},
 add$1: function(data_OR_file) {
  return this.add(data_OR_file);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('DataView', {"": []
});

$.$defineNativeClass('Database', {"": []
});

$.$defineNativeClass('DatabaseSync', {"": []
});

$.$defineNativeClass('DedicatedWorkerContext', {"": [],
 get$on: function() {
  return $.DedicatedWorkerContextEvents$(this);
}
});

$.$defineNativeClass('DelayNode', {"": []
});

$.$defineNativeClass('HTMLDetailsElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DeviceMotionEvent', {"": []
});

$.$defineNativeClass('DeviceOrientationEvent', {"": []
});

$.$defineNativeClass('HTMLDirectoryElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('DirectoryEntry', {"": []
});

$.$defineNativeClass('DirectoryEntrySync', {"": []
});

$.$defineNativeClass('DirectoryReader', {"": []
});

$.$defineNativeClass('DirectoryReaderSync', {"": []
});

$.$defineNativeClass('HTMLDivElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Document', {"": [],
 get$on: function() {
  return $.DocumentEvents$(this);
},
 get$$$dom_head: function() {
  return this.head;
},
 $$dom_createElement$1: function(tagName) {
  return this.createElement(tagName);
},
 $$dom_getElementById$1: function(elementId) {
  return this.getElementById(elementId);
},
 $$dom_getElementsByName$1: function(elementName) {
  return this.getElementsByName(elementName);
},
 $$dom_getElementsByTagName$1: function(tagname) {
  return this.getElementsByTagName(tagname);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 query$1: function(selectors) {
  if ($.RegExp_RegExp('^#[_a-zA-Z]\\w*$', false, false).hasMatch$1(selectors) === true)
    return this.$$dom_getElementById$1($.getInterceptor(selectors).substring$1(selectors, 1));
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  var mutableMatches, len, copyOfMatches, t1, i;
  if ($.RegExp_RegExp('^\\[name=["\'][^\'"]+[\'"]\\]$', false, false).hasMatch$1(selectors) === true) {
    mutableMatches = this.$$dom_getElementsByName$1($.getInterceptor(selectors).substring$2(selectors, 7, selectors.length - 2));
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(1, mutableMatches);
    len = mutableMatches.length;
    copyOfMatches = $._ListImpl_List(len);
    for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else if ($.RegExp_RegExp('^[*a-zA-Z0-9]+$', false, false).hasMatch$1(selectors) === true) {
    mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
    if (typeof mutableMatches !== 'string' && (typeof mutableMatches !== 'object' || mutableMatches === null || mutableMatches.constructor !== Array && !mutableMatches.is$JavaScriptIndexingBehavior()))
      return this.queryAll$1$bailout(2, mutableMatches);
    len = mutableMatches.length;
    copyOfMatches = $._ListImpl_List(len);
    for (t1 = mutableMatches.length, i = 0; i < len; ++i) {
      if (i >= t1)
        throw $.ioore(i);
      copyOfMatches[i] = mutableMatches[i];
    }
    return $._FrozenElementList$_wrap(copyOfMatches);
  } else
    return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 queryAll$1$bailout: function(state0, env0) {
  switch (state0) {
    case 1:
      mutableMatches = env0;
      break;
    case 2:
      mutableMatches = env0;
      break;
  }
  switch (state0) {
    case 0:
    default:
      var mutableMatches, len, copyOfMatches, i, t1;
      if (state0 === 1 || state0 === 0 && $.RegExp_RegExp('^\\[name=["\'][^\'"]+[\'"]\\]$', false, false).hasMatch$1(selectors) === true)
        switch (state0) {
          case 0:
            mutableMatches = this.$$dom_getElementsByName$1($.getInterceptor(selectors).substring$2(selectors, 7, selectors.length - 2));
          case 1:
            state0 = 0;
            len = $.get$length(mutableMatches);
            copyOfMatches = $._ListImpl_List(len);
            for (i = 0; $.ltB(i, len); ++i) {
              t1 = $.index(mutableMatches, i);
              if (i >= copyOfMatches.length)
                throw $.ioore(i);
              copyOfMatches[i] = t1;
            }
            return $._FrozenElementList$_wrap(copyOfMatches);
        }
      else
        switch (state0) {
          case 0:
          case 2:
            if (state0 === 2 || state0 === 0 && $.RegExp_RegExp('^[*a-zA-Z0-9]+$', false, false).hasMatch$1(selectors) === true)
              switch (state0) {
                case 0:
                  mutableMatches = this.$$dom_getElementsByTagName$1(selectors);
                case 2:
                  state0 = 0;
                  len = $.get$length(mutableMatches);
                  copyOfMatches = $._ListImpl_List(len);
                  for (i = 0; $.ltB(i, len); ++i) {
                    t1 = $.index(mutableMatches, i);
                    if (i >= copyOfMatches.length)
                      throw $.ioore(i);
                    copyOfMatches[i] = t1;
                  }
                  return $._FrozenElementList$_wrap(copyOfMatches);
              }
            else
              return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
        }
  }
}
});

$.$defineNativeClass('DocumentFragment', {"": [],
 get$elements: function() {
  if (this._elements == null)
    this._elements = $.FilteredElementList$(this);
  return this._elements;
},
 set$elements: function(value) {
  var copy, elements;
  copy = $._ListImpl_List$from(value);
  elements = this.get$elements();
  $.getInterceptor(elements).clear$0(elements);
  $.getInterceptor(elements).addAll$1(elements, copy);
},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 set$innerHTML: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$innerHTML')) {
  {
  var t1, e, nodes;
  t1 = this.get$nodes();
  $.getInterceptor(t1).clear$0(t1);
  e = $.Element_Element$tag('div');
  e.set$innerHTML(value);
  nodes = $._ListImpl_List$from(e.get$nodes());
  t1 = this.get$nodes();
  $.getInterceptor(t1).addAll$1(t1, nodes);
}
  } else {
    return Object.prototype.set$innerHTML.call(this, value);
  }

},
 get$parent: function() {
  return;
},
 get$classes: function() {
  return $._FrozenCssClassSet$();
},
 get$dataAttributes: function() {
  return $.CTC79;
},
 get$style: function() {
  return $.Element_Element$tag('div').get$style();
},
 blur$0: function() {
},
 get$blur: function() { return new $.BoundClosure(this, 'blur$0'); },
 focus$0: function() {
},
 get$focus: function() { return new $.BoundClosure(this, 'focus$0'); },
 click$0: function() {
},
 get$click: function() { return new $.BoundClosure(this, 'click$0'); },
 get$on: function() {
  return $.ElementEvents$(this);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
}
});

$.$defineNativeClass('DocumentType', {"": ["name>"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('DynamicsCompressorNode', {"": []
});

$.$defineNativeClass('EXTTextureFilterAnisotropic', {"": []
});

$.$defineNativeClass('Element', {"": ["innerHTML<", "style>"],
 get$attributes: function() {
  return $._ElementAttributeMap$(this);
},
 set$elements: function(value) {
  if (Object.getPrototypeOf(this).hasOwnProperty('set$elements')) {
  {
  var elements = this.get$elements();
  $.getInterceptor(elements).clear$0(elements);
  $.getInterceptor(elements).addAll$1(elements, value);
}
  } else {
    return Object.prototype.set$elements.call(this, value);
  }

},
 get$elements: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$elements')) {
  {
  return $._ChildrenElementList$_wrap(this);
}
  } else {
    return Object.prototype.get$elements.call(this);
  }

},
 query$1: function(selectors) {
  return this.$$dom_querySelector$1(selectors);
},
 queryAll$1: function(selectors) {
  return $._FrozenElementList$_wrap(this.$$dom_querySelectorAll$1(selectors));
},
 get$classes: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$classes')) {
  {
  return $._ElementCssClassSet$(this);
}
  } else {
    return Object.prototype.get$classes.call(this);
  }

},
 get$dataAttributes: function() {
  return $._DataAttributeMap$(this.get$attributes());
},
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.ElementEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 get$$$dom_children: function() {
  return this.children;
},
 click$0: function() {
  return this.click();
},
 get$click: function() { return new $.BoundClosure(this, 'click$0'); },
 get$$$dom_className: function() {
  return this.className;
},
 set$$$dom_className: function(value) {
  this.className = value;
},
 get$$$dom_firstElementChild: function() {
  return this.firstElementChild;
},
 get$$$dom_lastElementChild: function() {
  return this.lastElementChild;
},
 blur$0: function() {
  return this.blur();
},
 get$blur: function() { return new $.BoundClosure(this, 'blur$0'); },
 focus$0: function() {
  return this.focus();
},
 get$focus: function() { return new $.BoundClosure(this, 'focus$0'); },
 $$dom_getAttribute$1: function(name) {
  return this.getAttribute(name);
},
 $$dom_hasAttribute$1: function(name) {
  return this.hasAttribute(name);
},
 $$dom_querySelector$1: function(selectors) {
  return this.querySelector(selectors);
},
 $$dom_querySelectorAll$1: function(selectors) {
  return this.querySelectorAll(selectors);
},
 $$dom_removeAttribute$1: function(name) {
  return this.removeAttribute(name);
},
 $$dom_setAttribute$2: function(name, value) {
  return this.setAttribute(name,value);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLEmbedElement', {"": ["name>", "type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('EntityReference', {"": []
});

$.$defineNativeClass('Entry', {"": ["name>"],
 remove$2: function(successCallback, errorCallback) {
  return this.remove($.convertDartClosureToJS(successCallback, 0),$.convertDartClosureToJS(errorCallback, 1));
},
 remove$1: function(successCallback) {
  successCallback = $.convertDartClosureToJS(successCallback, 0);
  return this.remove(successCallback);
}
});

$.$defineNativeClass('EntrySync', {"": ["name>"],
 remove$0: function() {
  return this.remove();
}
});

$.$defineNativeClass('ErrorEvent', {"": []
});

$.$defineNativeClass('Event', {"": ["type>"],
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_target());
},
 get$_target: function() {
  return this.target;
},
 preventDefault$0: function() {
  return this.preventDefault();
}
});

$.$defineNativeClass('EventException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('EventSource', {"": ["url>"],
 get$on: function() {
  return $.EventSourceEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('EventTarget', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.Events$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_addEventListener$3')) {
  {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  }

},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  if (Object.getPrototypeOf(this).hasOwnProperty('$$dom_removeEventListener$3')) {
  {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
  } else {
    return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }

}
});

$.$defineNativeClass('HTMLFieldSetElement', {"": ["elements>", "name>", "type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('File', {"": ["name>"],
 is$File: function() { return true; }
});

$.$defineNativeClass('FileEntry', {"": []
});

$.$defineNativeClass('FileEntrySync', {"": []
});

$.$defineNativeClass('FileError', {"": []
});

$.$defineNativeClass('FileException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('FileReader', {"": [],
 get$on: function() {
  return $.FileReaderEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileReaderSync', {"": []
});

$.$defineNativeClass('FileWriter', {"": ["length>"],
 get$on: function() {
  return $.FileWriterEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('FileWriterSync', {"": ["length>"]
});

$.$defineNativeClass('Float32Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Float64Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLFontElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('FormData', {"": []
});

$.$defineNativeClass('HTMLFormElement', {"": ["length>", "name>", "target>"],
 reset$0: function() {
  return this.reset();
},
 get$reset: function() { return new $.BoundClosure(this, 'reset$0'); },
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameElement', {"": ["location>", "name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLFrameSetElement', {"": ["rows>"],
 get$on: function() {
  return $.FrameSetElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('GainNode', {"": []
});

$.$defineNativeClass('Gamepad', {"": []
});

$.$defineNativeClass('Geolocation', {"": []
});

$.$defineNativeClass('Geoposition', {"": []
});

$.$defineNativeClass('HTMLHRElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLAllCollection', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLCollection', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLOptionsCollection', {"": [],
 get$length: function() {
  return this.length;
},
 set$length: function(value) {
  this.length = value;
},
 remove$1: function(index) {
  return this.remove(index);
}
});

$.$defineNativeClass('HashChangeEvent', {"": []
});

$.$defineNativeClass('HTMLHeadElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLHeadingElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLDocument', {"": [],
 get$head: function() {
  return $.document().get$$$dom_head();
}
});

$.$defineNativeClass('HTMLHtmlElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('XMLHttpRequest', {"": [],
 get$on: function() {
  return $.HttpRequestEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('XMLHttpRequestException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XMLHttpRequestProgressEvent', {"": []
});

$.$defineNativeClass('XMLHttpRequestUpload', {"": [],
 get$on: function() {
  return $.HttpRequestUploadEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBAny', {"": []
});

$.$defineNativeClass('IDBCursor', {"": ["key>"]
});

$.$defineNativeClass('IDBCursorWithValue', {"": ["value>"]
});

$.$defineNativeClass('IDBDatabase', {"": ["name>"],
 get$on: function() {
  return $.IDBDatabaseEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBDatabaseException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('IDBFactory', {"": []
});

$.$defineNativeClass('IDBIndex', {"": ["name>"]
});

$.$defineNativeClass('IDBKey', {"": []
});

$.$defineNativeClass('IDBKeyRange', {"": []
});

$.$defineNativeClass('IDBObjectStore', {"": ["name>"],
 add$2: function(value, key) {
  var t1 = $ === key;
  if (t1)
    key = null;
  if (!t1)
    return this._add_1$2($._convertDartToNative_PrepareForStructuredClone(value), key);
  return this._add_2$1($._convertDartToNative_PrepareForStructuredClone(value));
},
 add$1: function(value) {
  return this.add$2(value,$)
},
 _add_1$2: function(value, key) {
  return this.add(value,key);
},
 _add_2$1: function(value) {
  return this.add(value);
},
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('IDBOpenDBRequest', {"": [],
 get$on: function() {
  return $.IDBOpenDBRequestEvents$(this);
}
});

$.$defineNativeClass('IDBRequest', {"": [],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.IDBRequestEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBTransaction', {"": [],
 get$on: function() {
  return $.IDBTransactionEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeEvent', {"": []
});

$.$defineNativeClass('IDBVersionChangeRequest', {"": [],
 get$on: function() {
  return $.IDBVersionChangeRequestEvents$(this);
}
});

$.$defineNativeClass('HTMLIFrameElement', {"": ["name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('IceCandidate', {"": []
});

$.$defineNativeClass('ImageData', {"": [],
 is$ImageData: function() { return true; }
});

$.$defineNativeClass('HTMLImageElement', {"": ["name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLInputElement', {"": ["name>", "pattern>", "type>", "value="],
 get$on: function() {
  return $.InputElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Int16Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int32Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Int8Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('JavaScriptCallFrame', {"": ["type>"]
});

$.$defineNativeClass('KeyboardEvent', {"": ["ctrlKey>", "keyIdentifier>"]
});

$.$defineNativeClass('HTMLKeygenElement', {"": ["name>", "type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLIElement', {"": ["type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLabelElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLegendElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLLinkElement', {"": ["href<", "target>", "type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('History', {"": ["length>"]
});

$.$defineNativeClass('Location', {"": ["href<"],
 toString$0: function() {
  return this.toString();
},
 is$Location: function() { return true; }
});

$.$defineNativeClass('LocalMediaStream', {"": []
});

$.$defineNativeClass('DOMWindow', {"": ["name>", "navigator>"],
 get$location: function() {
  var result = this.get$_location();
  if ($.LocalWindow__isDartLocation(result) === true)
    return result;
  if (null == this._location_wrapper)
    this._location_wrapper = $._LocationWrapper$(result);
  return this._location_wrapper;
},
 get$_location: function() {
  return this.location;
},
 get$on: function() {
  return $.LocalWindowEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 blur$0: function() {
  return this.blur();
},
 get$blur: function() { return new $.BoundClosure(this, 'blur$0'); },
 focus$0: function() {
  return this.focus();
},
 get$focus: function() { return new $.BoundClosure(this, 'focus$0'); },
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMapElement', {"": ["name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLMarqueeElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaController', {"": [],
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMediaElement', {"": [],
 get$on: function() {
  return $.MediaElementEvents$(this);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('MediaElementAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaError', {"": []
});

$.$defineNativeClass('MediaKeyError', {"": []
});

$.$defineNativeClass('MediaKeyEvent', {"": []
});

$.$defineNativeClass('MediaList', {"": ["length>"]
});

$.$defineNativeClass('MediaQueryList', {"": []
});

$.$defineNativeClass('MediaSource', {"": [],
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStream', {"": [],
 get$on: function() {
  return $.MediaStreamEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamAudioSourceNode', {"": []
});

$.$defineNativeClass('MediaStreamEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrack', {"": ["kind>"],
 get$on: function() {
  return $.MediaStreamTrackEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MediaStreamTrackEvent', {"": []
});

$.$defineNativeClass('MediaStreamTrackList', {"": ["length>"],
 get$on: function() {
  return $.MediaStreamTrackListEvents$(this);
},
 add$1: function(track) {
  return this.add(track);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 remove$1: function(track) {
  return this.remove(track);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('MemoryInfo', {"": []
});

$.$defineNativeClass('HTMLMenuElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MessageChannel', {"": []
});

$.$defineNativeClass('MessageEvent', {"": []
});

$.$defineNativeClass('MessagePort', {"": [],
 get$on: function() {
  return $.MessagePortEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('HTMLMetaElement', {"": ["name>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Metadata', {"": []
});

$.$defineNativeClass('HTMLMeterElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLModElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('MouseEvent', {"": ["ctrlKey>"]
});

$.$defineNativeClass('MutationEvent', {"": []
});

$.$defineNativeClass('MutationObserver', {"": []
});

$.$defineNativeClass('MutationRecord', {"": ["target>", "type>"]
});

$.$defineNativeClass('NamedNodeMap', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Navigator', {"": ["userAgent>"]
});

$.$defineNativeClass('NavigatorUserMediaError', {"": []
});

$.$defineNativeClass('Node', {"": [],
 get$nodes: function() {
  return $._ChildNodeListLazy$(this);
},
 remove$0: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('remove$0')) {
  {
  if (!(this.get$parent() == null))
    this.get$parent().$$dom_removeChild$1(this);
}
  } else {
    return Object.prototype.remove$0.call(this);
  }

},
 replaceWith$1: function(otherNode, exception) {
  var parent$;
  try {
    parent$ = this.get$parent();
    parent$.$$dom_replaceChild$2(otherNode, this);
  } catch (exception) {
    $.unwrapException(exception);
  }

  return this;
},
 get$$$dom_attributes: function() {
  return this.attributes;
},
 get$$$dom_childNodes: function() {
  return this.childNodes;
},
 get$parent: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$parent')) {
  {
  return this.parentNode;
}
  } else {
    return Object.prototype.get$parent.call(this);
  }

},
 get$text: function() {
  return this.textContent;
},
 set$text: function(value) {
  this.textContent = value;
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_appendChild$1: function(newChild) {
  return this.appendChild(newChild);
},
 contains$1: function(other) {
  return this.contains(other);
},
 $$dom_removeChild$1: function(oldChild) {
  return this.removeChild(oldChild);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_replaceChild$2: function(newChild, oldChild) {
  return this.replaceChild(newChild,oldChild);
}
});

$.$defineNativeClass('NodeFilter', {"": []
});

$.$defineNativeClass('NodeIterator', {"": [],
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 filter$3: function(arg0, arg1, arg2) { return this.filter.call$3(arg0, arg1, arg2); }
});

$.$defineNativeClass('NodeList', {"": ["length>"],
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  this._parent.$$dom_appendChild$1(value);
},
 addLast$1: function(value) {
  this._parent.$$dom_appendChild$1(value);
},
 addAll$1: function(collection) {
  var t1, t2;
  for (t1 = $.iterator(collection), t2 = this._parent; t1.get$hasNext() === true;)
    t2.$$dom_appendChild$1(t1.next$0());
},
 removeLast$0: function() {
  var result = $.get$last(this);
  if (!(result == null))
    this._parent.$$dom_removeChild$1(result);
  return result;
},
 clear$0: function() {
  this._parent.set$text('');
},
 oprator$indexSet$2: function(index, value) {
  this._parent.$$dom_replaceChild$2(value, this.operator$index$1(index));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._NodeListWrapper$($._Collections_filter(this, [], f));
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 getRange$2: function(start, rangeLength) {
  return $._NodeListWrapper$($._Lists_getRange(this, start, rangeLength, []));
},
 operator$index$1: function(index) {
  return this[index];
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Notation', {"": []
});

$.$defineNativeClass('Notification', {"": [],
 get$on: function() {
  return $.NotificationEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('NotificationCenter', {"": []
});

$.$defineNativeClass('OESElementIndexUint', {"": []
});

$.$defineNativeClass('OESStandardDerivatives', {"": []
});

$.$defineNativeClass('OESTextureFloat', {"": []
});

$.$defineNativeClass('OESVertexArrayObject', {"": []
});

$.$defineNativeClass('HTMLOListElement', {"": ["type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLObjectElement', {"": ["name>", "type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OfflineAudioCompletionEvent', {"": []
});

$.$defineNativeClass('HTMLOptGroupElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLOptionElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OscillatorNode', {"": ["type>"]
});

$.$defineNativeClass('HTMLOutputElement', {"": ["name>", "type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('OverflowEvent', {"": []
});

$.$defineNativeClass('PagePopupController', {"": []
});

$.$defineNativeClass('PageTransitionEvent', {"": []
});

$.$defineNativeClass('PannerNode', {"": []
});

$.$defineNativeClass('HTMLParagraphElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLParamElement', {"": ["name>", "type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('PeerConnection00', {"": [],
 get$on: function() {
  return $.PeerConnection00Events$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('Performance', {"": []
});

$.$defineNativeClass('PerformanceNavigation', {"": ["type>"]
});

$.$defineNativeClass('PerformanceTiming', {"": []
});

$.$defineNativeClass('WebKitPoint', {"": []
});

$.$defineNativeClass('PopStateEvent', {"": []
});

$.$defineNativeClass('PositionError', {"": []
});

$.$defineNativeClass('HTMLPreElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProcessingInstruction', {"": ["target>"]
});

$.$defineNativeClass('HTMLProgressElement', {"": ["value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ProgressEvent', {"": []
});

$.$defineNativeClass('HTMLQuoteElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('RGBColor', {"": []
});

$.$defineNativeClass('RTCDataChannel', {"": [],
 get$on: function() {
  return $.RTCDataChannelEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCDataChannelEvent', {"": []
});

$.$defineNativeClass('RTCIceCandidate', {"": []
});

$.$defineNativeClass('RTCIceCandidateEvent', {"": []
});

$.$defineNativeClass('RTCPeerConnection', {"": [],
 get$on: function() {
  return $.RTCPeerConnectionEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('RTCSessionDescription', {"": ["type>"]
});

$.$defineNativeClass('RTCStatsElement', {"": []
});

$.$defineNativeClass('RTCStatsReport', {"": []
});

$.$defineNativeClass('RTCStatsResponse', {"": []
});

$.$defineNativeClass('RadioNodeList', {"": ["value="]
});

$.$defineNativeClass('Range', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('RangeException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('Rect', {"": []
});

$.$defineNativeClass('SQLError', {"": []
});

$.$defineNativeClass('SQLException', {"": []
});

$.$defineNativeClass('SQLResultSet', {"": ["rows>"]
});

$.$defineNativeClass('SQLResultSetRowList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SQLTransaction', {"": []
});

$.$defineNativeClass('SQLTransactionSync', {"": []
});

$.$defineNativeClass('Screen', {"": []
});

$.$defineNativeClass('HTMLScriptElement', {"": ["type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ScriptProcessorNode', {"": [],
 get$on: function() {
  return $.ScriptProcessorNodeEvents$(this);
}
});

$.$defineNativeClass('ScriptProfile', {"": ["head>"]
});

$.$defineNativeClass('ScriptProfileNode', {"": ["url>"]
});

$.$defineNativeClass('HTMLSelectElement', {"": ["length=", "name>", "type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SessionDescription', {"": []
});

$.$defineNativeClass('HTMLShadowElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('ShadowRoot', {"": ["innerHTML<"]
});

$.$defineNativeClass('SharedWorker', {"": []
});

$.$defineNativeClass('SharedWorkerContext', {"": ["name>"],
 get$on: function() {
  return $.SharedWorkerContextEvents$(this);
}
});

$.$defineNativeClass('SourceBuffer', {"": []
});

$.$defineNativeClass('SourceBufferList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLSourceElement', {"": ["type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLSpanElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('SpeechGrammar', {"": []
});

$.$defineNativeClass('SpeechGrammarList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputEvent', {"": []
});

$.$defineNativeClass('SpeechInputResult', {"": []
});

$.$defineNativeClass('SpeechRecognition', {"": [],
 get$on: function() {
  return $.SpeechRecognitionEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('SpeechRecognitionAlternative', {"": []
});

$.$defineNativeClass('SpeechRecognitionError', {"": []
});

$.$defineNativeClass('SpeechRecognitionEvent', {"": []
});

$.$defineNativeClass('SpeechRecognitionResult', {"": ["length>"]
});

$.$defineNativeClass('Storage', {"": [],
 containsKey$1: function(key) {
  return !(this.$$dom_getItem$1(key) == null);
},
 operator$index$1: function(key) {
  return this.$$dom_getItem$1(key);
},
 oprator$indexSet$2: function(key, value) {
  return this.$$dom_setItem$2(key, value);
},
 putIfAbsent$2: function(key, ifAbsent) {
  if (this.$$dom_getItem$1(key) == null)
    this.oprator$indexSet$2(key, ifAbsent.call$0());
  return this.operator$index$1(key);
},
 remove$1: function(key) {
  var value = this.operator$index$1(key);
  this.$$dom_removeItem$1(key);
  return value;
},
 clear$0: function() {
  return this.$$dom_clear$0();
},
 forEach$1: function(f) {
  var i, key;
  for (i = 0; true; ++i) {
    key = this.$$dom_key$1(i);
    if (key == null)
      return;
    f.call$2(key, this.operator$index$1(key));
  }
},
 get$length: function() {
  return this.get$$$dom_length();
},
 get$isEmpty: function() {
  return this.$$dom_key$1(0) == null;
},
 get$$$dom_length: function() {
  return this.length;
},
 $$dom_clear$0: function() {
  return this.clear();
},
 $$dom_getItem$1: function(key) {
  return this.getItem(key);
},
 $$dom_key$1: function(index) {
  return this.key(index);
},
 $$dom_removeItem$1: function(key) {
  return this.removeItem(key);
},
 $$dom_setItem$2: function(key, data) {
  return this.setItem(key,data);
},
 is$Map: function() { return true; }
});

$.$defineNativeClass('StorageEvent', {"": ["key>", "url>"]
});

$.$defineNativeClass('StorageInfo', {"": []
});

$.$defineNativeClass('HTMLStyleElement', {"": ["type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('StyleMedia', {"": ["type>"]
});

$.$defineNativeClass('StyleSheet', {"": ["type>"]
});

$.$defineNativeClass('HTMLTableCaptionElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableCellElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableColElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableElement', {"": ["rows>"],
 insertRow$1: function(index) {
  return this.insertRow(index);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableRowElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('HTMLTableSectionElement', {"": ["rows>"],
 insertRow$1: function(index) {
  return this.insertRow(index);
},
 is$Element: function() { return true; }
});

$.$defineNativeClass('Text', {"": []
});

$.$defineNativeClass('HTMLTextAreaElement', {"": ["name>", "rows>", "type>", "value="],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TextEvent', {"": []
});

$.$defineNativeClass('TextMetrics', {"": []
});

$.$defineNativeClass('TextTrack', {"": ["kind>"],
 get$on: function() {
  return $.TextTrackEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCue', {"": ["text="],
 get$on: function() {
  return $.TextTrackCueEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('TextTrackCueList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('TextTrackList', {"": ["length>"],
 get$on: function() {
  return $.TextTrackListEvents$(this);
},
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('TimeRanges', {"": ["length>"]
});

$.$defineNativeClass('HTMLTitleElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Touch', {"": [],
 get$target: function() {
  return $._convertNativeToDart_EventTarget(this.get$_target());
},
 get$_target: function() {
  return this.target;
}
});

$.$defineNativeClass('TouchEvent', {"": ["ctrlKey>"]
});

$.$defineNativeClass('TouchList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('HTMLTrackElement', {"": ["kind>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('TrackEvent', {"": []
});

$.$defineNativeClass('WebKitTransitionEvent', {"": []
});

$.$defineNativeClass('TreeWalker', {"": [],
 filter$1: function(arg0) { return this.filter.call$1(arg0); },
 filter$3: function(arg0, arg1, arg2) { return this.filter.call$3(arg0, arg1, arg2); }
});

$.$defineNativeClass('UIEvent', {"": ["keyCode>"]
});

$.$defineNativeClass('HTMLUListElement', {"": ["type>"],
 is$Element: function() { return true; }
});

$.$defineNativeClass('Uint16Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint32Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8Array', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  return this[index] = value;
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Uint8ClampedArray', {"": []
});

$.$defineNativeClass('HTMLUnknownElement', {"": [],
 is$Element: function() { return true; }
});

$.$defineNativeClass('URL', {"": []
});

$.$defineNativeClass('ValidityState', {"": []
});

$.$defineNativeClass('HTMLVideoElement', {"": []
});

$.$defineNativeClass('WaveShaperNode', {"": []
});

$.$defineNativeClass('WaveTable', {"": []
});

$.$defineNativeClass('WebGLActiveInfo', {"": ["name>", "type>"]
});

$.$defineNativeClass('WebGLBuffer', {"": []
});

$.$defineNativeClass('WebGLCompressedTextureS3TC', {"": []
});

$.$defineNativeClass('WebGLContextAttributes', {"": []
});

$.$defineNativeClass('WebGLContextEvent', {"": []
});

$.$defineNativeClass('WebGLDebugRendererInfo', {"": []
});

$.$defineNativeClass('WebGLDebugShaders', {"": []
});

$.$defineNativeClass('WebGLDepthTexture', {"": []
});

$.$defineNativeClass('WebGLFramebuffer', {"": []
});

$.$defineNativeClass('WebGLLoseContext', {"": []
});

$.$defineNativeClass('WebGLProgram', {"": []
});

$.$defineNativeClass('WebGLRenderbuffer', {"": []
});

$.$defineNativeClass('WebGLRenderingContext', {"": []
});

$.$defineNativeClass('WebGLShader', {"": []
});

$.$defineNativeClass('WebGLShaderPrecisionFormat', {"": []
});

$.$defineNativeClass('WebGLTexture', {"": []
});

$.$defineNativeClass('WebGLUniformLocation', {"": []
});

$.$defineNativeClass('WebGLVertexArrayObjectOES', {"": []
});

$.$defineNativeClass('WebKitCSSFilterValue', {"": []
});

$.$defineNativeClass('WebKitNamedFlow', {"": ["name>"],
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WebSocket', {"": ["url>"],
 get$on: function() {
  return $.WebSocketEvents$(this);
},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WheelEvent', {"": []
});

$.$defineNativeClass('Worker', {"": [],
 get$on: function() {
  return $.WorkerEvents$(this);
}
});

$.$defineNativeClass('WorkerContext', {"": ["location>", "navigator>"],
 get$on: function() {
  if (Object.getPrototypeOf(this).hasOwnProperty('get$on')) {
  {
  return $.WorkerContextEvents$(this);
}
  } else {
    return Object.prototype.get$on.call(this);
  }

},
 $$dom_addEventListener$3: function(type, listener, useCapture) {
  return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
},
 $$dom_removeEventListener$3: function(type, listener, useCapture) {
  return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
}
});

$.$defineNativeClass('WorkerLocation', {"": [],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('WorkerNavigator', {"": ["userAgent>"]
});

$.$defineNativeClass('XMLSerializer', {"": []
});

$.$defineNativeClass('XPathEvaluator', {"": []
});

$.$defineNativeClass('XPathException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('XPathExpression', {"": []
});

$.$defineNativeClass('XPathNSResolver', {"": []
});

$.$defineNativeClass('XPathResult', {"": ["stringValue>"]
});

$.$defineNativeClass('XSLTProcessor', {"": [],
 reset$0: function() {
  return this.reset();
},
 get$reset: function() { return new $.BoundClosure(this, 'reset$0'); }
});

$.$defineNativeClass('CSSRuleList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('CSSValueList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$JavaScriptIndexingBehavior: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; }
});

$.$defineNativeClass('ClientRectList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('DOMStringList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 contains$1: function(string) {
  return this.contains(string);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArray', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('EntryArraySync', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('FileList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$_FileList: function() { return true; },
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('GamepadList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('MediaStreamList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechInputResultList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SpeechRecognitionResultList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('StyleSheetList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('WebKitAnimationList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $._Collections_contains(this, element);
},
 forEach$1: function(f) {
  var t1;
  for (t1 = $.iterator(this); t1.get$hasNext() === true;)
    f.call$1(t1.next$0());
  return;
},
 filter$1: function(f) {
  return $._Collections_filter(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return $._Lists_indexOf(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return $._Lists_getRange(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('Worker', {"": []
});

$.$defineNativeClass('DOMWindow', {"": []
});

$.$defineNativeClass('SVGAElement', {"": ["target>"]
});

$.$defineNativeClass('SVGAltGlyphDefElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphElement', {"": []
});

$.$defineNativeClass('SVGAltGlyphItemElement', {"": []
});

$.$defineNativeClass('SVGAngle', {"": ["value="]
});

$.$defineNativeClass('SVGAnimateColorElement', {"": []
});

$.$defineNativeClass('SVGAnimateElement', {"": []
});

$.$defineNativeClass('SVGAnimateMotionElement', {"": []
});

$.$defineNativeClass('SVGAnimateTransformElement', {"": []
});

$.$defineNativeClass('SVGAnimatedAngle', {"": []
});

$.$defineNativeClass('SVGAnimatedBoolean', {"": []
});

$.$defineNativeClass('SVGAnimatedEnumeration', {"": []
});

$.$defineNativeClass('SVGAnimatedInteger', {"": []
});

$.$defineNativeClass('SVGAnimatedLength', {"": []
});

$.$defineNativeClass('SVGAnimatedLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedNumber', {"": []
});

$.$defineNativeClass('SVGAnimatedNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimatedPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGAnimatedRect', {"": []
});

$.$defineNativeClass('SVGAnimatedString', {"": []
});

$.$defineNativeClass('SVGAnimatedTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGAnimationElement', {"": []
});

$.$defineNativeClass('SVGCircleElement', {"": []
});

$.$defineNativeClass('SVGClipPathElement', {"": []
});

$.$defineNativeClass('SVGColor', {"": []
});

$.$defineNativeClass('SVGComponentTransferFunctionElement', {"": ["type>"]
});

$.$defineNativeClass('SVGCursorElement', {"": []
});

$.$defineNativeClass('SVGDefsElement', {"": []
});

$.$defineNativeClass('SVGDescElement', {"": []
});

$.$defineNativeClass('SVGDocument', {"": []
});

$.$defineNativeClass('SVGElement', {"": [],
 get$classes: function() {
  if (this._cssClassSet == null)
    this._cssClassSet = $._AttributeClassSet$(this);
  return this._cssClassSet;
},
 get$elements: function() {
  return $.FilteredElementList$(this);
},
 set$elements: function(value) {
  var elements = this.get$elements();
  $.getInterceptor(elements).clear$0(elements);
  $.getInterceptor(elements).addAll$1(elements, value);
},
 set$innerHTML: function(svg) {
  var container = $.Element_Element$tag('div');
  container.set$innerHTML('<svg version="1.1">' + $.S(svg) + '</svg>');
  this.set$elements($.index(container.get$elements(), 0).get$elements());
}
});

$.$defineNativeClass('SVGElementInstance', {"": [],
 get$on: function() {
  return $.SVGElementInstanceEvents$(this);
}
});

$.$defineNativeClass('SVGEllipseElement', {"": []
});

$.$defineNativeClass('SVGException', {"": ["name>"],
 toString$0: function() {
  return this.toString();
}
});

$.$defineNativeClass('SVGFEBlendElement', {"": []
});

$.$defineNativeClass('SVGFEColorMatrixElement', {"": ["type>"]
});

$.$defineNativeClass('SVGFEComponentTransferElement', {"": []
});

$.$defineNativeClass('SVGFECompositeElement', {"": []
});

$.$defineNativeClass('SVGFEConvolveMatrixElement', {"": []
});

$.$defineNativeClass('SVGFEDiffuseLightingElement', {"": []
});

$.$defineNativeClass('SVGFEDisplacementMapElement', {"": []
});

$.$defineNativeClass('SVGFEDistantLightElement', {"": []
});

$.$defineNativeClass('SVGFEDropShadowElement', {"": []
});

$.$defineNativeClass('SVGFEFloodElement', {"": []
});

$.$defineNativeClass('SVGFEFuncAElement', {"": []
});

$.$defineNativeClass('SVGFEFuncBElement', {"": []
});

$.$defineNativeClass('SVGFEFuncGElement', {"": []
});

$.$defineNativeClass('SVGFEFuncRElement', {"": []
});

$.$defineNativeClass('SVGFEGaussianBlurElement', {"": []
});

$.$defineNativeClass('SVGFEImageElement', {"": []
});

$.$defineNativeClass('SVGFEMergeElement', {"": []
});

$.$defineNativeClass('SVGFEMergeNodeElement', {"": []
});

$.$defineNativeClass('SVGFEMorphologyElement', {"": []
});

$.$defineNativeClass('SVGFEOffsetElement', {"": []
});

$.$defineNativeClass('SVGFEPointLightElement', {"": []
});

$.$defineNativeClass('SVGFESpecularLightingElement', {"": []
});

$.$defineNativeClass('SVGFESpotLightElement', {"": []
});

$.$defineNativeClass('SVGFETileElement', {"": []
});

$.$defineNativeClass('SVGFETurbulenceElement', {"": ["type>"]
});

$.$defineNativeClass('SVGFilterElement', {"": []
});

$.$defineNativeClass('SVGFontElement', {"": []
});

$.$defineNativeClass('SVGFontFaceElement', {"": []
});

$.$defineNativeClass('SVGFontFaceFormatElement', {"": []
});

$.$defineNativeClass('SVGFontFaceNameElement', {"": []
});

$.$defineNativeClass('SVGFontFaceSrcElement', {"": []
});

$.$defineNativeClass('SVGFontFaceUriElement', {"": []
});

$.$defineNativeClass('SVGForeignObjectElement', {"": []
});

$.$defineNativeClass('SVGGElement', {"": []
});

$.$defineNativeClass('SVGGlyphElement', {"": []
});

$.$defineNativeClass('SVGGlyphRefElement', {"": []
});

$.$defineNativeClass('SVGGradientElement', {"": []
});

$.$defineNativeClass('SVGHKernElement', {"": []
});

$.$defineNativeClass('SVGImageElement', {"": []
});

$.$defineNativeClass('SVGLength', {"": ["value="]
});

$.$defineNativeClass('SVGLengthList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGLineElement', {"": []
});

$.$defineNativeClass('SVGLinearGradientElement', {"": []
});

$.$defineNativeClass('SVGMPathElement', {"": []
});

$.$defineNativeClass('SVGMarkerElement', {"": []
});

$.$defineNativeClass('SVGMaskElement', {"": []
});

$.$defineNativeClass('SVGMatrix', {"": []
});

$.$defineNativeClass('SVGMetadataElement', {"": []
});

$.$defineNativeClass('SVGMissingGlyphElement', {"": []
});

$.$defineNativeClass('SVGNumber', {"": ["value="]
});

$.$defineNativeClass('SVGNumberList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPaint', {"": []
});

$.$defineNativeClass('SVGPathElement', {"": []
});

$.$defineNativeClass('SVGPathSeg', {"": []
});

$.$defineNativeClass('SVGPathSegArcAbs', {"": []
});

$.$defineNativeClass('SVGPathSegArcRel', {"": []
});

$.$defineNativeClass('SVGPathSegClosePath', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicAbs', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicRel', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothAbs', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoCubicSmoothRel', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticAbs', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticRel', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothAbs', {"": []
});

$.$defineNativeClass('SVGPathSegCurvetoQuadraticSmoothRel', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoAbs', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalAbs', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoHorizontalRel', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoRel', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoVerticalAbs', {"": []
});

$.$defineNativeClass('SVGPathSegLinetoVerticalRel', {"": []
});

$.$defineNativeClass('SVGPathSegList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGPathSegMovetoAbs', {"": []
});

$.$defineNativeClass('SVGPathSegMovetoRel', {"": []
});

$.$defineNativeClass('SVGPatternElement', {"": []
});

$.$defineNativeClass('SVGPoint', {"": []
});

$.$defineNativeClass('SVGPointList', {"": [],
 clear$0: function() {
  return this.clear();
}
});

$.$defineNativeClass('SVGPolygonElement', {"": []
});

$.$defineNativeClass('SVGPolylineElement', {"": []
});

$.$defineNativeClass('SVGPreserveAspectRatio', {"": []
});

$.$defineNativeClass('SVGRadialGradientElement', {"": []
});

$.$defineNativeClass('SVGRect', {"": []
});

$.$defineNativeClass('SVGRectElement', {"": []
});

$.$defineNativeClass('SVGRenderingIntent', {"": []
});

$.$defineNativeClass('SVGSVGElement', {"": []
});

$.$defineNativeClass('SVGScriptElement', {"": ["type>"]
});

$.$defineNativeClass('SVGSetElement', {"": []
});

$.$defineNativeClass('SVGStopElement', {"": []
});

$.$defineNativeClass('SVGStringList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGStyleElement', {"": ["type>"]
});

$.$defineNativeClass('SVGSwitchElement', {"": []
});

$.$defineNativeClass('SVGSymbolElement', {"": []
});

$.$defineNativeClass('SVGTRefElement', {"": []
});

$.$defineNativeClass('SVGTSpanElement', {"": []
});

$.$defineNativeClass('SVGTextContentElement', {"": []
});

$.$defineNativeClass('SVGTextElement', {"": []
});

$.$defineNativeClass('SVGTextPathElement', {"": []
});

$.$defineNativeClass('SVGTextPositioningElement', {"": []
});

$.$defineNativeClass('SVGTitleElement', {"": []
});

$.$defineNativeClass('SVGTransform', {"": ["type>"]
});

$.$defineNativeClass('SVGTransformList', {"": [],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.get$length(), 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 clear$0: function() {
  return this.clear();
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

$.$defineNativeClass('SVGUnitTypes', {"": []
});

$.$defineNativeClass('SVGUseElement', {"": []
});

$.$defineNativeClass('SVGVKernElement', {"": []
});

$.$defineNativeClass('SVGViewElement', {"": []
});

$.$defineNativeClass('SVGViewSpec', {"": []
});

$.$defineNativeClass('SVGZoomEvent', {"": []
});

$.$defineNativeClass('SVGElementInstanceList', {"": ["length>"],
 operator$index$1: function(index) {
  return this[index];
},
 oprator$indexSet$2: function(index, value) {
  throw $.$$throw($.UnsupportedError$('Cannot assign element of immutable List.'));
},
 iterator$0: function() {
  return $.FixedSizeListIterator$(this);
},
 add$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addLast$1: function(value) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 addAll$1: function(collection) {
  throw $.$$throw($.UnsupportedError$('Cannot add to immutable List.'));
},
 contains$1: function(element) {
  return $.contains$2(this.get$_Collections(), this, element);
},
 forEach$1: function(f) {
  return this.get$_Collections().forEach$2(this, f);
},
 filter$1: function(f) {
  return this.get$_Collections().filter$3(this, [], f);
},
 get$isEmpty: function() {
  return $.eq($.get$length(this), 0);
},
 sort$1: function(compare) {
  throw $.$$throw($.UnsupportedError$('Cannot sort immutable List.'));
},
 indexOf$2: function(element, start) {
  return this.get$_Lists().indexOf$4(this, element, start, $.get$length(this));
},
 indexOf$1: function(element) {
  return this.indexOf$2(element,0)
},
 get$last: function() {
  return this.operator$index$1($.sub(this.length, 1));
},
 removeLast$0: function() {
  throw $.$$throw($.UnsupportedError$('Cannot removeLast on immutable List.'));
},
 getRange$2: function(start, rangeLength) {
  return this.get$_Lists().getRange$4(this, start, rangeLength, []);
},
 is$List: function() { return true; },
 is$Collection: function() { return true; },
 is$JavaScriptIndexingBehavior: function() { return true; }
});

// 528 dynamic classes.
// 528 classes
// 41 !leaf
(function(){
  var v0/*class(Uint8Array)*/ = 'Uint8Array|Uint8ClampedArray';
  var v1/*class(AudioSourceNode)*/ = 'AudioSourceNode|AudioBufferSourceNode|MediaElementAudioSourceNode|MediaStreamAudioSourceNode|OscillatorNode';
  var v2/*class(_CSSValueList)*/ = 'CSSValueList|WebKitCSSTransformValue|WebKitCSSFilterValue';
  var v3/*class(SVGColor)*/ = 'SVGColor|SVGPaint';
  var v4/*class(Text)*/ = 'Text|CDATASection';
  var v5/*class(SVGTextPositioningElement)*/ = 'SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement';
  var v6/*class(SVGAnimationElement)*/ = 'SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement';
  var v7/*class(SVGComponentTransferFunctionElement)*/ = 'SVGComponentTransferFunctionElement|SVGFEFuncAElement|SVGFEFuncBElement|SVGFEFuncGElement|SVGFEFuncRElement';
  var v8/*class(SVGGradientElement)*/ = 'SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement';
  var v9/*class(SVGTextContentElement)*/ = [v5/*class(SVGTextPositioningElement)*/,'SVGTextContentElement|SVGTextPathElement'].join('|');
  var v10/*class(MediaElement)*/ = 'HTMLMediaElement|HTMLAudioElement|HTMLVideoElement';
  var v11/*class(SVGElement)*/ = [v6/*class(SVGAnimationElement)*/,v7/*class(SVGComponentTransferFunctionElement)*/,v8/*class(SVGGradientElement)*/,v9/*class(SVGTextContentElement)*/,'SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGAltGlyphItemElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEBlendElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFECompositeElement|SVGFEConvolveMatrixElement|SVGFEDiffuseLightingElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEDropShadowElement|SVGFEFloodElement|SVGFEGaussianBlurElement|SVGFEImageElement|SVGFEMergeElement|SVGFEMergeNodeElement|SVGFEMorphologyElement|SVGFEOffsetElement|SVGFEPointLightElement|SVGFESpecularLightingElement|SVGFESpotLightElement|SVGFETileElement|SVGFETurbulenceElement|SVGFilterElement|SVGFontElement|SVGFontFaceElement|SVGFontFaceFormatElement|SVGFontFaceNameElement|SVGFontFaceSrcElement|SVGFontFaceUriElement|SVGForeignObjectElement|SVGGElement|SVGGlyphElement|SVGGlyphRefElement|SVGHKernElement|SVGImageElement|SVGLineElement|SVGMPathElement|SVGMarkerElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGPathElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGSVGElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement'].join('|');
  var v12/*class(MouseEvent)*/ = 'MouseEvent|WheelEvent';
  var v13/*class(ProgressEvent)*/ = 'ProgressEvent|XMLHttpRequestProgressEvent';
  var v14/*class(UIEvent)*/ = [v12/*class(MouseEvent)*/,'UIEvent|CompositionEvent|KeyboardEvent|TextEvent|TouchEvent|SVGZoomEvent'].join('|');
  var v15/*class(CharacterData)*/ = [v4/*class(Text)*/,'CharacterData|Comment'].join('|');
  var v16/*class(Document)*/ = 'Document|HTMLDocument|SVGDocument';
  var v17/*class(DocumentFragment)*/ = 'DocumentFragment|ShadowRoot';
  var v18/*class(Element)*/ = [v10/*class(MediaElement)*/,v11/*class(SVGElement)*/,'Element|HTMLElement|HTMLAnchorElement|HTMLAppletElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBaseFontElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDirectoryElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFontElement|HTMLFormElement|HTMLFrameElement|HTMLFrameSetElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMarqueeElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement'].join('|');
  var v19/*class(AbstractWorker)*/ = 'AbstractWorker|SharedWorker|Worker';
  var v20/*class(IDBRequest)*/ = 'IDBRequest|IDBOpenDBRequest|IDBVersionChangeRequest';
  var v21/*class(MediaStream)*/ = 'MediaStream|LocalMediaStream';
  var v22/*class(Node)*/ = [v15/*class(CharacterData)*/,v16/*class(Document)*/,v17/*class(DocumentFragment)*/,v18/*class(Element)*/,'Node|Attr|DocumentType|EntityReference|Notation|ProcessingInstruction'].join('|');
  var v23/*class(WorkerContext)*/ = 'WorkerContext|DedicatedWorkerContext|SharedWorkerContext';
  var table = [
    // [dynamic-dispatch-tag, tags of classes implementing dynamic-dispatch-tag]
    ['AbstractWorker', v19/*class(AbstractWorker)*/],
    ['Uint8Array', v0/*class(Uint8Array)*/],
    ['ArrayBufferView', [v0/*class(Uint8Array)*/,'ArrayBufferView|DataView|Float32Array|Float64Array|Int16Array|Int32Array|Int8Array|Uint16Array|Uint32Array'].join('|')],
    ['AudioSourceNode', v1/*class(AudioSourceNode)*/],
    ['AudioNode', [v1/*class(AudioSourceNode)*/,'AudioNode|AnalyserNode|AudioDestinationNode|BiquadFilterNode|ChannelMergerNode|ChannelSplitterNode|ConvolverNode|DelayNode|DynamicsCompressorNode|GainNode|PannerNode|ScriptProcessorNode|WaveShaperNode'].join('|')],
    ['AudioParam', 'AudioParam|AudioGain'],
    ['Blob', 'Blob|File'],
    ['CSSRule', 'CSSRule|CSSCharsetRule|CSSFontFaceRule|CSSImportRule|WebKitCSSKeyframeRule|WebKitCSSKeyframesRule|CSSMediaRule|CSSPageRule|CSSStyleRule|CSSUnknownRule'],
    ['CSSValueList', v2/*class(_CSSValueList)*/],
    ['SVGColor', v3/*class(SVGColor)*/],
    ['CSSValue', [v2/*class(_CSSValueList)*/,v3/*class(SVGColor)*/,'CSSValue|CSSPrimitiveValue'].join('|')],
    ['CanvasRenderingContext', 'CanvasRenderingContext|CanvasRenderingContext2D|WebGLRenderingContext'],
    ['Text', v4/*class(Text)*/],
    ['CharacterData', v15/*class(CharacterData)*/],
    ['DOMTokenList', 'DOMTokenList|DOMSettableTokenList'],
    ['Document', v16/*class(Document)*/],
    ['DocumentFragment', v17/*class(DocumentFragment)*/],
    ['HTMLMediaElement', v10/*class(MediaElement)*/],
    ['SVGAnimationElement', v6/*class(SVGAnimationElement)*/],
    ['SVGComponentTransferFunctionElement', v7/*class(SVGComponentTransferFunctionElement)*/],
    ['SVGGradientElement', v8/*class(SVGGradientElement)*/],
    ['SVGTextPositioningElement', v5/*class(SVGTextPositioningElement)*/],
    ['SVGTextContentElement', v9/*class(SVGTextContentElement)*/],
    ['SVGElement', v11/*class(SVGElement)*/],
    ['Element', v18/*class(Element)*/],
    ['Entry', 'Entry|DirectoryEntry|FileEntry'],
    ['EntrySync', 'EntrySync|DirectoryEntrySync|FileEntrySync'],
    ['ProgressEvent', v13/*class(ProgressEvent)*/],
    ['MouseEvent', v12/*class(MouseEvent)*/],
    ['UIEvent', v14/*class(UIEvent)*/],
    ['Event', [v13/*class(ProgressEvent)*/,v14/*class(UIEvent)*/,'Event|WebKitAnimationEvent|AudioProcessingEvent|BeforeLoadEvent|CloseEvent|CustomEvent|DeviceMotionEvent|DeviceOrientationEvent|ErrorEvent|HashChangeEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent|OfflineAudioCompletionEvent|OverflowEvent|PageTransitionEvent|PopStateEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent'].join('|')],
    ['IDBRequest', v20/*class(IDBRequest)*/],
    ['MediaStream', v21/*class(MediaStream)*/],
    ['Node', v22/*class(Node)*/],
    ['WorkerContext', v23/*class(WorkerContext)*/],
    ['EventTarget', [v19/*class(AbstractWorker)*/,v20/*class(IDBRequest)*/,v21/*class(MediaStream)*/,v22/*class(Node)*/,v23/*class(WorkerContext)*/,'EventTarget|AudioContext|BatteryManager|DOMApplicationCache|EventSource|FileReader|FileWriter|XMLHttpRequest|XMLHttpRequestUpload|IDBDatabase|IDBTransaction|DOMWindow|MediaController|MediaSource|MediaStreamTrack|MediaStreamTrackList|MessagePort|Notification|PeerConnection00|Performance|RTCDataChannel|RTCPeerConnection|SourceBufferList|SpeechRecognition|TextTrack|TextTrackCue|TextTrackList|WebKitNamedFlow|WebSocket|SVGElementInstance'].join('|')],
    ['HTMLCollection', 'HTMLCollection|HTMLOptionsCollection'],
    ['IDBCursor', 'IDBCursor|IDBCursorWithValue'],
    ['NodeList', 'NodeList|RadioNodeList'],
    ['StyleSheet', 'StyleSheet|CSSStyleSheet'],
    ['SVGPathSeg', 'SVGPathSeg|SVGPathSegArcAbs|SVGPathSegArcRel|SVGPathSegClosePath|SVGPathSegCurvetoCubicAbs|SVGPathSegCurvetoCubicRel|SVGPathSegCurvetoCubicSmoothAbs|SVGPathSegCurvetoCubicSmoothRel|SVGPathSegCurvetoQuadraticAbs|SVGPathSegCurvetoQuadraticRel|SVGPathSegCurvetoQuadraticSmoothAbs|SVGPathSegCurvetoQuadraticSmoothRel|SVGPathSegLinetoAbs|SVGPathSegLinetoHorizontalAbs|SVGPathSegLinetoHorizontalRel|SVGPathSegLinetoRel|SVGPathSegLinetoVerticalAbs|SVGPathSegLinetoVerticalRel|SVGPathSegMovetoAbs|SVGPathSegMovetoRel']];
$.dynamicSetMetadata(table);
})();


//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState != 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.main(); });
      } else {
        $.main();
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.main(); });
  } else {
    $.main();
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
Isolate.$defineClass = function(cls, fields, prototype) {
  var generateGetterSetter =   function(field, prototype) {
    var len = field.length;
    var lastCharCode = field.charCodeAt(len - 1);
    var needsAccessor = (lastCharCode & 63) >= 60;
    if (needsAccessor) {
      var needsGetter = (lastCharCode & 3) > 0;
      var needsSetter = (lastCharCode & 2) == 0;
      var renaming = (lastCharCode & 64) != 0;
      var accessorName = field = field.substring(0, len - 1);
      if (renaming) {
        var divider = field.indexOf(":");
        accessorName = field.substring(0, divider);
        field = field.substring(divider + 1);
      }
      if (needsGetter) {
        var getterString = "return this." + field + ";";
        prototype["get$" + accessorName] = new Function(getterString);
      }
      if (needsSetter) {
        var setterString = "this." + field + " = v;";
        prototype["set$" + accessorName] = new Function("v", setterString);
      }
    }
    return field;
  };
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateGetterSetter(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, desc[''], desc);
      if (desc['super'] !== "") Isolate.$pendingClasses[cls] = desc['super'];
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (member == '' || member == 'super') continue;
        if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  var getter = new Function("{ return $." + fieldName + ";}");
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } catch (e) {
          if ($[fieldName] === sentinelInProgress) {
            $[fieldName] = null;
          }
          throw e;
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}
